local HWIDTable = { 
"1F46F7B9-9726-409C-85B9-609AB40F3879", --owner
"B2C5A47B-4432-4416-9D9F-849837375D8E", --buyer
"1F46F7B9-9726-409C-85B9-609AB40F3877", --staff
"64201EF3-8876-4AD6-831B-760D3BF5E02A", --buyer
"F2043F28-95B1-4D5A-8526-961733B952F3", --staff
"617441F4-C36D-4744-80EF-2649D8670C2B", --buyer
"2BC79272-DB06-4D84-90D2-EBF5CB2C930D", --buyer
"B2C5A47B-4432-4416-9D9F-849837375D8E", --buyer
"5DD00655-0A49-4C84-8879-AF3E6297F991", --buyer
"0A016448-CA13-4F9F-AF4A-C542F45B3FAD", --buyer
"D88DD9F9-DADF-4520-B663-2DA0F7B4954A", --Rock
"33387EE5-E805-4F2F-8019-26BBECBF1455", --giveaway winner
"8D62FF6A-65B2-487B-866E-44C094298A03" --buyer
}
local HWID = (game:GetService("RbxAnalyticsService"):GetClientId())

for i,v in pairs(HWIDTable) do
	if v == HWID then
		print("User verified, welcome", game.Players.LocalPlayer)
game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Script Executed!"; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait()
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "The wild west gui OP v1.5.0 PremiumVersion"; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait(1)
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Loading Gui"; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait(1)
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Gui Loaded"; --chat notification
    Font = Enum.Font.GothamBlack; --font changeable
    FontSize = Enum.FontSize.Size24; --font size changeable
    })
    wait()
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
    local Window = Library.CreateLib("Venushack Premium OP V1.5.0", "BloodTheme")
    
    local Tab = Window:NewTab("Player")
    local Section = Tab:NewSection("Solo script")
    Section:NewToggle("Auto WalkSpeed", "Turns on walkspeed every 0.5s", function(state2)
        if state2 then
            _G.DO44 = true
                    while wait(0.5) and _G.DO44 == true do
    
                        getgenv().WalkSpeedValue = _G.lol;
                        local Player = game:service'Players'.LocalPlayer;
                        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
                        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                        end)
                        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end
        else
             _G.DO44 = false
        end
    end)
    
    Section:NewSlider("WalkSpeed", "Just walkspeed changuer", 28, 8, function(s)
        _G.lol = s
        getgenv().WalkSpeedValue = s;
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    
    Section:NewButton("Inf horse stamina + Anti jump delai + Inf Stamina", "Very VERY OP lol", function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Cesare0328/my-scripts/main/wwstam', true))()
    end)
    
    Section:NewButton("Inf stamina + No fall damage V1.1", "Very op thing", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\97\112\105\46\117\112\108\111\97\100\46\115\121\115\116\101\109\115\47\112\97\115\116\101\115\47\111\122\99\49\72\77\80\68\51\89\56\72\47\114\97\119",true))()
    end)
    
    Section:NewButton("Add light to your character", "Just light | Click again = more light | !LOCAL!", function()
        character = game:GetService("Players").LocalPlayer.Character
    pointLight = Instance.new("PointLight")
    pointLight.Parent = character.HumanoidRootPart
    end)
    
    Section:NewButton("Cframe walk", "CFrame walk (Press LeftShift)", function()
        local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
    UIS.InputBegan:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.LeftShift then
                _G.Running = true
                    while wait(0.005) and _G.Running == true do
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 0.3
    
    end
            end
    end)
    UIS.InputEnded:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.LeftShift then
                    _G.Running = false
            end
    end)
    end)
    Section:NewToggle("No gravity", "Gravity toggle", function(state)
        if state then
            loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\71\114\97\118\105\116\121\115\47\103\114\97\118\105\116\121\79\110"))()
        else
            loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\71\114\97\118\105\116\121\115\47\71\114\97\118\105\116\121\79\102\102"))()
        end
    end)
    Section:NewToggle("Hight HipHeight", "idk", function(state)
        if state then
            loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\72\105\112\72\101\105\103\104\116\115\47\72\105\112\104\101\105\103\104\116\65\98\105\116"))()
        else
            loadstring(game:HttpGet('https://raw.githubusercontent.com/KeoneGithubSpam/KeoneGithubSpam/main/HipHeights/HipheightNormal'))()
        end
    end)
    Section:NewToggle("Low HipHeight", "idk", function(state)
        if state then
            loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\72\105\112\72\101\105\103\104\116\115\47\77\111\100\101\114\97\116\111\114\72\101\105\103\104\116"))()
        else
            loadstring(game:HttpGet('https://raw.githubusercontent.com/KeoneGithubSpam/KeoneGithubSpam/main/HipHeights/HipheightNormal'))()
        end
    end)
    _G.delai = 1
    Section:NewTextBox("Auto message delai", "type in the box the delai", function(msgxd1)
        _G.delai = msgxd1
    end)
    Section:NewTextBox("message", "Type in the box the message", function(msgxd)
        _G.message = msgxd
    end)
    Section:NewToggle("Auto msg", "UH", function(state2)
        if state2 then
            _G.DO414 = true
                    while wait(_G.delai) and _G.DO414 == true do
    
                        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(_G.message, "All")
    end
        else
             _G.DO414 = false
        end
    end)
    Section:NewButton("AntiAFK", "idk how this works", function()
        loadstring(game:HttpGet('https://cdn.y2k06.xyz/lua/UniversalAntiAfk.lua', true))()
    end)
    
    Section:NewButton("Auto Press E", "Key = X", function()
        local VirtualInputManager = game:GetService("VirtualInputManager")
        local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
    UIS.InputBegan:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.X then
                _G.e = true
                    while wait(0) and _G.e == true do
    VirtualInputManager:SendKeyEvent(true, "E", false, game)
    wait(0)
    VirtualInputManager:SendKeyEvent(false, "E", false, game)
    end
            end
    end)
    UIS.InputEnded:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.X then
                    _G.e = false
            end
    end)
    end)

    Section:NewButton("Suicide key = N", "Key = X", function()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Obtener la instancia HumanoidRootPart del personaje
local rootPart = character:WaitForChild("HumanoidRootPart")

        local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
    UIS.InputBegan:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.N then
                _G.R1unning = true
                    while wait(0.005) and _G.R1unning == true do
                        local newPosition = rootPart.CFrame + Vector3.new(0, 100000, 0) -- cambiar el valor "50" seg√∫n la altura deseada
                        rootPart.CFrame = newPosition
    end
            end
    end)
    UIS.InputEnded:connect(function(UserInput)
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.N then
                    _G.R1unning = false
            end
    end)
    end)
    

    local Tab = Window:NewTab("Teleports/Spawns")
    local Section = Tab:NewSection("Solo Script")
    Section:NewButton("Bronze city", "op", function()
        local gaeorsi = { [1] = "\66\114\111\110\122\101" } game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101").Communication.Functions.Respawn:InvokeServer(unpack(gaeorsi))
    end)
    Section:NewButton("Puerto Dorado", "op", function()
        local gaeorsi = { [1] = "\68\111\114\97\100\111" } game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101").Communication.Functions.Respawn:InvokeServer(unpack(gaeorsi))
    end)
    Section:NewButton("Reservation camp", "op", function()
        local gaeorsi = { [1] = "\84\114\105\98\97\108" } game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101").Communication.Functions.Respawn:InvokeServer(unpack(gaeorsi))
    end)
    Section:NewButton("Callahan manor", "op", function()
        local gaeorsi = { [1] = "\68\101\108\111\114\101\115" } game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101").Communication.Functions.Respawn:InvokeServer(unpack(gaeorsi))
    end)
    Section:NewButton("Windmill camp", "op", function()
        local gaeorsi = { [1] = "\87\105\110\100\109\105\108\108\67\97\109\112" } game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101").Communication.Functions.Respawn:InvokeServer(unpack(gaeorsi))
    end)
    
    local Tab = Window:NewTab("Animal hacks")
    local Section = Tab:NewSection("Solo Script")
    
    Section:NewButton("Bear and bison esp", "Good esp", function()
    loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\97\112\105\46\117\112\108\111\97\100\46\115\121\115\116\101\109\115\47\112\97\115\116\101\115\47\70\68\75\70\51\106\69\102\80\109\81\53\47\114\97\119",true))()
    end)
    
    Section:NewButton("Animal Hitbox Extender V1.1 OP(Reset size)", "Make all animal hitbox bigger", function()
        for i, v in pairs(game.Workspace.WORKSPACE_Entities.Animals:GetChildren()) do if v.Name == "\66\105\115\111\110" or v.Name == "\68\101\101\114" or v.Name == "\66\101\97\114" or v.Name == "\71\97\116\111\114" then v.HumanoidRootPart.Size = Vector3.new(1,1,1) v.Head.Size = Vector3.new(2,1,2) v.Body.Transparency = 1 v.Head.Transparency = 1 v.HumanoidRootPart.Transparency = 1 v.Head.Transparency = 1 end end
    end)
    Section:NewButton("Animal Hitbox Extender V1.1 OP(SIZE = 10)", "Make all animal hitbox bigger", function()
        for i, v in pairs(game.Workspace.WORKSPACE_Entities.Animals:GetChildren()) do if v.Name == "\66\105\115\111\110" or v.Name == "\68\101\101\114" or v.Name == "\66\101\97\114" or v.Name == "\71\97\116\111\114" then v.HumanoidRootPart.Size = Vector3.new(5,5,5) v.Head.Size = Vector3.new(10,10,10) v.Body.Transparency = 0.5 v.Head.Transparency = 0.5 v.HumanoidRootPart.Transparency = 0.5 end end
    end)
    Section:NewButton("Animal Hitbox Extender V1.1 OP(SIZE = 20)", "Make all animal hitbox bigger", function()
        for i, v in pairs(game.Workspace.WORKSPACE_Entities.Animals:GetChildren()) do if v.Name == "\66\105\115\111\110" or v.Name == "\68\101\101\114" or v.Name == "\66\101\97\114" or v.Name == "\71\97\116\111\114" then v.HumanoidRootPart.Size = Vector3.new(5,5,5) v.Head.Size = Vector3.new(20,20,20) v.Body.Transparency = 0.5 v.Head.Transparency = 0.5 v.HumanoidRootPart.Transparency = 0.5 end end
    end)
    
    local Tab = Window:NewTab("Combat W")
    local Section = Tab:NewSection("ALERT! Gun mods can be detect by players!!!")
    Section:NewLabel("Gun mods")
    Section:NewToggle("Instant reload", "So fast", function(state)
        if state then
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.ReloadSpeed = 4.5
                    v.LoadSpeed = 4.5
                    v.LoadEndSpeed = 4.5
                print("Modified:" , v)
                  for ch,e in pairs(v) do
              print(ch,e)
               
               
                end
                end
              end
        else
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.ReloadSpeed = 1
                    v.LoadSpeed = 1
                    v.LoadEndSpeed = 1
                print("Modified:" , v)
                  for ch,e in pairs(v) do
              print(ch,e)
               
               
                end
                end
              end
        end
    end)
    Section:NewToggle("Fast Gun / Fast shot", "FireSpeed = 10000 when enabled", function(state)
        if state then
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.FireSpeed = 100000
                    print("Modified:" , v)
                    for ch,e in pairs(v) do
                        --print(ch,e)
            
            
                    end
                end
            end
        else
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.FireSpeed = 1
                    print("Modified:" , v)
                    for ch,e in pairs(v) do
                        --print(ch,e)
            
            
                    end
                end
            end
        end
    end)
    
    
    Section:NewToggle("No recoil", "no recoil xd", function(state)
        if state then
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.Recoil = 0
                    v.BaseRecoil = 0
                    print("Modified:" , v)
                    for ch,e in pairs(v) do
                        --print(ch,e)
        
                    end
                end
            end
        else
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.Recoil = 10
                    v.BaseRecoil = 10
                    print("Modified:" , v)
                    for ch,e in pairs(v) do
                        --print(ch,e)
        
        
                    end
                end
            end
        end
    end)
    Section:NewToggle("WallBang", "Pro tip: Use SILENT AIM", function(state)
        if state then
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.ProjectilePenetration = 100000
                    print("WallbangOn:" , v)
                    for ch,e in pairs(v) do
                        --print(ch,e)
    
    
                    end
                end
            end
        else
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.ProjectilePenetration = 1
                    print("WallbangOn:" , v)
                    for ch,e in pairs(v) do
                        --print(ch,e)
    
                    end
                end
            end
        end
    end)
    
    Section:NewButton("HightAccuracy + No spread", "idk", function()
        for i, v in pairs(getgc(true)) do
            if type(v) == "table" and rawget(v, "BaseRecoil") then
                v.ProjectileAccuracy = 1
                v.ProjectileBase = 100000
                print("Modified:" , v)
                for ch,e in pairs(v) do
                    --print(ch,e)
    
    
                end
            end
        end   
    end)
    Section:NewLabel("AIM SCRIPTS")
    Section:NewLabel("Aimbot")
    Section:NewSlider("Fov Radius", "Default = 120", 420, 20, function(s1)
        _G.CircleRadius = s1
    end)
    Section:NewToggle("Fov Visible", "Defaults to true", function(state)
        if state then
            _G.CircleVisible = true
        else
            _G.CircleVisible = false
        end
    end)
    Section:NewToggle("Toggle aimbot", "Defaults to true", function(state)
        if state then
            _G.AimbotEnabled = true
        else
            _G.AimbotEnabled = false
        end
    end)
    Section:NewToggle("TeamCheck", "Defaults to false", function(state)
        if state then
            _G.TeamCheck = true
        else
            _G.TeamCheck = false
        end
    end)
    Section:NewButton("Aimbot by me", "Key = MouseButton2", function()
            --Aimbot by lolocahhh45
        
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local Camera = workspace.CurrentCamera
            local RunService = game:GetService("RunService")
            local UserInputService = game:GetService("UserInputService")
            local TweenService = game:GetService("TweenService")
            local Holding = false
        
            --Aimbot settings
        
            _G.AimbotEnabled = true
            _G.TeamCheck = false
            _G.AimPart = "Head"
            _G.Sensitivity = 0.000000000001
        
            -- Fov Circle Settings
        
            _G.CircleSides = 64
            _G.CircleColor = Color3.fromRGB(255, 255, 255)
            _G.CircleTransparency = 1
            _G.CircleRadius = 120
            _G.CircleFilled = false
            _G.CircleVisible = true
            _G.CircleThickness = false
        
            local FOVCircle = Drawing.new("Circle")
        
            FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
            FOVCircle.Radius = _G.CircleRadius
            FOVCircle.Filled = _G.CircleFilled
            FOVCircle.Color = _G.CircleColor
            FOVCircle.Visible = _G.CircleVisible
            FOVCircle.Transparency = _G.CircleTransparency
            FOVCircle.Sides = _G.CircleSides
            FOVCircle.Thickness = _G.CircleThickness
        
            --Gets players for fov
        
            local function getClosestPlayer()
                local MaximumDistance = _G.CircleRadius
                local Target = nil
        
                for _, v in next, Players:GetPlayers() do
                    if v.Name ~= LocalPlayer.Name then 
                        if _G.TeamCheck == true then
                            if  v.Team ~= LocalPlayer.Team then
                                if v.Character ~= nil then
                                    if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                                        if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                            local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                            local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
        
                                            if VectorDistance < MaximumDistance then
                                                Target = v
                                            end
                                        end
                                    end
                                end
                            end
                        else
                            if v.Character ~= nil then
                                if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                                    if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                        local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                        local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
        
                                        if VectorDistance < MaximumDistance then
                                            Target = v
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                
                return Target
            end    
        
        --Detect when you press Z and make Holding = true / Holding = false
        
        UserInputService.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton2 then
                Holding = true
            end
        end)  
        
        UserInputService.InputEnded:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton2 then
                Holding = false
            end
        end)
        
            RunService.RenderStepped:Connect(function()
                FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                FOVCircle.Radius = _G.CircleRadius
                FOVCircle.Filled = _G.CircleFilled
                FOVCircle.Color = _G.CircleColor
                FOVCircle.Visible = _G.CircleVisible
                FOVCircle.Transparency = _G.CircleTransparency
                FOVCircle.Sides = _G.CircleSides
                FOVCircle.Thickness = _G.CircleThickness
        
                if Holding == true and _G.AimbotEnabled == true then
                    TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, getClosestPlayer().Character[_G.AimPart].Position)}):Play()
                end
            end)
    end)
    Section:NewButton("Aimbot Hub (better option)", "Nothing happen? tell in dc", function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Blissful4992/Miscellaneous/main/UNIVERSAL.lua"))()
    end)
    Section:NewLabel("Silent aim")
    Section:NewButton("Silent aim (Pending fix)", "Toggle = RightControl,RightShift (ADDED IN 1.4.5)", function()
        -- init
    if not game:IsLoaded() then 
        game.Loaded:Wait()
    end
    
    if not syn or not protectgui then
        getgenv().protectgui = function() end
    end
    
    local SilentAimSettings = {
        Enabled = false,
        
        ClassName = "Rip",
        ToggleKey = "RightAlt",
        
        TeamCheck = false,
        VisibleCheck = false, 
        TargetPart = "HumanoidRootPart",
        SilentAimMethod = "Best Method",
        
        FOVRadius = 130,
        FOVVisible = false,
        ShowSilentAimTarget = false, 
        
        MouseHitPrediction = false,
        MouseHitPredictionAmount = 0.165,
        HitChance = 70}
    
    -- variables
    getgenv().SilentAimSettings = Settings
    local MainFileName = "UniversalSilentAim"
    local SelectedFile, FileToSave = "", ""
    
    local Camera = workspace.CurrentCamera
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local GuiService = game:GetService("GuiService")
    local UserInputService = game:GetService("UserInputService")
    local HttpService = game:GetService("HttpService")
    
    local LocalPlayer = Players.LocalPlayer
    local Mouse = LocalPlayer:GetMouse()
    
    local GetChildren = game.GetChildren
    local GetPlayers = Players.GetPlayers
    local WorldToScreen = Camera.WorldToScreenPoint
    local WorldToViewportPoint = Camera.WorldToViewportPoint
    local GetPartsObscuringTarget = Camera.GetPartsObscuringTarget
    local FindFirstChild = game.FindFirstChild
    local RenderStepped = RunService.RenderStepped
    local GuiInset = GuiService.GetGuiInset
    local GetMouseLocation = UserInputService.GetMouseLocation
    
    local resume = coroutine.resume 
    local create = coroutine.create
    
    local ValidTargetParts = {"Head", "HumanoidRootPart"}
    local PredictionAmount = 0.165
    
    local mouse_box = Drawing.new("Square")
    mouse_box.Visible = true 
    mouse_box.ZIndex = 999 
    mouse_box.Color = Color3.fromRGB(54, 57, 241)
    mouse_box.Thickness = 20 
    mouse_box.Size = Vector2.new(20, 20)
    mouse_box.Filled = true 
    
    local fov_circle = Drawing.new("Circle")
    fov_circle.Thickness = 1
    fov_circle.NumSides = 100
    fov_circle.Radius = 180
    fov_circle.Filled = false
    fov_circle.Visible = false
    fov_circle.ZIndex = 999
    fov_circle.Transparency = 1
    fov_circle.Color = Color3.fromRGB(54, 57, 241)
    
    local ExpectedArguments = {
        FindPartOnRayWithIgnoreList = {
            ArgCountRequired = 3,
            Args = {
                "Instance", "Ray", "table", "boolean", "boolean"
            }
        },
        FindPartOnRayWithWhitelist = {
            ArgCountRequired = 3,
            Args = {
                "Instance", "Ray", "table", "boolean"
            }
        },
        FindPartOnRay = {
            ArgCountRequired = 2,
            Args = {
                "Instance", "Ray", "Instance", "boolean", "boolean"
            }
        },
        Raycast = {
            ArgCountRequired = 3,
            Args = {
                "Instance", "Vector3", "Vector3", "RaycastParams"
            }
        }
    }
    
    function CalculateChance(Percentage)
        -- // Floor the percentage
        Percentage = math.floor(Percentage)
    
        -- // Get the chance
        local chance = math.floor(Random.new().NextNumber(Random.new(), 0, 1) * 100) / 100
    
        -- // Return
        return chance <= Percentage / 100
    end
    
    
    --[[file handling]] do 
        if not isfolder(MainFileName) then 
            makefolder(MainFileName);
        end
        
        if not isfolder(string.format("%s/%s", MainFileName, tostring(game.PlaceId))) then 
            makefolder(string.format("%s/%s", MainFileName, tostring(game.PlaceId)))
        end
    end
    
    local Files = listfiles(string.format("%s/%s", "UniversalSilentAim", tostring(game.PlaceId)))
    
    -- functions
    local function GetFiles() -- credits to the linoria lib for this function, listfiles returns the files full path and its annoying
        local out = {}
        for i = 1, #Files do
            local file = Files[i]
            if file:sub(-4) == '.lua' then
                -- i hate this but it has to be done ...
    
                local pos = file:find('.lua', 1, true)
                local start = pos
    
                local char = file:sub(pos, pos)
                while char ~= '/' and char ~= '\\' and char ~= '' do
                    pos = pos - 1
                    char = file:sub(pos, pos)
                end
    
                if char == '/' or char == '\\' then
                    table.insert(out, file:sub(pos + 1, start - 1))
                end
            end
        end
        
        return out
    end
    
    local function UpdateFile(FileName)
        assert(FileName or FileName == "string", "oopsies");
        writefile(string.format("%s/%s/%s.lua", MainFileName, tostring(game.PlaceId), FileName), HttpService:JSONEncode(SilentAimSettings))
    end
    
    local function LoadFile(FileName)
        assert(FileName or FileName == "string", "oopsies");
        
        local File = string.format("%s/%s/%s.lua", MainFileName, tostring(game.PlaceId), FileName)
        local ConfigData = HttpService:JSONDecode(readfile(File))
        for Index, Value in next, ConfigData do
            SilentAimSettings[Index] = Value
        end
    end
    
    local function getPositionOnScreen(Vector)
        local Vec3, OnScreen = WorldToScreen(Camera, Vector)
        return Vector2.new(Vec3.X, Vec3.Y), OnScreen
    end
    
    local function ValidateArguments(Args, RayMethod)
        local Matches = 0
        if #Args < RayMethod.ArgCountRequired then
            return false
        end
        for Pos, Argument in next, Args do
            if typeof(Argument) == RayMethod.Args[Pos] then
                Matches = Matches + 1
            end
        end
        return Matches >= RayMethod.ArgCountRequired
    end
    
    local function getDirection(Origin, Position)
        return (Position - Origin).Unit * 1000
    end
    
    local function getMousePosition()
        return GetMouseLocation(UserInputService)
    end
    
    local function IsPlayerVisible(Player)
        local PlayerCharacter = Player.Character
        local LocalPlayerCharacter = LocalPlayer.Character
        
        if not (PlayerCharacter or LocalPlayerCharacter) then return end 
        
        local PlayerRoot = FindFirstChild(PlayerCharacter, Options.TargetPart.Value) or FindFirstChild(PlayerCharacter, "HumanoidRootPart")
        
        if not PlayerRoot then return end 
        
        local CastPoints, IgnoreList = {PlayerRoot.Position, LocalPlayerCharacter, PlayerCharacter}, {LocalPlayerCharacter, PlayerCharacter}
        local ObscuringObjects = #GetPartsObscuringTarget(Camera, CastPoints, IgnoreList)
        
        return ((ObscuringObjects == 0 and true) or (ObscuringObjects > 0 and false))
    end
    
    local function getClosestPlayer()
        if not Options.TargetPart.Value then return end
        local Closest
        local DistanceToMouse
        for _, Player in next, GetPlayers(Players) do
            if Player == LocalPlayer then continue end
            if Toggles.TeamCheck.Value and Player.Team == LocalPlayer.Team then continue end
    
            local Character = Player.Character
            if not Character then continue end
            
            if Toggles.VisibleCheck.Value and not IsPlayerVisible(Player) then continue end
    
            local HumanoidRootPart = FindFirstChild(Character, "HumanoidRootPart")
            local Humanoid = FindFirstChild(Character, "Humanoid")
            if not HumanoidRootPart or not Humanoid or Humanoid and Humanoid.Health <= 0 then continue end
    
            local ScreenPosition, OnScreen = getPositionOnScreen(HumanoidRootPart.Position)
            if not OnScreen then continue end
    
            local Distance = (getMousePosition() - ScreenPosition).Magnitude
            if Distance <= (DistanceToMouse or Options.Radius.Value or 2000) then
                Closest = ((Options.TargetPart.Value == "Random" and Character[ValidTargetParts[math.random(1, #ValidTargetParts)]]) or Character[Options.TargetPart.Value])
                DistanceToMouse = Distance
            end
        end
        return Closest
    end
    
    -- ui creating & handling
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xaxaxaxaxaxaxaxaxa/Libraries/main/UI's/Linoria/Source.lua"))()
    Library:SetWatermark("Solo Script")
    
    local Window = Library:CreateWindow("silent aim OP, Modified by solo script")
    if not game:IsLoaded() then 
        game.Loaded:Wait()
    end
    
    if not syn or not protectgui then
        getgenv().protectgui = function() end
    end
    
    local SilentAimSettings = {
        Enabled = false,
        
        ClassName = "Universal Silent Aim - Averiias, Stefanuk12, xaxa",
        ToggleKey = "RightAlt",
        
        TeamCheck = false,
        VisibleCheck = false, 
        TargetPart = "HumanoidRootPart",
        SilentAimMethod = "Raycast",
        
        FOVRadius = 130,
        FOVVisible = false,
        ShowSilentAimTarget = false, 
        
        MouseHitPrediction = false,
        MouseHitPredictionAmount = 0.165,
        HitChance = 100
    }
    
    -- variables
    getgenv().SilentAimSettings = Settings
    local MainFileName = "UniversalSilentAim"
    local SelectedFile, FileToSave = "", ""
    
    local Camera = workspace.CurrentCamera
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local GuiService = game:GetService("GuiService")
    local UserInputService = game:GetService("UserInputService")
    local HttpService = game:GetService("HttpService")
    
    local LocalPlayer = Players.LocalPlayer
    local Mouse = LocalPlayer:GetMouse()
    
    local GetChildren = game.GetChildren
    local GetPlayers = Players.GetPlayers
    local WorldToScreen = Camera.WorldToScreenPoint
    local WorldToViewportPoint = Camera.WorldToViewportPoint
    local GetPartsObscuringTarget = Camera.GetPartsObscuringTarget
    local FindFirstChild = game.FindFirstChild
    local RenderStepped = RunService.RenderStepped
    local GuiInset = GuiService.GetGuiInset
    local GetMouseLocation = UserInputService.GetMouseLocation
    
    local resume = coroutine.resume 
    local create = coroutine.create
    
    local ValidTargetParts = {"Head", "HumanoidRootPart"}
    local PredictionAmount = 0.165
    
    local mouse_box = Drawing.new("Square")
    mouse_box.Visible = true 
    mouse_box.ZIndex = 999 
    mouse_box.Color = Color3.fromRGB(54, 57, 241)
    mouse_box.Thickness = 20 
    mouse_box.Size = Vector2.new(20, 20)
    mouse_box.Filled = true 
    
    local fov_circle = Drawing.new("Circle")
    fov_circle.Thickness = 1
    fov_circle.NumSides = 100
    fov_circle.Radius = 180
    fov_circle.Filled = false
    fov_circle.Visible = false
    fov_circle.ZIndex = 999
    fov_circle.Transparency = 1
    fov_circle.Color = Color3.fromRGB(54, 57, 241)
    
    local ExpectedArguments = {
        FindPartOnRayWithIgnoreList = {
            ArgCountRequired = 3,
            Args = {
                "Instance", "Ray", "table", "boolean", "boolean"
            }
        },
        FindPartOnRayWithWhitelist = {
            ArgCountRequired = 3,
            Args = {
                "Instance", "Ray", "table", "boolean"
            }
        },
        FindPartOnRay = {
            ArgCountRequired = 2,
            Args = {
                "Instance", "Ray", "Instance", "boolean", "boolean"
            }
        },
        Raycast = {
            ArgCountRequired = 3,
            Args = {
                "Instance", "Vector3", "Vector3", "RaycastParams"
            }
        }
    }
    
    function CalculateChance(Percentage)
        -- // Floor the percentage
        Percentage = math.floor(Percentage)
    
        -- // Get the chance
        local chance = math.floor(Random.new().NextNumber(Random.new(), 0, 1) * 100) / 100
    
        -- // Return
        return chance <= Percentage / 100
    end
    
    
    --[[file handling]] do 
        if not isfolder(MainFileName) then 
            makefolder(MainFileName);
        end
        
        if not isfolder(string.format("%s/%s", MainFileName, tostring(game.PlaceId))) then 
            makefolder(string.format("%s/%s", MainFileName, tostring(game.PlaceId)))
        end
    end
    
    local Files = listfiles(string.format("%s/%s", "UniversalSilentAim", tostring(game.PlaceId)))
    
    -- functions
    local function GetFiles() -- credits to the linoria lib for this function, listfiles returns the files full path and its annoying
        local out = {}
        for i = 1, #Files do
            local file = Files[i]
            if file:sub(-4) == '.lua' then
                -- i hate this but it has to be done ...
    
                local pos = file:find('.lua', 1, true)
                local start = pos
    
                local char = file:sub(pos, pos)
                while char ~= '/' and char ~= '\\' and char ~= '' do
                    pos = pos - 1
                    char = file:sub(pos, pos)
                end
    
                if char == '/' or char == '\\' then
                    table.insert(out, file:sub(pos + 1, start - 1))
                end
            end
        end
        
        return out
    end
    
    local function UpdateFile(FileName)
        assert(FileName or FileName == "string", "oopsies");
        writefile(string.format("%s/%s/%s.lua", MainFileName, tostring(game.PlaceId), FileName), HttpService:JSONEncode(SilentAimSettings))
    end
    
    local function LoadFile(FileName)
        assert(FileName or FileName == "string", "oopsies");
        
        local File = string.format("%s/%s/%s.lua", MainFileName, tostring(game.PlaceId), FileName)
        local ConfigData = HttpService:JSONDecode(readfile(File))
        for Index, Value in next, ConfigData do
            SilentAimSettings[Index] = Value
        end
    end
    
    local function getPositionOnScreen(Vector)
        local Vec3, OnScreen = WorldToScreen(Camera, Vector)
        return Vector2.new(Vec3.X, Vec3.Y), OnScreen
    end
    
    local function ValidateArguments(Args, RayMethod)
        local Matches = 0
        if #Args < RayMethod.ArgCountRequired then
            return false
        end
        for Pos, Argument in next, Args do
            if typeof(Argument) == RayMethod.Args[Pos] then
                Matches = Matches + 1
            end
        end
        return Matches >= RayMethod.ArgCountRequired
    end
    
    local function getDirection(Origin, Position)
        return (Position - Origin).Unit * 1000
    end
    
    local function getMousePosition()
        return GetMouseLocation(UserInputService)
    end
    
    local function IsPlayerVisible(Player)
        local PlayerCharacter = Player.Character
        local LocalPlayerCharacter = LocalPlayer.Character
        
        if not (PlayerCharacter or LocalPlayerCharacter) then return end 
        
        local PlayerRoot = FindFirstChild(PlayerCharacter, Options.TargetPart.Value) or FindFirstChild(PlayerCharacter, "HumanoidRootPart")
        
        if not PlayerRoot then return end 
        
        local CastPoints, IgnoreList = {PlayerRoot.Position, LocalPlayerCharacter, PlayerCharacter}, {LocalPlayerCharacter, PlayerCharacter}
        local ObscuringObjects = #GetPartsObscuringTarget(Camera, CastPoints, IgnoreList)
        
        return ((ObscuringObjects == 0 and true) or (ObscuringObjects > 0 and false))
    end
    
    local function getClosestPlayer()
        if not Options.TargetPart.Value then return end
        local Closest
        local DistanceToMouse
        for _, Player in next, GetPlayers(Players) do
            if Player == LocalPlayer then continue end
            if Toggles.TeamCheck.Value and Player.Team == LocalPlayer.Team then continue end
    
            local Character = Player.Character
            if not Character then continue end
            
            if Toggles.VisibleCheck.Value and not IsPlayerVisible(Player) then continue end
    
            local HumanoidRootPart = FindFirstChild(Character, "HumanoidRootPart")
            local Humanoid = FindFirstChild(Character, "Humanoid")
            if not HumanoidRootPart or not Humanoid or Humanoid and Humanoid.Health <= 0 then continue end
    
            local ScreenPosition, OnScreen = getPositionOnScreen(HumanoidRootPart.Position)
            if not OnScreen then continue end
    
            local Distance = (getMousePosition() - ScreenPosition).Magnitude
            if Distance <= (DistanceToMouse or Options.Radius.Value or 2000) then
                Closest = ((Options.TargetPart.Value == "Random" and Character[ValidTargetParts[math.random(1, #ValidTargetParts)]]) or Character[Options.TargetPart.Value])
                DistanceToMouse = Distance
            end
        end
        return Closest
    end
    
    -- ui creating & handling
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xaxaxaxaxaxaxaxaxa/Libraries/main/UI's/Linoria/Source.lua"))()
    Library:SetWatermark("Solo Script")
    
    local Window = Library:CreateWindow("Universal Silent Aim MODIFIED BY SOLO SCRIPT")
    local GeneralTab = Window:AddTab("General")
    local MainBOX = GeneralTab:AddLeftTabbox("Main") do
        local Main = MainBOX:AddTab("Main")
        
        Main:AddToggle("aim_Enabled", {Text = "Enabled"}):AddKeyPicker("aim_Enabled_KeyPicker", {Default = "RightAlt", SyncToggleState = true, Mode = "Toggle", Text = "Enabled", NoUI = false});
        Options.aim_Enabled_KeyPicker:OnClick(function()
            SilentAimSettings.Enabled = not SilentAimSettings.Enabled
            
            Toggles.aim_Enabled.Value = SilentAimSettings.Enabled
            Toggles.aim_Enabled:SetValue(SilentAimSettings.Enabled)
            
            mouse_box.Visible = SilentAimSettings.Enabled
        end)
        
        Main:AddToggle("TeamCheck", {Text = "Team Check", Default = SilentAimSettings.TeamCheck}):OnChanged(function()
            SilentAimSettings.TeamCheck = Toggles.TeamCheck.Value
        end)
        Main:AddToggle("VisibleCheck", {Text = "Visible Check(Generates lag)", Default = SilentAimSettings.VisibleCheck}):OnChanged(function()
            SilentAimSettings.VisibleCheck = Toggles.VisibleCheck.Value
        end)
        Main:AddDropdown("TargetPart", {Text = "Target Part", Default = SilentAimSettings.TargetPart, Values = {"Head", "HumanoidRootPart", "Random"}}):OnChanged(function()
            SilentAimSettings.TargetPart = Options.TargetPart.Value
        end)
        Main:AddDropdown("Method", {Text = "Silent Aim Method", Default = SilentAimSettings.SilentAimMethod, Values = {
            "FindPartOnRayWithIgnoreList",
        }}):OnChanged(function() 
            SilentAimSettings.SilentAimMethod = Options.Method.Value 
        end)
        Main:AddSlider('HitChance', {
            Text = 'Hit chance',
            Default = 100,
            Min = 0,
            Max = 100,
            Rounding = 1,
        
            Compact = false,
        })
        Options.HitChance:OnChanged(function()
            SilentAimSettings.HitChance = Options.HitChance.Value
        end)
    end
    
    local MiscellaneousBOX = GeneralTab:AddLeftTabbox("Miscellaneous")
    local FieldOfViewBOX = GeneralTab:AddLeftTabbox("Field Of View") do
        local Main = FieldOfViewBOX:AddTab("Visuals")
        
        Main:AddToggle("Visible", {Text = "Show FOV Circle"}):AddColorPicker("Color", {Default = Color3.fromRGB(255, 255, 255)}):OnChanged(function()
            fov_circle.Visible = Toggles.Visible.Value
            SilentAimSettings.FOVVisible = Toggles.Visible.Value
        end)
        Main:AddSlider("Radius", {Text = "FOV Circle Radius", Min = 0, Max = 420, Default = 130, Rounding = 0}):OnChanged(function()
            fov_circle.Radius = Options.Radius.Value
            SilentAimSettings.FOVRadius = Options.Radius.Value
        end)
        Main:AddToggle("MousePosition", {Text = "Show Silent Aim Target"}):AddColorPicker("MouseVisualizeColor", {Default = Color3.fromRGB(255, 255, 255)}):OnChanged(function()
            mouse_box.Visible = Toggles.MousePosition.Value 
            SilentAimSettings.ShowSilentAimTarget = Toggles.MousePosition.Value 
        end)
        local PredictionTab = MiscellaneousBOX:AddTab("Prediction")
        PredictionTab:AddToggle("Prediction", {Text = "Mouse.Hit/Target Prediction"}):OnChanged(function()
            SilentAimSettings.MouseHitPrediction = Toggles.Prediction.Value
        end)
        PredictionTab:AddSlider("Amount", {Text = "Prediction Amount", Min = 0.165, Max = 1, Default = 0.165, Rounding = 3}):OnChanged(function()
            PredictionAmount = Options.Amount.Value
            SilentAimSettings.MouseHitPredictionAmount = Options.Amount.Value
        end)
    end
    
    local CreateConfigurationBOX = GeneralTab:AddRightTabbox("Create Configuration") do 
        local Main = CreateConfigurationBOX:AddTab("Create Configuration")
        
        Main:AddInput("CreateConfigTextBox", {Default = "", Numeric = false, Finished = false, Text = "Create Configuration to Create", Tooltip = "Creates a configuration file containing settings you can save and load", Placeholder = "File Name here"}):OnChanged(function()
            if Options.CreateConfigTextBox.Value and string.len(Options.CreateConfigTextBox.Value) ~= "" then 
                FileToSave = Options.CreateConfigTextBox.Value
            end
        end)
        
        Main:AddButton("Create Configuration File", function()
            if FileToSave ~= "" or FileToSave ~= nil then 
                UpdateFile(FileToSave)
            end
        end)
    end
    
    local SaveConfigurationBOX = GeneralTab:AddRightTabbox("Save Configuration") do 
        local Main = SaveConfigurationBOX:AddTab("Save Configuration")
        Main:AddDropdown("SaveConfigurationDropdown", {Values = GetFiles(), Text = "Choose Configuration to Save"})
        Main:AddButton("Save Configuration", function()
            if Options.SaveConfigurationDropdown.Value then 
                UpdateFile(Options.SaveConfigurationDropdown.Value)
            end
        end)
    end
    
    local LoadConfigurationBOX = GeneralTab:AddRightTabbox("Load Configuration") do 
        local Main = LoadConfigurationBOX:AddTab("Load Configuration")
        
        Main:AddDropdown("LoadConfigurationDropdown", {Values = GetFiles(), Text = "Choose Configuration to Load"})
        Main:AddButton("Load Configuration", function()
            if table.find(GetFiles(), Options.LoadConfigurationDropdown.Value) then
                LoadFile(Options.LoadConfigurationDropdown.Value)
                
                Toggles.TeamCheck:SetValue(SilentAimSettings.TeamCheck)
                Toggles.VisibleCheck:SetValue(SilentAimSettings.VisibleCheck)
                Options.TargetPart:SetValue(SilentAimSettings.TargetPart)
                Options.Method:SetValue(SilentAimSettings.SilentAimMethod)
                Toggles.Visible:SetValue(SilentAimSettings.FOVVisible)
                Options.Radius:SetValue(SilentAimSettings.FOVRadius)
                Toggles.MousePosition:SetValue(SilentAimSettings.ShowSilentAimTarget)
                Toggles.Prediction:SetValue(SilentAimSettings.MouseHitPrediction)
                Options.Amount:SetValue(SilentAimSettings.MouseHitPredictionAmount)
                Options.HitChance:SetValue(SilentAimSettings.HitChance)
            end
        end)
    end
    
    resume(create(function()
        RenderStepped:Connect(function()
            if Toggles.MousePosition.Value and Toggles.aim_Enabled.Value then
                if getClosestPlayer() then 
                    local Root = getClosestPlayer().Parent.PrimaryPart or getClosestPlayer()
                    local RootToViewportPoint, IsOnScreen = WorldToViewportPoint(Camera, Root.Position);
                    -- using PrimaryPart instead because if your Target Part is "Random" it will flicker the square between the Target's Head and HumanoidRootPart (its annoying)
                    
                    mouse_box.Visible = IsOnScreen
                    mouse_box.Position = Vector2.new(RootToViewportPoint.X, RootToViewportPoint.Y)
                else 
                    mouse_box.Visible = false 
                    mouse_box.Position = Vector2.new()
                end
            end
            
            if Toggles.Visible.Value then 
                fov_circle.Visible = Toggles.Visible.Value
                fov_circle.Color = Options.Color.Value
                fov_circle.Position = getMousePosition()
            end
        end)
    end))
    
    -- hooks
    local oldNamecall
    oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
        local Method = getnamecallmethod()
        local Arguments = {...}
        local self = Arguments[1]
        local chance = CalculateChance(SilentAimSettings.HitChance)
        if Toggles.aim_Enabled.Value and self == workspace and not checkcaller() and chance == true then
            if Method == "FindPartOnRayWithIgnoreList" and Options.Method.Value == Method then
                if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithIgnoreList) then
                    local A_Ray = Arguments[2]
    
                    local HitPart = getClosestPlayer()
                    if HitPart then
                        local Origin = A_Ray.Origin
                        local Direction = getDirection(Origin, HitPart.Position)
                        Arguments[2] = Ray.new(Origin, Direction)
    
                        return oldNamecall(unpack(Arguments))
                    end
                end
            elseif Method == "FindPartOnRayWithWhitelist" and Options.Method.Value == Method then
                if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithWhitelist) then
                    local A_Ray = Arguments[2]
    
                    local HitPart = getClosestPlayer()
                    if HitPart then
                        local Origin = A_Ray.Origin
                        local Direction = getDirection(Origin, HitPart.Position)
                        Arguments[2] = Ray.new(Origin, Direction)
    
                        return oldNamecall(unpack(Arguments))
                    end
                end
            elseif (Method == "FindPartOnRay" or Method == "findPartOnRay") and Options.Method.Value:lower() == Method:lower() then
                if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRay) then
                    local A_Ray = Arguments[2]
    
                    local HitPart = getClosestPlayer()
                    if HitPart then
                        local Origin = A_Ray.Origin
                        local Direction = getDirection(Origin, HitPart.Position)
                        Arguments[2] = Ray.new(Origin, Direction)
    
                        return oldNamecall(unpack(Arguments))
                    end
                end
            elseif Method == "Raycast" and Options.Method.Value == Method then
                if ValidateArguments(Arguments, ExpectedArguments.Raycast) then
                    local A_Origin = Arguments[2]
    
                    local HitPart = getClosestPlayer()
                    if HitPart then
                        Arguments[3] = getDirection(A_Origin, HitPart.Position)
    
                        return oldNamecall(unpack(Arguments))
                    end
                end
            end
        end
        return oldNamecall(...)
    end))
    
    local oldIndex = nil 
    oldIndex = hookmetamethod(game, "__index", newcclosure(function(self, Index)
        if self == Mouse and not checkcaller() and Toggles.aim_Enabled.Value and Options.Method.Value == "Mouse.Hit/Target" and getClosestPlayer() then
            local HitPart = getClosestPlayer()
             
            if Index == "Target" or Index == "target" then 
                return HitPart
            elseif Index == "Hit" or Index == "hit" then 
                return ((Toggles.Prediction.Value and (HitPart.CFrame + (HitPart.Velocity * PredictionAmount))) or (not Toggles.Prediction.Value and HitPart.CFrame))
            elseif Index == "X" or Index == "x" then 
                return self.X 
            elseif Index == "Y" or Index == "y" then 
                return self.Y 
            elseif Index == "UnitRay" then 
                return Ray.new(self.Origin, (self.Hit - self.Origin).Unit)
            end
        end
    
        return oldIndex(self, Index)
    end))
    end)
    Section:NewLabel("---Old silent aim---")
    
    
    Section:NewButton("Silent2 Fov visible", "Old silent aim, but still good!", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 150
        _G.Fov142 = true
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent2 Fov Unvisible", "Old silent aim, but still good!", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 150
        _G.Fov142 = false
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Extra silent aim options", "its nice", function()
        local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
    local Window = Library.CreateLib("Silent aim EXTRA", "BloodTheme")
    
    local Tab = Window:NewTab("Visible Fov")
    local Section = Tab:NewSection("Solo script")
    Section:NewButton("Silent aim BIG", "Fov = 320", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 320
        _G.Fov142 = true
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim Medium", "Fov = 150", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 150
        _G.Fov142 = true
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim Tiny", "Fov = 60", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 60
        _G.Fov142 = true
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim Super tiny", "Fov = 40", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 40
        _G.Fov142 = true
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim ULTRA TINY", "Fov = 30", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 30
        _G.Fov142 = true
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    local Tab = Window:NewTab("Unvisible fov")
    local Section = Tab:NewSection("Solo script")
    Section:NewButton("Silent aim BIG", "Fov = 320", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 320
        _G.Fov142 = false
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim Medium", "Fov = 150", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 150
        _G.Fov142 = false
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim Tiny", "Fov = 60", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 60
        _G.Fov142 = false
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim Super tiny", "Fov = 40", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 40
        _G.Fov142 = false
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    Section:NewButton("Silent aim ULTRA TINY", "Fov = 30", function(settings2)
        getgenv().SilentAimSettings2 = Settings2
        _G.Field = 30
        _G.Fov142 = false
    
        local players = game:GetService("Players") --// players
        local local_player = players.LocalPlayer --// localplayer
        local mouse = local_player:GetMouse() --// mouse
        local user_input_service = game:GetService("UserInputService") --// userinputservice
        local current_camera = game:GetService("Workspace").CurrentCamera --// currentcamera
        local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global) --// global module
        local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"} --// hitboxes
        local field_of_view = _G.Field --// field of view
        --// our fov circle
        local circle = Drawing.new("Circle")
        circle.Visible = _G.Fov142
        circle.Radius = field_of_view
        circle.Filled = false
        circle.Thickness = 1
        circle.Color = Color3.new(1, 1, 1)
        --// functions
        --@Param hitboxes Array ["Head", "Torso"]
        --// get closest entity to cursor
        local function closest_to_cursor(hitboxes)
        local target, part = nil, nil
        local max_distance, max_part_distance = math.huge, math.huge
        if not next(hitboxes) then
        return
        end
        for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
        if distance < max_distance then
        target, max_distance = v, distance
        end
        end
        end
        if target then
        for i, v in next, target.Character:GetChildren() do
        if table.find(hitboxes, v.Name) then
        local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
        local distance = (Vector2.new(world_to_screen.x, world_to_screen.y) - Vector2.new(mouse.x, mouse.y)).magnitude
        if distance < max_part_distance and on_screen and distance < field_of_view then
        part, max_part_distance = v, distance
        end
        end
        end
        end
        return {target, part}
        end
        --// end of functions
        do --// events
        do --// input changed
        -- this is just to center the circle
        user_input_service.InputChanged:connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and circle.Position ~= Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2) then
        circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)
        end
        end)
        end
        end
        do --// silent aim
        local old = global_module.Utils.GetMouseHit
        global_module.Utils.GetMouseHit = function(...)
        if closest_to_cursor(hitboxes)[1] and closest_to_cursor(hitboxes)[2] then
        return closest_to_cursor(hitboxes)[2].Position
        else
        return old(...)
        end
        end
        end
    end)
    end)
    
    Section:NewLabel("Crosshairs")
    Section:NewButton("Green Crosshair", "Toggle = G", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\47\75\101\111\110\101\71\105\116\104\117\98\47\109\97\105\110\47\87\105\108\100\87\101\115\116\71\114\101\101\110\67\114\111\115\115\104\97\105\114"))()
    end)
    Section:NewButton("Red Crosshair (ISSUES) ", "Toggle = LeftAlt", function()
        -- Custom Crosshair by zzerexx#3970
        getgenv().CrosshairSettings = {
            Color = Color3.fromRGB(255,0,0),
            RainbowColor = false,
            Opacity = 1,
            Length = 10, -- Length of each line
            Thickness = 2, -- Thickness of each line
            Offset = 3, -- Offset from the middle point
            Dot = false, -- not recommended
            FollowCursor = true, -- Crosshair follows the cursor
            HideMouseIcon = false, -- Hides the mouse icon, set to 0 to ignore
            HideGameCrosshair = false, -- Hides the current game's crosshair (if its supported)
            ToggleKey = Enum.KeyCode.RightAlt, -- Toggles crosshair visibility
        } -- v1.2.1
    loadstring(game:HttpGet("https://raw.githubusercontent.com/zzerexx/scripts/main/CustomCrosshair.lua", true))()
    end)
    Section:NewToggle("HideCursor", "RedCrosshair", function(state)
        if state then
            getgenv().CrosshairSettings = {
                Color = Color3.fromRGB(255,0,0),
                RainbowColor = false,
                Opacity = 1,
                Length = 10, -- Length of each line
                Thickness = 2, -- Thickness of each line
                Offset = 3, -- Offset from the middle point
                Dot = false, -- not recommended
                FollowCursor = true, -- Crosshair follows the cursor
                HideMouseIcon = true, -- Hides the mouse icon, set to 0 to ignore
                HideGameCrosshair = false, -- Hides the current game's crosshair (if its supported)
                ToggleKey = Enum.KeyCode.RightAlt, -- Toggles crosshair visibility
            } -- v1.2.1
        else
            getgenv().CrosshairSettings = {
                Color = Color3.fromRGB(255,0,0),
                RainbowColor = false,
                Opacity = 1,
                Length = 10, -- Length of each line
                Thickness = 2, -- Thickness of each line
                Offset = 3, -- Offset from the middle point
                Dot = false, -- not recommended
                FollowCursor = true, -- Crosshair follows the cursor
                HideMouseIcon = false, -- Hides the mouse icon, set to 0 to ignore
                HideGameCrosshair = false, -- Hides the current game's crosshair (if its supported)
                ToggleKey = Enum.KeyCode.RightAlt, -- Toggles crosshair visibility
            } -- v1.2.1
        end
    end)
    Section:NewLabel("Others")
    Section:NewButton("Anti Aim", "You can reset to toggle", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\97\112\105\46\117\112\108\111\97\100\46\115\121\115\116\101\109\115\47\112\97\115\116\101\115\47\83\114\69\99\87\106\56\105\102\74\118\86\47\114\97\119",true))()
    end)
    
    
    local Tab = Window:NewTab("Visuals")
    local Section = Tab:NewSection("Solo script")
    Section:NewLabel("Esp")
    Section:NewLabel("WeAreDevs Esp")
    Section:NewToggle("Master toggle", "a", function(state)
        if state then
            _G.WRDESPEnabled = true --Enables the ESP (Defaults to true)
    
    
    --Dont edit below
    
    --Only ever load the script once
    if not _G.WRDESPLoaded then    
        ----[[ First- Load Kiriot ESP Library ]]----
    
        --Settings--
        local ESP = {
            Enabled = false,
            Boxes = true,
            BoxShift = CFrame.new(0,-1.5,0),
            BoxSize = Vector3.new(4,6,0),
            Color = Color3.fromRGB(255, 170, 0),
            FaceCamera = false,
            Names = true,
            TeamColor = true,
            Thickness = 2,
            AttachShift = 1,
            TeamMates = true,
            Players = true,
            
            Objects = setmetatable({}, {__mode="kv"}),
            Overrides = {}
        }
    
        --Declarations--
        local cam = workspace.CurrentCamera
        local plrs = game:GetService("Players")
        local plr = plrs.LocalPlayer
        local mouse = plr:GetMouse()
    
        local V3new = Vector3.new
        local WorldToViewportPoint = cam.WorldToViewportPoint
    
        --Functions--
        local function Draw(obj, props)
            local new = Drawing.new(obj)
            
            props = props or {}
            for i,v in pairs(props) do
                new[i] = v
            end
            return new
        end
    
        function ESP:GetTeam(p)
            local ov = self.Overrides.GetTeam
            if ov then
                return ov(p)
            end
            
            return p and p.Team
        end
    
        function ESP:IsTeamMate(p)
            local ov = self.Overrides.IsTeamMate
            if ov then
                return ov(p)
            end
            
            return self:GetTeam(p) == self:GetTeam(plr)
        end
    
        function ESP:GetColor(obj)
            local ov = self.Overrides.GetColor
            if ov then
                return ov(obj)
            end
            local p = self:GetPlrFromChar(obj)
            return p and self.TeamColor and p.Team and p.Team.TeamColor.Color or self.Color
        end
    
        function ESP:GetPlrFromChar(char)
            local ov = self.Overrides.GetPlrFromChar
            if ov then
                return ov(char)
            end
            
            return plrs:GetPlayerFromCharacter(char)
        end
    
        function ESP:Toggle(bool)
            self.Enabled = bool
            if not bool then
                for i,v in pairs(self.Objects) do
                    if v.Type == "Box" then --fov circle etc
                        if v.Temporary then
                            v:Remove()
                        else
                            for i,v in pairs(v.Components) do
                                v.Visible = false
                            end
                        end
                    end
                end
            end
        end
    
        function ESP:GetBox(obj)
            return self.Objects[obj]
        end
    
        function ESP:AddObjectListener(parent, options)
            local function NewListener(c)
                if type(options.Type) == "string" and c:IsA(options.Type) or options.Type == nil then
                    if type(options.Name) == "string" and c.Name == options.Name or options.Name == nil then
                        if not options.Validator or options.Validator(c) then
                            local box = ESP:Add(c, {
                                PrimaryPart = type(options.PrimaryPart) == "string" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == "function" and options.PrimaryPart(c),
                                Color = type(options.Color) == "function" and options.Color(c) or options.Color,
                                ColorDynamic = options.ColorDynamic,
                                Name = type(options.CustomName) == "function" and options.CustomName(c) or options.CustomName,
                                IsEnabled = options.IsEnabled,
                                RenderInNil = options.RenderInNil
                            })
                            --TODO: add a better way of passing options
                            if options.OnAdded then
                                coroutine.wrap(options.OnAdded)(box)
                            end
                        end
                    end
                end
            end
    
            if options.Recursive then
                parent.DescendantAdded:Connect(NewListener)
                for i,v in pairs(parent:GetDescendants()) do
                    coroutine.wrap(NewListener)(v)
                end
            else
                parent.ChildAdded:Connect(NewListener)
                for i,v in pairs(parent:GetChildren()) do
                    coroutine.wrap(NewListener)(v)
                end
            end
        end
    
        local boxBase = {}
        boxBase.__index = boxBase
    
        function boxBase:Remove()
            ESP.Objects[self.Object] = nil
            for i,v in pairs(self.Components) do
                v.Visible = false
                v:Remove()
                self.Components[i] = nil
            end
        end
    
        function boxBase:Update()
            if not self.PrimaryPart then
                --warn("not supposed to print", self.Object)
                return self:Remove()
            end
    
            local color
            if ESP.Highlighted == self.Object then
            color = ESP.HighlightColor
            else
                color = self.Color or self.ColorDynamic and self:ColorDynamic() or ESP:GetColor(self.Object) or ESP.Color
            end
    
            local allow = true
            if ESP.Overrides.UpdateAllow and not ESP.Overrides.UpdateAllow(self) then
                allow = false
            end
            if self.Player and not ESP.TeamMates and ESP:IsTeamMate(self.Player) then
                allow = false
            end
            if self.Player and not ESP.Players then
                allow = false
            end
            if self.IsEnabled and (type(self.IsEnabled) == "string" and not ESP[self.IsEnabled] or type(self.IsEnabled) == "function" and not self:IsEnabled()) then
                allow = false
            end
            if not workspace:IsAncestorOf(self.PrimaryPart) and not self.RenderInNil then
                allow = false
            end
    
            if not allow then
                for i,v in pairs(self.Components) do
                    v.Visible = false
                end
                return
            end
    
            if ESP.Highlighted == self.Object then
                color = ESP.HighlightColor
            end
    
            --calculations--
            local cf = self.PrimaryPart.CFrame
            if ESP.FaceCamera then
                cf = CFrame.new(cf.p, cam.CFrame.p)
            end
            local size = self.Size
            local locs = {
                TopLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,size.Y/2,0),
                TopRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,size.Y/2,0),
                BottomLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,-size.Y/2,0),
                BottomRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,-size.Y/2,0),
                TagPos = cf * ESP.BoxShift * CFrame.new(0,size.Y/2,0),
                Torso = cf * ESP.BoxShift
            }
    
            if ESP.Boxes then
                local TopLeft, Vis1 = WorldToViewportPoint(cam, locs.TopLeft.p)
                local TopRight, Vis2 = WorldToViewportPoint(cam, locs.TopRight.p)
                local BottomLeft, Vis3 = WorldToViewportPoint(cam, locs.BottomLeft.p)
                local BottomRight, Vis4 = WorldToViewportPoint(cam, locs.BottomRight.p)
    
                if self.Components.Quad then
                    if Vis1 or Vis2 or Vis3 or Vis4 then
                        self.Components.Quad.Visible = true
                        self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)
                        self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                        self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                        self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                        self.Components.Quad.Color = color
                    else
                        self.Components.Quad.Visible = false
                    end
                end
            else
                self.Components.Quad.Visible = false
            end
    
            if ESP.Names then
                local TagPos, Vis5 = WorldToViewportPoint(cam, locs.TagPos.p)
                
                if Vis5 then
                    self.Components.Name.Visible = true
                    self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)
                    self.Components.Name.Text = self.Name
                    self.Components.Name.Color = color
                    
                    self.Components.Distance.Visible = true
                    self.Components.Distance.Position = Vector2.new(TagPos.X, TagPos.Y + 14)
                    self.Components.Distance.Text = math.floor((cam.CFrame.p - cf.p).magnitude) .."m away"
                    self.Components.Distance.Color = color
                else
                    self.Components.Name.Visible = false
                    self.Components.Distance.Visible = false
                end
            else
                self.Components.Name.Visible = false
                self.Components.Distance.Visible = false
            end
            
            if ESP.Tracers then
                local TorsoPos, Vis6 = WorldToViewportPoint(cam, locs.Torso.p)
    
                if Vis6 then
                    self.Components.Tracer.Visible = true
                    self.Components.Tracer.From = Vector2.new(TorsoPos.X, TorsoPos.Y)
                    self.Components.Tracer.To = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/ESP.AttachShift)
                    self.Components.Tracer.Color = color
                else
                    self.Components.Tracer.Visible = false
                end
            else
                self.Components.Tracer.Visible = false
            end
        end
    
        function ESP:Add(obj, options)
            if not obj.Parent and not options.RenderInNil then
                return warn(obj, "has no parent")
            end
    
            local box = setmetatable({
                Name = options.Name or obj.Name,
                Type = "Box",
                Color = options.Color --[[or self:GetColor(obj)]],
                Size = options.Size or self.BoxSize,
                Object = obj,
                Player = options.Player or plrs:GetPlayerFromCharacter(obj),
                PrimaryPart = options.PrimaryPart or obj.ClassName == "Model" and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj:IsA("BasePart") and obj,
                Components = {},
                IsEnabled = options.IsEnabled,
                Temporary = options.Temporary,
                ColorDynamic = options.ColorDynamic,
                RenderInNil = options.RenderInNil
            }, boxBase)
    
            if self:GetBox(obj) then
                self:GetBox(obj):Remove()
            end
    
            box.Components["Quad"] = Draw("Quad", {
                Thickness = self.Thickness,
                Color = color,
                Transparency = 1,
                Filled = false,
                Visible = self.Enabled and self.Boxes
            })
            box.Components["Name"] = Draw("Text", {
                Text = box.Name,
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            box.Components["Distance"] = Draw("Text", {
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            
            box.Components["Tracer"] = Draw("Line", {
                Thickness = ESP.Thickness,
                Color = box.Color,
                Transparency = 1,
                Visible = self.Enabled and self.Tracers
            })
            self.Objects[obj] = box
            
            obj.AncestryChanged:Connect(function(_, parent)
                if parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
            obj:GetPropertyChangedSignal("Parent"):Connect(function()
                if obj.Parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
    
            local hum = obj:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.Died:Connect(function()
                    if ESP.AutoRemove ~= false then
                        box:Remove()
                    end
                end)
            end
    
            return box
        end
    
        local function CharAdded(char)
            local p = plrs:GetPlayerFromCharacter(char)
            if not char:FindFirstChild("HumanoidRootPart") then
                local ev
                ev = char.ChildAdded:Connect(function(c)
                    if c.Name == "HumanoidRootPart" then
                        ev:Disconnect()
                        ESP:Add(char, {
                            Name = p.Name,
                            Player = p,
                            PrimaryPart = c
                        })
                    end
                end)
            else
                ESP:Add(char, {
                    Name = p.Name,
                    Player = p,
                    PrimaryPart = char.HumanoidRootPart
                })
            end
        end
        local function PlayerAdded(p)
            p.CharacterAdded:Connect(CharAdded)
            if p.Character then
                coroutine.wrap(CharAdded)(p.Character)
            end
        end
        plrs.PlayerAdded:Connect(PlayerAdded)
        for i,v in pairs(plrs:GetPlayers()) do
            if v ~= plr then
                PlayerAdded(v)
            end
        end
    
        game:GetService("RunService").RenderStepped:Connect(function()
            cam = workspace.CurrentCamera
            for i,v in (ESP.Enabled and pairs or ipairs)(ESP.Objects) do
                if v.Update then
                    local s,e = pcall(v.Update, v)
                    if not s then warn("[EU]", e, v.Object:GetFullName()) end
                end
            end
        end)
    
        ----[[ Now Begins WRD's modification for implementation ]]----
    
        --Sets defaults where required
        if _G.WRDESPEnabled == nil then _G.WRDESPEnabled = true end
        if _G.WRDESPBoxes == nil then _G.WRDESPBoxes = true end
        if _G.WRDESPTeamColors == nil then _G.WRDESPTeamColors = true end
        if _G.WRDESPTracers == nil then _G.WRDESPTracers = false end
        if _G.WRDESPNames == nil then _G.WRDESPNames = true end
        
        --Hacky way to keep up with setting changes
        while wait(.1) do
            ESP:Toggle(_G.WRDESPEnabled or false)
            ESP.Boxes = _G.WRDESPBoxes or false
            ESP.TeamColors = _G.WRDESPTeamColors or false
            ESP.Tracers = _G.WRDESPTracers or false
            ESP.Names = _G.WRDESPNames or false
        end
    
        _G.WRDESPLoaded = true
    end
        else
            _G.WRDESPEnabled = false --Enables the ESP (Defaults to true)

    
    --Dont edit below
    
    --Only ever load the script once
    if not _G.WRDESPLoaded then    
        ----[[ First- Load Kiriot ESP Library ]]----
    
        --Settings--
        local ESP = {
            Enabled = false,
            Boxes = true,
            BoxShift = CFrame.new(0,-1.5,0),
            BoxSize = Vector3.new(4,6,0),
            Color = Color3.fromRGB(255, 170, 0),
            FaceCamera = false,
            Names = true,
            TeamColor = true,
            Thickness = 2,
            AttachShift = 1,
            TeamMates = true,
            Players = true,
            
            Objects = setmetatable({}, {__mode="kv"}),
            Overrides = {}
        }
    
        --Declarations--
        local cam = workspace.CurrentCamera
        local plrs = game:GetService("Players")
        local plr = plrs.LocalPlayer
        local mouse = plr:GetMouse()
    
        local V3new = Vector3.new
        local WorldToViewportPoint = cam.WorldToViewportPoint
    
        --Functions--
        local function Draw(obj, props)
            local new = Drawing.new(obj)
            
            props = props or {}
            for i,v in pairs(props) do
                new[i] = v
            end
            return new
        end
    
        function ESP:GetTeam(p)
            local ov = self.Overrides.GetTeam
            if ov then
                return ov(p)
            end
            
            return p and p.Team
        end
    
        function ESP:IsTeamMate(p)
            local ov = self.Overrides.IsTeamMate
            if ov then
                return ov(p)
            end
            
            return self:GetTeam(p) == self:GetTeam(plr)
        end
    
        function ESP:GetColor(obj)
            local ov = self.Overrides.GetColor
            if ov then
                return ov(obj)
            end
            local p = self:GetPlrFromChar(obj)
            return p and self.TeamColor and p.Team and p.Team.TeamColor.Color or self.Color
        end
    
        function ESP:GetPlrFromChar(char)
            local ov = self.Overrides.GetPlrFromChar
            if ov then
                return ov(char)
            end
            
            return plrs:GetPlayerFromCharacter(char)
        end
    
        function ESP:Toggle(bool)
            self.Enabled = bool
            if not bool then
                for i,v in pairs(self.Objects) do
                    if v.Type == "Box" then --fov circle etc
                        if v.Temporary then
                            v:Remove()
                        else
                            for i,v in pairs(v.Components) do
                                v.Visible = false
                            end
                        end
                    end
                end
            end
        end
    
        function ESP:GetBox(obj)
            return self.Objects[obj]
        end
    
        function ESP:AddObjectListener(parent, options)
            local function NewListener(c)
                if type(options.Type) == "string" and c:IsA(options.Type) or options.Type == nil then
                    if type(options.Name) == "string" and c.Name == options.Name or options.Name == nil then
                        if not options.Validator or options.Validator(c) then
                            local box = ESP:Add(c, {
                                PrimaryPart = type(options.PrimaryPart) == "string" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == "function" and options.PrimaryPart(c),
                                Color = type(options.Color) == "function" and options.Color(c) or options.Color,
                                ColorDynamic = options.ColorDynamic,
                                Name = type(options.CustomName) == "function" and options.CustomName(c) or options.CustomName,
                                IsEnabled = options.IsEnabled,
                                RenderInNil = options.RenderInNil
                            })
                            --TODO: add a better way of passing options
                            if options.OnAdded then
                                coroutine.wrap(options.OnAdded)(box)
                            end
                        end
                    end
                end
            end
    
            if options.Recursive then
                parent.DescendantAdded:Connect(NewListener)
                for i,v in pairs(parent:GetDescendants()) do
                    coroutine.wrap(NewListener)(v)
                end
            else
                parent.ChildAdded:Connect(NewListener)
                for i,v in pairs(parent:GetChildren()) do
                    coroutine.wrap(NewListener)(v)
                end
            end
        end
    
        local boxBase = {}
        boxBase.__index = boxBase
    
        function boxBase:Remove()
            ESP.Objects[self.Object] = nil
            for i,v in pairs(self.Components) do
                v.Visible = false
                v:Remove()
                self.Components[i] = nil
            end
        end
    
        function boxBase:Update()
            if not self.PrimaryPart then
                --warn("not supposed to print", self.Object)
                return self:Remove()
            end
    
            local color
            if ESP.Highlighted == self.Object then
            color = ESP.HighlightColor
            else
                color = self.Color or self.ColorDynamic and self:ColorDynamic() or ESP:GetColor(self.Object) or ESP.Color
            end
    
            local allow = true
            if ESP.Overrides.UpdateAllow and not ESP.Overrides.UpdateAllow(self) then
                allow = false
            end
            if self.Player and not ESP.TeamMates and ESP:IsTeamMate(self.Player) then
                allow = false
            end
            if self.Player and not ESP.Players then
                allow = false
            end
            if self.IsEnabled and (type(self.IsEnabled) == "string" and not ESP[self.IsEnabled] or type(self.IsEnabled) == "function" and not self:IsEnabled()) then
                allow = false
            end
            if not workspace:IsAncestorOf(self.PrimaryPart) and not self.RenderInNil then
                allow = false
            end
    
            if not allow then
                for i,v in pairs(self.Components) do
                    v.Visible = false
                end
                return
            end
    
            if ESP.Highlighted == self.Object then
                color = ESP.HighlightColor
            end
    
            --calculations--
            local cf = self.PrimaryPart.CFrame
            if ESP.FaceCamera then
                cf = CFrame.new(cf.p, cam.CFrame.p)
            end
            local size = self.Size
            local locs = {
                TopLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,size.Y/2,0),
                TopRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,size.Y/2,0),
                BottomLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,-size.Y/2,0),
                BottomRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,-size.Y/2,0),
                TagPos = cf * ESP.BoxShift * CFrame.new(0,size.Y/2,0),
                Torso = cf * ESP.BoxShift
            }
    
            if ESP.Boxes then
                local TopLeft, Vis1 = WorldToViewportPoint(cam, locs.TopLeft.p)
                local TopRight, Vis2 = WorldToViewportPoint(cam, locs.TopRight.p)
                local BottomLeft, Vis3 = WorldToViewportPoint(cam, locs.BottomLeft.p)
                local BottomRight, Vis4 = WorldToViewportPoint(cam, locs.BottomRight.p)
    
                if self.Components.Quad then
                    if Vis1 or Vis2 or Vis3 or Vis4 then
                        self.Components.Quad.Visible = true
                        self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)
                        self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                        self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                        self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                        self.Components.Quad.Color = color
                    else
                        self.Components.Quad.Visible = false
                    end
                end
            else
                self.Components.Quad.Visible = false
            end
    
            if ESP.Names then
                local TagPos, Vis5 = WorldToViewportPoint(cam, locs.TagPos.p)
                
                if Vis5 then
                    self.Components.Name.Visible = true
                    self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)
                    self.Components.Name.Text = self.Name
                    self.Components.Name.Color = color
                    
                    self.Components.Distance.Visible = true
                    self.Components.Distance.Position = Vector2.new(TagPos.X, TagPos.Y + 14)
                    self.Components.Distance.Text = math.floor((cam.CFrame.p - cf.p).magnitude) .."m away"
                    self.Components.Distance.Color = color
                else
                    self.Components.Name.Visible = false
                    self.Components.Distance.Visible = false
                end
            else
                self.Components.Name.Visible = false
                self.Components.Distance.Visible = false
            end
            
            if ESP.Tracers then
                local TorsoPos, Vis6 = WorldToViewportPoint(cam, locs.Torso.p)
    
                if Vis6 then
                    self.Components.Tracer.Visible = true
                    self.Components.Tracer.From = Vector2.new(TorsoPos.X, TorsoPos.Y)
                    self.Components.Tracer.To = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/ESP.AttachShift)
                    self.Components.Tracer.Color = color
                else
                    self.Components.Tracer.Visible = false
                end
            else
                self.Components.Tracer.Visible = false
            end
        end
    
        function ESP:Add(obj, options)
            if not obj.Parent and not options.RenderInNil then
                return warn(obj, "has no parent")
            end
    
            local box = setmetatable({
                Name = options.Name or obj.Name,
                Type = "Box",
                Color = options.Color --[[or self:GetColor(obj)]],
                Size = options.Size or self.BoxSize,
                Object = obj,
                Player = options.Player or plrs:GetPlayerFromCharacter(obj),
                PrimaryPart = options.PrimaryPart or obj.ClassName == "Model" and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj:IsA("BasePart") and obj,
                Components = {},
                IsEnabled = options.IsEnabled,
                Temporary = options.Temporary,
                ColorDynamic = options.ColorDynamic,
                RenderInNil = options.RenderInNil
            }, boxBase)
    
            if self:GetBox(obj) then
                self:GetBox(obj):Remove()
            end
    
            box.Components["Quad"] = Draw("Quad", {
                Thickness = self.Thickness,
                Color = color,
                Transparency = 1,
                Filled = false,
                Visible = self.Enabled and self.Boxes
            })
            box.Components["Name"] = Draw("Text", {
                Text = box.Name,
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            box.Components["Distance"] = Draw("Text", {
                Color = box.Color,
                Center = true,
                Outline = true,
                Size = 19,
                Visible = self.Enabled and self.Names
            })
            
            box.Components["Tracer"] = Draw("Line", {
                Thickness = ESP.Thickness,
                Color = box.Color,
                Transparency = 1,
                Visible = self.Enabled and self.Tracers
            })
            self.Objects[obj] = box
            
            obj.AncestryChanged:Connect(function(_, parent)
                if parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
            obj:GetPropertyChangedSignal("Parent"):Connect(function()
                if obj.Parent == nil and ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
    
            local hum = obj:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.Died:Connect(function()
                    if ESP.AutoRemove ~= false then
                        box:Remove()
                    end
                end)
            end
    
            return box
        end
    
        local function CharAdded(char)
            local p = plrs:GetPlayerFromCharacter(char)
            if not char:FindFirstChild("HumanoidRootPart") then
                local ev
                ev = char.ChildAdded:Connect(function(c)
                    if c.Name == "HumanoidRootPart" then
                        ev:Disconnect()
                        ESP:Add(char, {
                            Name = p.Name,
                            Player = p,
                            PrimaryPart = c
                        })
                    end
                end)
            else
                ESP:Add(char, {
                    Name = p.Name,
                    Player = p,
                    PrimaryPart = char.HumanoidRootPart
                })
            end
        end
        local function PlayerAdded(p)
            p.CharacterAdded:Connect(CharAdded)
            if p.Character then
                coroutine.wrap(CharAdded)(p.Character)
            end
        end
        plrs.PlayerAdded:Connect(PlayerAdded)
        for i,v in pairs(plrs:GetPlayers()) do
            if v ~= plr then
                PlayerAdded(v)
            end
        end
    
        game:GetService("RunService").RenderStepped:Connect(function()
            cam = workspace.CurrentCamera
            for i,v in (ESP.Enabled and pairs or ipairs)(ESP.Objects) do
                if v.Update then
                    local s,e = pcall(v.Update, v)
                    if not s then warn("[EU]", e, v.Object:GetFullName()) end
                end
            end
        end)
    
        ----[[ Now Begins WRD's modification for implementation ]]----
    
        --Sets defaults where required
        if _G.WRDESPEnabled == nil then _G.WRDESPEnabled = true end
        if _G.WRDESPBoxes == nil then _G.WRDESPBoxes = true end
        if _G.WRDESPTeamColors == nil then _G.WRDESPTeamColors = true end
        if _G.WRDESPTracers == nil then _G.WRDESPTracers = false end
        if _G.WRDESPNames == nil then _G.WRDESPNames = true end
        
        --Hacky way to keep up with setting changes
        while wait(.1) do
            ESP:Toggle(_G.WRDESPEnabled or false)
            ESP.Boxes = _G.WRDESPBoxes or false
            ESP.TeamColors = _G.WRDESPTeamColors or false
            ESP.Tracers = _G.WRDESPTracers or false
            ESP.Names = _G.WRDESPNames or false
        end
    
        _G.WRDESPLoaded = true
    end
        end
    end)
    Section:NewToggle("Boxes", "a", function(state)
        if state then
            _G.WRDESPBoxes = true
        else
            _G.WRDESPBoxes = false
        end
    end)
    Section:NewToggle("TeamColors", "b", function(state)
        if state then
            _G.WRDESPTeamColors = true
        else
            _G.WRDESPTeamColors = false
        end
    end)
    Section:NewToggle("Tracers", "c", function(state)
        if state then
            _G.WRDESPTracers = true
        else
            _G.WRDESPTracers = false
        end
    end)
    Section:NewToggle("Names", "d", function(state)
        if state then
            _G.WRDESPNames = true
        else
            _G.WRDESPNames = false
        end
    end)
    Section:NewLabel("Random ESP")
    Section:NewButton("Chams with glow ESP (ISSUES)", "Its like a wallhack", function()
    local dwEntities = game:GetService("Players")
    local dwLocalPlayer = dwEntities.LocalPlayer 
    local dwRunService = game:GetService("RunService")
    
    local settings_tbl = {
        ESP_Enabled = true,
        ESP_TeamCheck = false,
        Chams = true,
        Chams_Color = Color3.fromRGB(0, 255, 0),
        Chams_Transparency = 0.4,
        Chams_Glow_Color = Color3.fromRGB(255,0,0)
    }
    
    function destroy_chams(char)
    
        for k,v in next, char:GetChildren() do 
    
            if v:IsA("BasePart") and v.Transparency ~= 1 then
    
                if v:FindFirstChild("Glow") and 
                v:FindFirstChild("Chams") then
    
                    v.Glow:Destroy()
                    v.Chams:Destroy() 
    
                end 
    
            end 
    
        end 
    
    end
    
    dwRunService.Heartbeat:Connect(function()
    
        if settings_tbl.ESP_Enabled then
    
            for k,v in next, dwEntities:GetPlayers() do 
    
                if v ~= dwLocalPlayer then
    
                    if v.Character and
                    v.Character:FindFirstChild("HumanoidRootPart") and 
                    v.Character:FindFirstChild("Humanoid") and 
                    v.Character:FindFirstChild("Humanoid").Health ~= 0 then
    
                        if settings_tbl.ESP_TeamCheck == false then
    
                            local char = v.Character 
    
                            for k,b in next, char:GetChildren() do 
    
                                if b:IsA("BasePart") and 
                                b.Transparency ~= 1 then
                                    
                                    if settings_tbl.Chams then
    
                                        if not b:FindFirstChild("Glow") and
                                        not b:FindFirstChild("Chams") then
    
                                            local chams_box = Instance.new("BoxHandleAdornment", b)
                                            chams_box.Name = "Chams"
                                            chams_box.AlwaysOnTop = true 
                                            chams_box.ZIndex = 4 
                                            chams_box.Adornee = b 
                                            chams_box.Color3 = settings_tbl.Chams_Color
                                            chams_box.Transparency = settings_tbl.Chams_Transparency
                                            chams_box.Size = b.Size + Vector3.new(0.02, 0.02, 0.02)
    
                                            local glow_box = Instance.new("BoxHandleAdornment", b)
                                            glow_box.Name = "Glow"
                                            glow_box.AlwaysOnTop = false 
                                            glow_box.ZIndex = 3 
                                            glow_box.Adornee = b 
                                            glow_box.Color3 = settings_tbl.Chams_Glow_Color
                                            glow_box.Size = chams_box.Size + Vector3.new(0.13, 0.13, 0.13)
    
                                        end
    
                                    else
    
                                        destroy_chams(char)
    
                                    end
                                
                                end
    
                            end
    
                        else
    
                            if v.Team == dwLocalPlayer.Team then
                                destroy_chams(v.Character)
                            end
    
                        end
    
                    else
    
                        destroy_chams(v.Character)
    
                    end
    
                end
    
            end
    
        else 
    
            for k,v in next, dwEntities:GetPlayers() do 
    
                if v ~= dwLocalPlayer and 
                v.Character and 
                v.Character:FindFirstChild("HumanoidRootPart") and 
                v.Character:FindFirstChild("Humanoid") and 
                v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                    
                    destroy_chams(v.Character)
    
                end
    
            end
    
        end
    
    end)
end)
print("Script made by solo script")
Section:NewButton("All esp OP", "I stole this bro don't ask", function()
    local THW = Instance.new("ScreenGui")
    local Frame = Instance.new("ImageLabel")
    local Frame_2 = Instance.new("Frame")
    local sidebar = Instance.new("Frame")
    local playeresp = Instance.new("TextButton")
    local TextButton_Roundify_12px = Instance.new("ImageLabel")
    local oreesp = Instance.new("TextButton")
    local TextButton_Roundify_12px_2 = Instance.new("ImageLabel")
    local animalesp = Instance.new("TextButton")
    local TextButton_Roundify_12px_3 = Instance.new("ImageLabel")
    local miscesp = Instance.new("TextButton")
    local TextButton_Roundify_12px_4 = Instance.new("ImageLabel")
    local Oretab = Instance.new("Frame")
    local gold = Instance.new("TextButton")
    local TextLabel = Instance.new("TextLabel")
    local limestone = Instance.new("TextButton")
    local TextLabel_2 = Instance.new("TextLabel")
    local silver = Instance.new("TextButton")
    local TextLabel_3 = Instance.new("TextLabel")
    local strucktrees = Instance.new("TextButton")
    local TextLabel_4 = Instance.new("TextLabel")
    local iron = Instance.new("TextButton")
    local TextLabel_5 = Instance.new("TextLabel")
    local zinc = Instance.new("TextButton")
    local TextLabel_6 = Instance.new("TextLabel")
    local copper = Instance.new("TextButton")
    local TextLabel_7 = Instance.new("TextLabel")
    local coal = Instance.new("TextButton")
    local TextLabel_8 = Instance.new("TextLabel")
    local Plrtab = Instance.new("Frame")
    local name = Instance.new("TextButton")
    local TextLabel_9 = Instance.new("TextLabel")
    local hp = Instance.new("TextButton")
    local TextLabel_10 = Instance.new("TextLabel")
    local TextLabel_11 = Instance.new("TextLabel")
    local bounty = Instance.new("TextButton")
    local TextLabel_12 = Instance.new("TextLabel")
    local Npctab = Instance.new("Frame")
    local bear = Instance.new("TextButton")
    local TextLabel_13 = Instance.new("TextLabel")
    local bison = Instance.new("TextButton")
    local TextLabel_14 = Instance.new("TextLabel")
    local deer = Instance.new("TextButton")
    local TextLabel_15 = Instance.new("TextLabel")
    local gator = Instance.new("TextButton")
    local TextLabel_16 = Instance.new("TextLabel")
    local TextLabel_17 = Instance.new("TextLabel")
    local Misctab = Instance.new("Frame")
    local title = Instance.new("TextLabel")
    
    --Properties:
    
    THW.Name = "THW"
    THW.Parent = game:FindFirstChild("CoreGui")
    THW.ResetOnSpawn = false
    
    Frame.Name = "Frame"
    Frame.Parent = THW
    Frame.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    Frame.BackgroundTransparency = 1.000
    Frame.Position = UDim2.new(0.384453773, 0, 0.331288338, 0)
    Frame.Size = UDim2.new(0, 225, 0, 275)
    Frame.Image = "rbxassetid://3570695787"
    Frame.ImageColor3 = Color3.fromRGB(63, 63, 63)
    Frame.ScaleType = Enum.ScaleType.Slice
    Frame.SliceCenter = Rect.new(100, 100, 100, 100)
    Frame.SliceScale = 0.120
    
    Frame_2.Parent = Frame
    Frame_2.BackgroundColor3 = Color3.fromRGB(102, 102, 102)
    Frame_2.Position = UDim2.new(0.0444444455, 0, 0.127272725, 0)
    Frame_2.Size = UDim2.new(0, 205, 0, 230)
    
    sidebar.Name = "sidebar"
    sidebar.Parent = Frame_2
    sidebar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sidebar.BackgroundTransparency = 1.000
    sidebar.Position = UDim2.new(-0.243902445, 0, 0, 0)
    sidebar.Size = UDim2.new(0, 50, 0, 230)
    
    playeresp.Name = "playeresp"
    playeresp.Parent = sidebar
    playeresp.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    playeresp.BackgroundTransparency = 1.000
    playeresp.BorderSizePixel = 0
    playeresp.Size = UDim2.new(0, 50, 0, 50)
    playeresp.ZIndex = 2
    playeresp.Font = Enum.Font.SourceSans
    playeresp.Text = "Plr Esp"
    playeresp.TextColor3 = Color3.fromRGB(0, 0, 0)
    playeresp.TextScaled = true
    playeresp.TextSize = 14.000
    playeresp.TextWrapped = true
    
    TextButton_Roundify_12px.Name = "TextButton_Roundify_12px"
    TextButton_Roundify_12px.Parent = playeresp
    TextButton_Roundify_12px.Active = true
    TextButton_Roundify_12px.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton_Roundify_12px.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextButton_Roundify_12px.BackgroundTransparency = 1.000
    TextButton_Roundify_12px.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextButton_Roundify_12px.Selectable = true
    TextButton_Roundify_12px.Size = UDim2.new(1, 0, 1, 0)
    TextButton_Roundify_12px.Image = "rbxassetid://3570695787"
    TextButton_Roundify_12px.ImageColor3 = Color3.fromRGB(63, 63, 63)
    TextButton_Roundify_12px.ScaleType = Enum.ScaleType.Slice
    TextButton_Roundify_12px.SliceCenter = Rect.new(100, 100, 100, 100)
    TextButton_Roundify_12px.SliceScale = 0.120
    
    oreesp.Name = "oreesp"
    oreesp.Parent = sidebar
    oreesp.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    oreesp.BackgroundTransparency = 1.000
    oreesp.BorderSizePixel = 0
    oreesp.Position = UDim2.new(0, 0, 0.252173901, 0)
    oreesp.Size = UDim2.new(0, 50, 0, 50)
    oreesp.ZIndex = 2
    oreesp.Font = Enum.Font.SourceSans
    oreesp.Text = "Ore Esp"
    oreesp.TextColor3 = Color3.fromRGB(0, 0, 0)
    oreesp.TextScaled = true
    oreesp.TextSize = 14.000
    oreesp.TextWrapped = true
    
    TextButton_Roundify_12px_2.Name = "TextButton_Roundify_12px"
    TextButton_Roundify_12px_2.Parent = oreesp
    TextButton_Roundify_12px_2.Active = true
    TextButton_Roundify_12px_2.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton_Roundify_12px_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextButton_Roundify_12px_2.BackgroundTransparency = 1.000
    TextButton_Roundify_12px_2.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextButton_Roundify_12px_2.Selectable = true
    TextButton_Roundify_12px_2.Size = UDim2.new(1, 0, 1, 0)
    TextButton_Roundify_12px_2.Image = "rbxassetid://3570695787"
    TextButton_Roundify_12px_2.ImageColor3 = Color3.fromRGB(63, 63, 63)
    TextButton_Roundify_12px_2.ScaleType = Enum.ScaleType.Slice
    TextButton_Roundify_12px_2.SliceCenter = Rect.new(100, 100, 100, 100)
    TextButton_Roundify_12px_2.SliceScale = 0.120
    
    animalesp.Name = "animalesp"
    animalesp.Parent = sidebar
    animalesp.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    animalesp.BackgroundTransparency = 1.000
    animalesp.BorderSizePixel = 0
    animalesp.Position = UDim2.new(0, 0, 0.495652139, 0)
    animalesp.Size = UDim2.new(0, 50, 0, 50)
    animalesp.ZIndex = 2
    animalesp.Font = Enum.Font.SourceSans
    animalesp.Text = "Npc Esp"
    animalesp.TextColor3 = Color3.fromRGB(0, 0, 0)
    animalesp.TextScaled = true
    animalesp.TextSize = 14.000
    animalesp.TextWrapped = true
    
    TextButton_Roundify_12px_3.Name = "TextButton_Roundify_12px"
    TextButton_Roundify_12px_3.Parent = animalesp
    TextButton_Roundify_12px_3.Active = true
    TextButton_Roundify_12px_3.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton_Roundify_12px_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextButton_Roundify_12px_3.BackgroundTransparency = 1.000
    TextButton_Roundify_12px_3.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextButton_Roundify_12px_3.Selectable = true
    TextButton_Roundify_12px_3.Size = UDim2.new(1, 0, 1, 0)
    TextButton_Roundify_12px_3.Image = "rbxassetid://3570695787"
    TextButton_Roundify_12px_3.ImageColor3 = Color3.fromRGB(63, 63, 63)
    TextButton_Roundify_12px_3.ScaleType = Enum.ScaleType.Slice
    TextButton_Roundify_12px_3.SliceCenter = Rect.new(100, 100, 100, 100)
    TextButton_Roundify_12px_3.SliceScale = 0.120
    
    miscesp.Name = "miscesp"
    miscesp.Parent = sidebar
    miscesp.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    miscesp.BackgroundTransparency = 1.000
    miscesp.BorderSizePixel = 0
    miscesp.Position = UDim2.new(0, 0, 0.743478239, 0)
    miscesp.Size = UDim2.new(0, 50, 0, 50)
    miscesp.ZIndex = 2
    miscesp.Font = Enum.Font.SourceSans
    miscesp.Text = "Misc Esp"
    miscesp.TextColor3 = Color3.fromRGB(0, 0, 0)
    miscesp.TextScaled = true
    miscesp.TextSize = 14.000
    miscesp.TextWrapped = true
    
    TextButton_Roundify_12px_4.Name = "TextButton_Roundify_12px"
    TextButton_Roundify_12px_4.Parent = miscesp
    TextButton_Roundify_12px_4.Active = true
    TextButton_Roundify_12px_4.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton_Roundify_12px_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextButton_Roundify_12px_4.BackgroundTransparency = 1.000
    TextButton_Roundify_12px_4.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextButton_Roundify_12px_4.Selectable = true
    TextButton_Roundify_12px_4.Size = UDim2.new(1, 0, 1, 0)
    TextButton_Roundify_12px_4.Image = "rbxassetid://3570695787"
    TextButton_Roundify_12px_4.ImageColor3 = Color3.fromRGB(63, 63, 63)
    TextButton_Roundify_12px_4.ScaleType = Enum.ScaleType.Slice
    TextButton_Roundify_12px_4.SliceCenter = Rect.new(100, 100, 100, 100)
    TextButton_Roundify_12px_4.SliceScale = 0.120
    
    Oretab.Name = "Oretab"
    Oretab.Parent = Frame_2
    Oretab.BackgroundColor3 = Color3.fromRGB(102, 102, 102)
    Oretab.Size = UDim2.new(0, 205, 0, 230)
    
    gold.Name = "gold"
    gold.Parent = Oretab
    gold.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    gold.Position = UDim2.new(0.12195123, 0, 0.0391304344, 0)
    gold.Size = UDim2.new(0, 75, 0, 25)
    gold.Font = Enum.Font.SourceSans
    gold.Text = "Gold esp"
    gold.TextColor3 = Color3.fromRGB(0, 0, 0)
    gold.TextSize = 14.000
    gold.TextWrapped = true
    
    TextLabel.Parent = gold
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel.Size = UDim2.new(0, 25, 0, 25)
    TextLabel.Font = Enum.Font.SourceSans
    TextLabel.Text = "Off"
    TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.TextScaled = true
    TextLabel.TextSize = 14.000
    TextLabel.TextWrapped = true
    
    limestone.Name = "limestone"
    limestone.Parent = Oretab
    limestone.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    limestone.Position = UDim2.new(0.12195123, 0, 0.173913047, 0)
    limestone.Size = UDim2.new(0, 75, 0, 25)
    limestone.Font = Enum.Font.SourceSans
    limestone.Text = "Limestone esp"
    limestone.TextColor3 = Color3.fromRGB(0, 0, 0)
    limestone.TextScaled = true
    limestone.TextSize = 14.000
    limestone.TextWrapped = true
    
    TextLabel_2.Parent = limestone
    TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_2.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_2.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_2.Font = Enum.Font.SourceSans
    TextLabel_2.Text = "Off"
    TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_2.TextScaled = true
    TextLabel_2.TextSize = 14.000
    TextLabel_2.TextWrapped = true
    
    silver.Name = "silver"
    silver.Parent = Oretab
    silver.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    silver.Position = UDim2.new(0.634146333, 0, 0.0391304344, 0)
    silver.Size = UDim2.new(0, 75, 0, 25)
    silver.Font = Enum.Font.SourceSans
    silver.Text = "Silver esp"
    silver.TextColor3 = Color3.fromRGB(0, 0, 0)
    silver.TextSize = 14.000
    silver.TextWrapped = true
    
    TextLabel_3.Parent = silver
    TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_3.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_3.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_3.Font = Enum.Font.SourceSans
    TextLabel_3.Text = "Off"
    TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_3.TextScaled = true
    TextLabel_3.TextSize = 14.000
    TextLabel_3.TextWrapped = true
    
    strucktrees.Name = "strucktrees"
    strucktrees.Parent = Oretab
    strucktrees.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    strucktrees.Position = UDim2.new(0.634000003, 0, 0.432999998, 0)
    strucktrees.Size = UDim2.new(0, 75, 0, 25)
    strucktrees.Font = Enum.Font.SourceSans
    strucktrees.Text = "struck trees"
    strucktrees.TextColor3 = Color3.fromRGB(0, 0, 0)
    strucktrees.TextSize = 14.000
    
    TextLabel_4.Parent = strucktrees
    TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_4.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_4.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_4.Font = Enum.Font.SourceSans
    TextLabel_4.Text = "Off"
    TextLabel_4.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_4.TextScaled = true
    TextLabel_4.TextSize = 14.000
    TextLabel_4.TextWrapped = true
    
    iron.Name = "iron"
    iron.Parent = Oretab
    iron.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    iron.Position = UDim2.new(0.634146333, 0, 0.173913047, 0)
    iron.Size = UDim2.new(0, 75, 0, 25)
    iron.Font = Enum.Font.SourceSans
    iron.Text = "Iron esp"
    iron.TextColor3 = Color3.fromRGB(0, 0, 0)
    iron.TextSize = 14.000
    iron.TextWrapped = true
    
    TextLabel_5.Parent = iron
    TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_5.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_5.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_5.Font = Enum.Font.SourceSans
    TextLabel_5.Text = "Off"
    TextLabel_5.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_5.TextScaled = true
    TextLabel_5.TextSize = 14.000
    TextLabel_5.TextWrapped = true
    
    zinc.Name = "zinc"
    zinc.Parent = Oretab
    zinc.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    zinc.Position = UDim2.new(0.121951222, 0, 0.304347813, 0)
    zinc.Size = UDim2.new(0, 75, 0, 25)
    zinc.Font = Enum.Font.SourceSans
    zinc.Text = "Zinc esp"
    zinc.TextColor3 = Color3.fromRGB(0, 0, 0)
    zinc.TextSize = 14.000
    zinc.TextWrapped = true
    
    TextLabel_6.Parent = zinc
    TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_6.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_6.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_6.Font = Enum.Font.SourceSans
    TextLabel_6.Text = "Off"
    TextLabel_6.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_6.TextScaled = true
    TextLabel_6.TextSize = 14.000
    TextLabel_6.TextWrapped = true
    
    copper.Name = "copper"
    copper.Parent = Oretab
    copper.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    copper.Position = UDim2.new(0.634146333, 0, 0.304347813, 0)
    copper.Size = UDim2.new(0, 75, 0, 25)
    copper.Font = Enum.Font.SourceSans
    copper.Text = "Copper esp"
    copper.TextColor3 = Color3.fromRGB(0, 0, 0)
    copper.TextSize = 14.000
    copper.TextWrapped = true
    
    TextLabel_7.Parent = copper
    TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_7.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_7.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_7.Font = Enum.Font.SourceSans
    TextLabel_7.Text = "Off"
    TextLabel_7.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_7.TextScaled = true
    TextLabel_7.TextSize = 14.000
    TextLabel_7.TextWrapped = true
    
    coal.Name = "coal"
    coal.Parent = Oretab
    coal.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    coal.Position = UDim2.new(0.122000001, 0, 0.432999998, 0)
    coal.Size = UDim2.new(0, 75, 0, 25)
    coal.Font = Enum.Font.SourceSans
    coal.Text = "Coal esp"
    coal.TextColor3 = Color3.fromRGB(0, 0, 0)
    coal.TextSize = 14.000
    coal.TextWrapped = true
    
    TextLabel_8.Parent = coal
    TextLabel_8.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_8.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_8.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_8.Font = Enum.Font.SourceSans
    TextLabel_8.Text = "Off"
    TextLabel_8.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_8.TextScaled = true
    TextLabel_8.TextSize = 14.000
    TextLabel_8.TextWrapped = true
    
    Plrtab.Name = "Plrtab"
    Plrtab.Parent = Frame_2
    Plrtab.BackgroundColor3 = Color3.fromRGB(102, 102, 102)
    Plrtab.Size = UDim2.new(0, 205, 0, 230)
    Plrtab.Visible = false
    
    name.Name = "name"
    name.Parent = Plrtab
    name.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    name.Position = UDim2.new(0.122000001, 0, -0.00178259611, 0)
    name.Size = UDim2.new(0, 75, 0, 25)
    name.Font = Enum.Font.SourceSans
    name.Text = "name esp"
    name.TextColor3 = Color3.fromRGB(0, 0, 0)
    name.TextSize = 14.000
    name.TextWrapped = true
    
    TextLabel_9.Parent = name
    TextLabel_9.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_9.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_9.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_9.Font = Enum.Font.SourceSans
    TextLabel_9.Text = "Off"
    TextLabel_9.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_9.TextScaled = true
    TextLabel_9.TextSize = 14.000
    TextLabel_9.TextWrapped = true
    
    hp.Name = "hp"
    hp.Parent = Plrtab
    hp.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    hp.Position = UDim2.new(0.63499999, 0, 0, 0)
    hp.Size = UDim2.new(0, 75, 0, 25)
    hp.Font = Enum.Font.SourceSans
    hp.Text = "hp esp"
    hp.TextColor3 = Color3.fromRGB(0, 0, 0)
    hp.TextSize = 14.000
    hp.TextWrapped = true
    
    TextLabel_10.Parent = hp
    TextLabel_10.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_10.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_10.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_10.Font = Enum.Font.SourceSans
    TextLabel_10.Text = "Off"
    TextLabel_10.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_10.TextScaled = true
    TextLabel_10.TextSize = 14.000
    TextLabel_10.TextWrapped = true
    
    
    TextLabel_11.Parent = status
    TextLabel_11.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_11.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_11.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_11.Font = Enum.Font.SourceSans
    TextLabel_11.Text = "Off"
    TextLabel_11.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_11.TextScaled = true
    TextLabel_11.TextSize = 14.000
    TextLabel_11.TextWrapped = true
    
    bounty.Name = "bounty"
    bounty.Parent = Plrtab
    bounty.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    bounty.Position = UDim2.new(0.121804893, 0, 0.127000004, 0)
    bounty.Size = UDim2.new(0, 75, 0, 25)
    bounty.Font = Enum.Font.SourceSans
    bounty.Text = "bounty esp"
    bounty.TextColor3 = Color3.fromRGB(0, 0, 0)
    bounty.TextSize = 14.000
    bounty.TextWrapped = true
    
    TextLabel_12.Parent = bounty
    TextLabel_12.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_12.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_12.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_12.Font = Enum.Font.SourceSans
    TextLabel_12.Text = "Off"
    TextLabel_12.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_12.TextScaled = true
    TextLabel_12.TextSize = 14.000
    TextLabel_12.TextWrapped = true
    
    Npctab.Name = "Npctab"
    Npctab.Parent = Frame_2
    Npctab.BackgroundColor3 = Color3.fromRGB(102, 102, 102)
    Npctab.Size = UDim2.new(0, 205, 0, 230)
    Npctab.Visible = false
    
    bear.Name = "bear"
    bear.Parent = Npctab
    bear.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    bear.Position = UDim2.new(0.634146333, 0, 0.0521739423, 0)
    bear.Size = UDim2.new(0, 75, 0, 25)
    bear.Font = Enum.Font.SourceSans
    bear.Text = "bear esp"
    bear.TextColor3 = Color3.fromRGB(0, 0, 0)
    bear.TextSize = 14.000
    
    TextLabel_13.Parent = bear
    TextLabel_13.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_13.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_13.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_13.Font = Enum.Font.SourceSans
    TextLabel_13.Text = "Off"
    TextLabel_13.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_13.TextScaled = true
    TextLabel_13.TextSize = 14.000
    TextLabel_13.TextWrapped = true
    
    bison.Name = "bison"
    bison.Parent = Npctab
    bison.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    bison.Position = UDim2.new(0.121951222, 0, 0.0521739349, 0)
    bison.Size = UDim2.new(0, 75, 0, 25)
    bison.Font = Enum.Font.SourceSans
    bison.Text = "bison esp"
    bison.TextColor3 = Color3.fromRGB(0, 0, 0)
    bison.TextSize = 14.000
    
    TextLabel_14.Parent = bison
    TextLabel_14.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_14.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_14.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_14.Font = Enum.Font.SourceSans
    TextLabel_14.Text = "Off"
    TextLabel_14.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_14.TextScaled = true
    TextLabel_14.TextSize = 14.000
    TextLabel_14.TextWrapped = true
    
    deer.Name = "deer"
    deer.Parent = Npctab
    deer.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    deer.Position = UDim2.new(0.634146333, 0, 0.18695654, 0)
    deer.Size = UDim2.new(0, 75, 0, 25)
    deer.Font = Enum.Font.SourceSans
    deer.Text = "deer esp"
    deer.TextColor3 = Color3.fromRGB(0, 0, 0)
    deer.TextSize = 14.000
    
    TextLabel_15.Parent = deer
    TextLabel_15.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_15.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_15.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_15.Font = Enum.Font.SourceSans
    TextLabel_15.Text = "Off"
    TextLabel_15.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_15.TextScaled = true
    TextLabel_15.TextSize = 14.000
    TextLabel_15.TextWrapped = true
    
    gator.Name = "gator"
    gator.Parent = Npctab
    gator.BackgroundColor3 = Color3.fromRGB(154, 154, 154)
    gator.Position = UDim2.new(0.121951222, 0, 0.186956555, 0)
    gator.Size = UDim2.new(0, 75, 0, 25)
    gator.Font = Enum.Font.SourceSans
    gator.Text = "gator esp"
    gator.TextColor3 = Color3.fromRGB(0, 0, 0)
    gator.TextSize = 14.000
    
    TextLabel_16.Parent = gator
    TextLabel_16.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_16.Position = UDim2.new(-0.333333343, 0, 0, 0)
    TextLabel_16.Size = UDim2.new(0, 25, 0, 25)
    TextLabel_16.Font = Enum.Font.SourceSans
    TextLabel_16.Text = "Off"
    TextLabel_16.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_16.TextScaled = true
    TextLabel_16.TextSize = 14.000
    TextLabel_16.TextWrapped = true
    
    TextLabel_17.Parent = Npctab
    TextLabel_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_17.BackgroundTransparency = 1.000
    TextLabel_17.Position = UDim2.new(0.00975609757, 0, 0.552173913, 0)
    TextLabel_17.Size = UDim2.new(0, 203, 0, 24)
    TextLabel_17.Font = Enum.Font.SourceSans
    TextLabel_17.Text = "Event animal esp"
    TextLabel_17.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_17.TextScaled = true
    TextLabel_17.TextSize = 14.000
    TextLabel_17.TextWrapped = true
    
    
    Misctab.Name = "Misctab"
    Misctab.Parent = Frame_2
    Misctab.BackgroundColor3 = Color3.fromRGB(102, 102, 102)
    Misctab.Size = UDim2.new(0, 205, 0, 230)
    Misctab.Visible = false
    
    
    title.Name = "title"
    title.Parent = Frame
    title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1.000
    title.Position = UDim2.new(0.0533333346, 0, 0.0218181815, 0)
    title.Size = UDim2.new(0, 200, 0, 29)
    title.Font = Enum.Font.SourceSans
    title.Text = "THW Esp by Z3ta" -- Don't remove :(
    title.TextColor3 = Color3.fromRGB(0, 0, 0)
    title.TextScaled = true
    title.TextSize = 14.000
    title.TextWrapped = true
    
    -- Scripts:
    
    local function MFER_fake_script() -- playeresp.LocalScript 
        local script = Instance.new('LocalScript', playeresp)
    
        local tab = script.Parent.Parent.Parent.Plrtab
        local tabs = script.Parent.Parent.Parent
        script.Parent.MouseButton1Click:Connect(function()
            tab.Visible = true
            tabs.Oretab.Visible = false
            tabs.Npctab.Visible = false
            tabs.Misctab.Visible = false
        end)
    end
    coroutine.wrap(MFER_fake_script)()
    local function LIXJUT_fake_script() -- oreesp.LocalScript 
        local script = Instance.new('LocalScript', oreesp)
    
        local tab = script.Parent.Parent.Parent.Oretab
        local tabs = script.Parent.Parent.Parent
        script.Parent.MouseButton1Click:Connect(function()
            tab.Visible = true
            tabs.Npctab.Visible = false
            tabs.Plrtab.Visible = false
            tabs.Misctab.Visible = false
        end)
    end
    coroutine.wrap(LIXJUT_fake_script)()
    local function WEPRS_fake_script() -- animalesp.LocalScript 
        local script = Instance.new('LocalScript', animalesp)
    
        local tab = script.Parent.Parent.Parent.Npctab
        local tabs = script.Parent.Parent.Parent
        script.Parent.MouseButton1Click:Connect(function()
            tab.Visible = true
            tabs.Oretab.Visible = false
            tabs.Plrtab.Visible = false
            tabs.Misctab.Visible = false
        end)
    end
    coroutine.wrap(WEPRS_fake_script)()
    local function WSQCNT_fake_script() -- miscesp.LocalScript 
        local script = Instance.new('LocalScript', miscesp)
    
        local tab = script.Parent.Parent.Parent.Misctab
        local tabs = script.Parent.Parent.Parent
        script.Parent.MouseButton1Click:Connect(function()
            tab.Visible = true
            tabs.Oretab.Visible = false
            tabs.Plrtab.Visible = false
            tabs.Npctab.Visible = false
        end)
    end
    coroutine.wrap(WSQCNT_fake_script)()
    local function ZXKMZN_fake_script() -- Frame.LocalScript 
        local script = Instance.new('LocalScript', Frame)
    
        local UIS = game:GetService("UserInputService")
        function drag (Frame)
            dragToggle = nil
            dragSpeed = 0.23
            dragInput = nil
            dragStart = nil
            dragPos = nil
            function updateInput(input)
                Delta = input.Position - dragStart
                Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
                game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
            end
            Frame.InputBegan:Connect(function(input)
                if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
                    dragToggle = true
                    dragStart = input.Position
                    startPos = Frame.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragToggle = false
                        end
                    end)
                end
            end)
            Frame.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)
            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if input == dragInput and dragToggle then
                    updateInput(input)
                end
            end)
        end
        drag(script.Parent)
    end
    coroutine.wrap(ZXKMZN_fake_script)()
    
    
    
    local camera = workspace.Camera
    local RunService = game:GetService("RunService")
    local localplayer = game:GetService("Players").LocalPlayer
    local toggle = false
    local toggl = false
    local togg = false
    local tog = false
    local switch = false
    local switc = false
    local swit = false
    local swi = false
    local sw = false
    local evc = false
    local ev = false
    local lst = false
    local eey = false
    local iyt = false
    local efs = false
    local eai = false
    local hpt = false
    local nmt = false
    local bnt = false
    -------------ints ^
    local noerror
    local nonil
    ------------- pcalls ^
    local module = require(game:GetService("ReplicatedStorage").Modules.Character.RepCharHandler)
    ------------- modules^
    
    function getHealth(player)
        for i,v in pairs(module.CharacterMap) do
            if tostring(i) == player then
                return v.State.Health
            end
        end
    end
    
    function getBounty(player)
        for i,v in pairs(module.CharacterMap) do
            if tostring(i) == player then
                return v.State.Bounty
            end
        end
    end
    
    function drawplayer(plr)
        local hp
        
        local hpesp = Drawing.new("Text"); hpesp.Size = 13; hpesp.Font = 2; hpesp.Color = Color3.fromRGB(255,255,255); hpesp.Center = true; hpesp.Outline = true; hpesp.OutlineColor = Color3.new(0,0,0)
        local nameEsp = Drawing.new("Text"); nameEsp.Size = 13; nameEsp.Text = plr.Name; nameEsp.Font = 2; nameEsp.Color = Color3.fromRGB(255,255,255); nameEsp.Center = true; nameEsp.Outline = true; nameEsp.OutlineColor = Color3.new(0,0,0)
        local bountyesp = Drawing.new("Text"); bountyesp.Size = 13; bountyesp.Font = 2; bountyesp.Color = Color3.fromRGB(255,0,0); bountyesp.Center = true; bountyesp.Outline = true; bountyesp.OutlineColor = Color3.new(0,0,0)
        local status
        local Rs
        local pc
    
    
    
        Rs = game:GetService("RunService").RenderStepped:Connect(function()
            pc = pcall(function()
            local unchpval = tonumber(getHealth(tostring(plr)))
            local hpval = math.ceil(unchpval)
                local headpos, onScreen = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(game:GetService("Players"):FindFirstChild(plr.Name).Character.Head.Position)
                hpesp.Position = Vector2.new(headpos.X, headpos.Y - 25)
                nameEsp.Position = Vector2.new(headpos.X, headpos.Y - 15)
                bountyesp.Position = Vector2.new(headpos.X, headpos.Y - 35)
                if onScreen then
                    if hpt then
                        hpesp.Text = tostring(hpval)
                        if tonumber(hpval) > tonumber(100) * 0.66 then
                            hpesp.Color = Color3.fromRGB(0,255,0)
                        elseif tonumber(hpval) > tonumber(100) * 0.33 then
                            hpesp.Color = Color3.fromRGB(255,255,0)
                        else
                            hpesp.Color = Color3.fromRGB(255,0,0)
                        end
                        hpesp.Visible = true
                    else
                        hpesp.Visible = false
                    end
                    if nmt then
                        nameEsp.Visible = true
                    else
                        nameEsp.Visible = false
                    end
                    if bnt then
                        bountyesp.Text = "$" .. tostring(getBounty(tostring(plr)))
                        bountyesp.Visible = true
                    else
                        bountyesp.Visible = false
                    end
                else
                    hpesp.Visible = false
                    nameEsp.Visible = false
                    bountyesp.Visible = false
                end
            end)
        end)
        game:GetService("Players"):FindFirstChild(plr.Name).CharacterRemoving:Connect(function()
            hpesp.Visible = false
            nameEsp.Visible = false
            bountyesp.Visible = false
        end)
    
        local pr
        pr = game:GetService("Players").PlayerRemoving:Connect(function(player)
            if player.Name == plr.Name then
                hpesp:Remove()
                bountyesp:Remove()
                nameEsp:Remove()
                Rs:Disconnect()
    
                pr:Disconnect()
            end
        end)   
    end
    
    for _,plr in ipairs(game:GetService("Players"):GetPlayers()) do
        if plr == localplayer then
            
        else
        drawplayer(plr)
        end
    end
    
    game:GetService("Players").PlayerAdded:Connect(function(plr)
        local w = plr.Character or plr.CharacterAdded:Wait()
        local h = w:WaitForChild("Humanoid")
        drawplayer(plr)
    end)
    
    
    local blacklistNames = {"Cow","Horse","Deer","Bison","Bear","UndeadBear","Wendigo","Gator"}
    local animalMaxHP = {
        ["Deer"] = 50,
        ["Bison"] = 150,
        ["Gator"] = 200,
        ["Bear"] = 300,
        ["UndeadBear"] = 600,
        ["Wendigo"] = 3500
    }
    
    function addAnimal(animal)
        local animalHealth
        local success
        repeat wait()
            success = pcall(function()
                animalHealth = animal.Health
            end)
        until success
        local nameEsp = Drawing.new("Text"); nameEsp.Text = tostring(animal); nameEsp.Color = Color3.fromRGB(255, 255, 255); nameEsp.Center = true; nameEsp.Outline = true; nameEsp.OutlineColor = Color3.new(0,0,0); nameEsp.Font = 0
        local healthEsp = Drawing.new("Text"); healthEsp.Center = true; healthEsp.Outline = true; healthEsp.OutlineColor = Color3.new(0,0,0); healthEsp.Font = 0
    
        local RenderStepped
        RenderStepped = game:GetService("RunService").RenderStepped:Connect(function()
            if table.find(blacklistNames, tostring(animal.Name)) then nameEsp.Visible = false; healthEsp.Visible = false return end
            if animalHealth.Value <= 0 then nameEsp.Visible = false; healthEsp.Visible = false return end
            healthEsp.Text = tostring(math.ceil(animalHealth.Value))
            local animalPos, onScreen = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(animal.Body.CFrame.Position)
            if onScreen then
                noerror = pcall(function()
                    if animalHealth.Value > animalMaxHP[tostring(animal.Name)] * 0.66 then
                        healthEsp.Color = Color3.fromRGB(0, 255, 0)
                    elseif animalHealth.Value > animalMaxHP[tostring(animal.Name)] * 0.33 then
                        healthEsp.Color = Color3.fromRGB(255, 255, 0)
                    else
                        healthEsp.Color = Color3.fromRGB(255, 0, 0)
                    end
                    nameEsp.Position = Vector2.new(animalPos.X, animalPos.Y - 25)
                    healthEsp.Position = nameEsp.Position + Vector2.new(0, -15)
                    nameEsp.Size = 1000 / animalPos.Z + 15
                    healthEsp.Size = nameEsp.Size
                    nameEsp.Visible = true
                    healthEsp.Visible = true
                end)
            else
                nameEsp.Visible = false
                healthEsp.Visible = false
            end
        end)
        local ChildRemoved
        ChildRemoved = game:GetService("Workspace")["WORKSPACE_Entities"].Animals.ChildRemoved:Connect(function(child)
            if child == animal then
                nameEsp:Remove()
                healthEsp:Remove()
                RenderStepped:Disconnect()
    
                ChildRemoved:Disconnect()
            end
        end)
    end
    
    for _,animal in ipairs(game:GetService("Workspace")["WORKSPACE_Entities"].Animals:GetChildren()) do
        addAnimal(animal)
    end
    
    game:GetService("Workspace")["WORKSPACE_Entities"].Animals.ChildAdded:Connect(function(animal)
        wait(1)
        addAnimal(animal)
    end)
    
    local blacklistores = {"CoalBase","CopperBase","ZincBase","IronBase","SilverBase","LimestoneOre","GoldBase"}
    function addore(ore, ammt)
        local ore_esp = Drawing.new("Text"); ore_esp.Text = tostring(ore.Parent.Parent); ore_esp.Center = true; ore_esp.Color = Color3.new(1,1,1); ore_esp.Outline = true; ore_esp.OutlineColor = Color3.new(0,0,0); ore_esp.Font = 2; ore_esp.Size = 13; ore_esp.Visible = false
        local ore_ammount = Drawing.new("Text"); ore_ammount.Center = true; ore_ammount.Outline = true; ore_ammount.OutlineColor = Color3.new(0,0,0); ore_ammount.Font = 2; ore_ammount.Size = 12; ore_ammount.Visible = false
        local rs
        local val = tostring(ore.Parent.DepositInfo.OreRemaining.Value)
    
    
        rs = game:GetService("RunService").RenderStepped:Connect(function()
                if table.find(blacklistores, tostring(ore)) then ore_esp.Visible = false; ore_ammount.Visible = false return end
                local orepos, onScreen = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(ore.Position)
                ore_ammount.Text = "Amt: " .. tostring(ore.Parent.DepositInfo.OreRemaining.Value)
            if onScreen then
                nonil = pcall(function()
                    if ore.Parent.DepositInfo.OreRemaining.Value >= 1 then
                        ore_ammount.Color = Color3.fromRGB(0, 255, 0)
                    else
                        ore_ammount.Color = Color3.fromRGB(255,0,0)
                    end
                    ore_esp.Position = Vector2.new(orepos.X, orepos.Y - 10)
                    ore_ammount.Position = Vector2.new(orepos.X, orepos.Y)
                    ore_esp.Visible = true
                    ore_ammount.Visible = true
                end)
            else
                ore_esp.Visible = false
                ore_ammount.Visible = false
            end
        end)
    end
    for i,v in pairs(game:GetService("Workspace")["WORKSPACE_Interactables"].Mining.OreDeposits:GetDescendants()) do
        if v.Name == "CoalBase" then
            addore(v, v.Parent.DepositInfo.OreRemaining.Value)
        elseif v.Name == "CopperBase" then
            addore(v, v.Parent.DepositInfo.OreRemaining.Value)
        elseif v.Name == "ZincBase" then
            addore(v, v.Parent.DepositInfo.OreRemaining.Value)
        elseif v.Name == "IronBase" then
            addore(v, v.Parent.DepositInfo.OreRemaining.Value)
        elseif v.Name == "SilverBase" then
            addore(v, v.Parent.DepositInfo.OreRemaining.Value)
        elseif v.Name == "LimestoneOre" then
            addore(v, v.Parent.DepositInfo.OreRemaining.Value)
        elseif v.Name == "GoldBase" then
            addore(v, v.Parent.DepositInfo.OreRemaining.Value)
        end
    end
    
    bounty.MouseButton1Click:Connect(function()
        if bnt == false then
            TextLabel_12.Text = "On"
            TextLabel_12.BackgroundColor3 = Color3.fromRGB(0,255,0)
            bnt = true
        else
            TextLabel_12.Text = "Off"
            TextLabel_12.BackgroundColor3 = Color3.fromRGB(255,0,0)
            bnt = false
    
        end
    end)
    
    hp.MouseButton1Click:Connect(function()
        if hpt == false then
            TextLabel_10.Text = "On"
            TextLabel_10.BackgroundColor3 = Color3.fromRGB(0,255,0)
            hpt = true
        else
            TextLabel_10.Text = "Off"
            TextLabel_10.BackgroundColor3 = Color3.fromRGB(255,0,0)
            hpt = false
        end
    end)
    
    name.MouseButton1Click:Connect(function()
        if nmt == false then
            TextLabel_9.Text = "On"
            TextLabel_9.BackgroundColor3 = Color3.fromRGB(0,255,0)
            nmt = true
        else
            TextLabel_9.Text = "Off"
            TextLabel_9.BackgroundColor3 = Color3.fromRGB(255,0,0)
            nmt = false
        end
    end)
    
    gold.MouseButton1Click:Connect(function()
        if toggle == false then
            TextLabel.Text = "On"
            TextLabel.BackgroundColor3 = Color3.fromRGB(0,255,0)
            toggle = true
            local ores = table.find(blacklistores, "GoldBase")
            if ores then
                table.remove(blacklistores, ores)
            end
        else
            TextLabel.Text = "Off"
            TextLabel.BackgroundColor3 = Color3.fromRGB(255,0,0)
            toggle = false
            table.insert(blacklistores, "GoldBase")
        end
    end)
    
    silver.MouseButton1Click:Connect(function()
        if toggl == false then
            TextLabel_3.Text = "On"
            TextLabel_3.BackgroundColor3 = Color3.fromRGB(0,255,0)
            toggl = true
            local ores = table.find(blacklistores, "SilverBase")
            if ores then
                table.remove(blacklistores, ores)
            end
        else
            TextLabel_3.Text = "Off"
            TextLabel_3.BackgroundColor3 = Color3.fromRGB(255,0,0)
            toggl = false
            table.insert(blacklistores, "SilverBase")
        end
    end)
    
    limestone.MouseButton1Click:Connect(function()
        if togg == false then
            TextLabel_2.Text = "On"
            TextLabel_2.BackgroundColor3 = Color3.fromRGB(0,255,0)
            togg = true
            local ores = table.find(blacklistores, "LimestoneOre")
            if ores then
                table.remove(blacklistores, ores)
            end
        else
            TextLabel_2.Text = "Off"
            TextLabel_2.BackgroundColor3 = Color3.fromRGB(255,0,0)
            togg = false
            table.insert(blacklistores, "LimestoneOre")
        end
    end)
    
    iron.MouseButton1Click:Connect(function()
        if eey == false then
            TextLabel_5.Text = "On"
            TextLabel_5.BackgroundColor3 = Color3.fromRGB(0,255,0)
            eey = true
            local ores = table.find(blacklistores, "IronBase")
            if ores then
                table.remove(blacklistores, ores)
            end
        else 
            TextLabel_5.Text = "Off"
            TextLabel_5.BackgroundColor3 = Color3.fromRGB(255,0,0)
            eey = false
            table.insert(blacklistores, "IronBase")
        end
    end)
    
    zinc.MouseButton1Click:Connect(function()
        if iyt == false then
            TextLabel_6.Text = "On"
            TextLabel_6.BackgroundColor3 = Color3.fromRGB(0,255,0)
            local ores = table.find(blacklistores, "ZincBase")
            iyt = true
            if ores then
                table.remove(blacklistores, ores)
            end
        else
            TextLabel_6.Text = "Off"
            TextLabel_6.BackgroundColor3 = Color3.fromRGB(255,0,0)
            table.insert(blacklistores, "ZincBase")
            iyt = false
        end
    end)
    
    copper.MouseButton1Click:Connect(function()
        if efs == false then
            TextLabel_7.Text = "On"
            TextLabel_7.BackgroundColor3 = Color3.fromRGB(0,255,0)
            efs = true
            local ores = table.find(blacklistores, "CopperBase")
            if ores then
                table.remove(blacklistores, ores)
            end
        else
            TextLabel_7.Text = "Off"
            TextLabel_7.BackgroundColor3 = Color3.fromRGB(255,0,0)
            efs = false
            table.insert(blacklistores, "CopperBase")
        end
    end)
    
    coal.MouseButton1Click:Connect(function()
        if eai == false then
            TextLabel_8.Text = "On"
            TextLabel_8.BackgroundColor3 = Color3.fromRGB(0,255,0)
            eai = true
            local ores = table.find(blacklistores, "CoalBase")
            if ores then
                table.remove(blacklistores, ores)
            end
        else
            TextLabel_8.Text = "Off"
            TextLabel_8.BackgroundColor3 = Color3.fromRGB(255,0,0)
            eai = false
            table.insert(blacklistores, "CoalBase")
        end
    end)
    
    bison.MouseButton1Click:Connect(function()
        if ev == false then
            TextLabel_14.Text = "On"
            TextLabel_14.BackgroundColor3 = Color3.fromRGB(0,255,0)
            ev = true
            local bis = table.find(blacklistNames, "Bison")
            if bis then
                table.remove(blacklistNames, bis) 
            end
        else
            TextLabel_14.Text = "Off"
            TextLabel_14.BackgroundColor3 = Color3.fromRGB(255,0,0)
            ev = false
            table.insert(blacklistNames, "Bison")
        end
    end)
    
    deer.MouseButton1Click:Connect(function()
        if tog == false then
            TextLabel_15.Text = "On"
            TextLabel_15.BackgroundColor3 = Color3.fromRGB(0,255,0)
            tog = true
            local dee = table.find(blacklistNames, "Deer")
            if dee then
                table.remove(blacklistNames, dee)
            end
        else
            TextLabel_15.Text = "Off"
            TextLabel_15.BackgroundColor3 = Color3.fromRGB(255,0,0)
            tog = false
            table.insert(blacklistNames, "Deer")
        end
    end)
    
    gator.MouseButton1Click:Connect(function()
        if switch == false then
            TextLabel_16.Text = "On"
            TextLabel_16.BackgroundColor3 = Color3.fromRGB(0,255,0)
            switch = true
            local gato = table.find(blacklistNames, "Gator")
            if gato then
                table.remove(blacklistNames, gato)
            end
        else
            TextLabel_16.Text = "Off"
            TextLabel_16.BackgroundColor3 = Color3.fromRGB(255,0,0)
            switch = false
            table.insert(blacklistNames, "Gator")
        end
    end)
    
    bear.MouseButton1Click:Connect(function()
        if switc == false then
            switc = true
            TextLabel_13.Text = "On"
            TextLabel_13.BackgroundColor3 = Color3.fromRGB(0,255,0)
            local bea = table.find(blacklistNames, "Bear")
            if bea then
                table.remove(blacklistNames, bea)
            end
        else
            TextLabel_13.Text = "Off"
            TextLabel_13.BackgroundColor3 = Color3.fromRGB(255,0,0)
            switc = false
            table.insert(blacklistNames, "Bear")
        end
    end)
    
    strucktrees.MouseButton1Click:Connect(function()
        if lst == false then
            lst = true
            TextLabel_4.Text = "On"
            TextLabel_4.BackgroundColor3 = Color3.fromRGB(0,255,0)
        else
            lst = false
            TextLabel_4.Text = "Off"
            TextLabel_4.BackgroundColor3 = Color3.fromRGB(255,0,0)
        end
    end)
    
    
    local function Drawstrike(base)
    
        local stontext = Drawing.new("Text")
        stontext.Visible = false
        stontext.Center = true
        stontext.Outline = true
        stontext.Font = 2
        stontext.Size = 13
        stontext.Color = Color3.new(1, 0.984313, 0)
        stontext.Text = "ThunderStruck Tree/Cactus"
    
        local function upper()
            local c
            c = game:GetService("RunService").RenderStepped:Connect(function()
                if base:FindFirstChild("Strike2") then
    
                    local dropvector, onscreen = camera:WorldToViewportPoint(base.Position)
                    stontext.Position = Vector2.new(dropvector.X, dropvector.Y)
                    if onscreen then
                        if lst then
    
                            stontext.Visible = true
                        else
                            stontext.Visible = false
                        end
                    else
                        stontext.Visible = false
                    end
                end
                local antinils
                antinils = pcall(function()
                    
                    local swamp
                        swamp = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_Swamp"].Trees.ChildRemoved:Connect(function(v)
                            if v == base.Parent then
                                    
                                stontext:Remove()
                                c:Disconnect()
    
                                swamp:Disconnect()
                            end
                        end)
                    local raidcaynons
                    raidcaynons = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_RaiderCanyons"].Vegetation.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            raidcaynons:Disconnect()
                        end
                    end)
                    local mountain
                    mountain = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_Mountains"].Trees.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            mountain:Disconnect()
                        end
                    end)
                    local plain
                    plain = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_Plains"].Trees.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            plain:Disconnect()
                        end
                    end)
                    local desert
                    desert = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_Desert"].Trees.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            desert:Disconnect()
                        end
                    end)
                    local forest
                    forest = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_Forest"].Trees.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            forest:Disconnect()
                        end
                    end)
                    local bearpaw
                    bearpaw = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_BearpawValley"].Trees.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            bearpaw:Disconnect()
                        end
                    end)
                    local silverhill
                    silverhill = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_Silverhills"].Trees.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            silverhill:Disconnect()
                        end
                    end)
                    local highlands
                    highlands = game:GetService("Workspace")["WORKSPACE_Geometry"]["REGION_Highlands"].Trees.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                                    
                            stontext:Remove()
                            c:Disconnect()
    
                            highlands:Disconnect()
                        end
                    end)
                    local cactai
                    cactai = game:GetService("Workspace").Ignore.FoliageModel.ChildRemoved:Connect(function(v)
                        if v == base.Parent then
                            stontext:Remove()
                            c:Disconnect()
    
                            cactai:Disconnect()
                        end
                    end)
                end)
            end)
        end
        coroutine.wrap(upper)()
    end
    
    for i,base in ipairs(game:GetService("Workspace")["WORKSPACE_Geometry"]:GetDescendants()) do
        if base.Name == "Strike2" then
            coroutine.wrap(Drawstrike)(base.Parent)
        end
     end
    
    game:GetService("Workspace")["WORKSPACE_Geometry"].DescendantAdded:Connect(function(v)
        if v.Name == "Strike2" then
            coroutine.wrap(Drawstrike)(v.Parent)
        end
    end)
    game:GetService("Workspace").Ignore.FoliageModel.DescendantAdded:Connect(function(v)
        if v.Name == "Strike2" then
            coroutine.wrap(Drawstrike)(v.Parent)
        end
    end)
end)
    Section:NewLabel("Visuals")
    Section:NewButton("Clear Fog", "delete fog from game", function()
        game.Lighting.Atmosphere:Destroy() game.Lighting.DepthOfField:Destroy() game.Lighting.FogStart = 1e20 game.Lighting.FogEnd = 1e20
    end)
    Section:NewToggle("Full bright", "Great for the night", function(state)
        if state then
            loadstring(game:HttpGet("https://pastebin.com/raw/13fxDjAY", true))()
        else
            loadstring(game:HttpGet("https://pastebin.com/raw/13fxDjAY", true))()
        end
    end)
    Section:NewButton("KeyStrokes", "Its a very good keystrokes", function()
        loadstring(game:HttpGet("https://system-exodus.com/scripts/misc-releases/Keystrokes.lua",true))()
    end)
    
    
    local Tab = Window:NewTab("Misc")
    local Section = Tab:NewSection("Solo script")
    Section:NewButton("idk", "Changue Sky", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\78\97\117\103\104\116\121\78\97\117\103\104\116\121\47\68\101\99\97\108\115"))()
    end)
    Section:NewButton("Server Hop", "If you click this you automatic go to other server", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\86\100\117\66\84\50\110\116"))()
    end)
    Section:NewButton("Remove textures | Fps boost", "", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\70\112\115\66\111\111\115\116\84\101\120\116\117\114\101"))()
    end)
    Section:NewButton("Spin", "Spin power = 15", function()
        _G.PowerDam = 15
    
    local bambam = Instance.new("BodyThrust")
    bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
    bambam.Force = Vector3.new(_G.PowerDam,0,_G.PowerDam)
    bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
    
    end)
    
    Section:NewButton("Max Zoom", "No cap", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\77\97\120\90\111\111\109\47\76\69\83\83\71\79\79\90\79\79\77"))()
    end)
    Section:NewButton("Spy Chat", "Only in ohio", function()
        loadstring(game:HttpGet('https://cdn.y2k06.xyz/lua/SpyChat.lua', true))()
    end)
    Section:NewButton("Free cam", "Press SHITF+P For turn on", function()
        loadstring(game:HttpGet("https://pastebin.com/raw/ct8Kq5F0", true))()
    end)
    Section:NewButton("Hide Name", "Replace you name in the PlayerList", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\97\112\105\46\117\112\108\111\97\100\46\115\121\115\116\101\109\115\47\112\97\115\116\101\115\47\84\113\102\72\97\51\53\53\75\108\48\67\47\114\97\119",true))()
    end)
    
    
    
    local Tab = Window:NewTab("Guis")
    local Section = Tab:NewSection("Guis!")
    Section:NewButton("Owl Hub", "Great Hub with Aimbot and Esp", function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt", true))()
    end)
    Section:NewButton("Ping and Fps", "Nothing", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\56\120\99\57\90\57\54\113"))()
    end)
    Section:NewButton("All ore finder", "Great gui with ore esp", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\47\75\101\111\110\101\71\105\116\104\117\98\47\109\97\105\110\47\87\105\108\100\87\101\115\116\69\115\112\79\114\101\115"))()
    end)
    Section:NewButton("Music Player", "Nothing", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\106\48\102\55\76\104\86\89"))()
    end)
    
    -- Main
    local Tab = Window:NewTab("Fly")
    local Section = Tab:NewSection("Solo script")
    
    -- SETUP
    _G.FlySpeed = 15
    _G.flykeybind = G
    if _G.Setup then
    else
        _G.Setup = true
    end
    
    -- UI And Fly Functions
    Section:NewButton("CFRAME FLY (Reset on death)", "Make Player Fly (KeyBind = G)!", function()
        spawn(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/LegitH3x0R/Roblox-Scripts/main/AEBypassing/RootAnchor.lua"))()
    
            local UIS = game:GetService("UserInputService")
            local OnRender = game:GetService("RunService").RenderStepped
            
            local Player = game:GetService("Players").LocalPlayer
            local Character = Player.Character or Player.CharacterAdded:Wait()
            
            local Camera = workspace.CurrentCamera
            local Root = Character:WaitForChild("HumanoidRootPart")
            local C1, C2, C3;
            local Nav = {Flying = false, Forward = false, Backward = false, Left = false, Right = false}
            C1 = UIS.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.Keyboard then
                    if Input.KeyCode == Enum.KeyCode.G then
                        
                        Nav.Flying = not Nav.Flying
                        Root.Anchored = Nav.Flying
                    elseif Input.KeyCode == Enum.KeyCode.W then
                        Nav.Forward = true
                    elseif Input.KeyCode == Enum.KeyCode.S then
                        Nav.Backward = true
                    elseif Input.KeyCode == Enum.KeyCode.A then
                        Nav.Left = true
                    elseif Input.KeyCode == Enum.KeyCode.D then
                        Nav.Right = true
                    end
                end
            end)
            
            C2 = UIS.InputEnded:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.Keyboard then
                    if Input.KeyCode == Enum.KeyCode.W then
                        Nav.Forward = false
                    elseif Input.KeyCode == Enum.KeyCode.S then
                        Nav.Backward = false
                    elseif Input.KeyCode == Enum.KeyCode.A then
                        Nav.Left = false
                    elseif Input.KeyCode == Enum.KeyCode.D then
                        Nav.Right = false
                    end
                end
            end)
            
            C3 = Camera:GetPropertyChangedSignal("CFrame"):Connect(function()
                if Nav.Flying then
                    Root.CFrame = CFrame.new(Root.CFrame.Position, Root.CFrame.Position + Camera.CFrame.LookVector)
                end
            end)
            
            while true do
                local Delta = OnRender:Wait()
                if Nav.Flying then
                    if Nav.Forward then
                        Root.CFrame = Root.CFrame + (Camera.CFrame.LookVector * (Delta * _G.FlySpeed))
                    end
                    if Nav.Backward then
                        Root.CFrame = Root.CFrame + (-Camera.CFrame.LookVector * (Delta * _G.FlySpeed))
                    end
                    if Nav.Left then
                        Root.CFrame = Root.CFrame + (-Camera.CFrame.RightVector * (Delta * _G.FlySpeed))
                    end
                    if Nav.Right then
                        Root.CFrame = Root.CFrame + (Camera.CFrame.RightVector * (Delta * _G.FlySpeed))
                    end
                end
            end
        end)
    end)
    
    Section:NewSlider("CFrame Fly Speed", "Recommended speed without ragdoll:28", 70, 5, function(s) -- 70 (MaxValue) | 5 (MinValue)
        _G.FlySpeed = s
    end)
    Section:NewButton("Enter Ragdoll for Any fly speed", "MMM", function()
        -- Obtener el personaje del jugador local
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Obtener la instancia HumanoidRootPart del personaje
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Teletransportar el personaje hacia arriba
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
    end)
    Section:NewLabel("========================================")
    Section:NewSlider("Fly Speed", "Speed of the Fly and noclip gui", 80, 1, function(s) -- 28 (MaxValue) | 0 (MinValue)
        _G.Fly = s
    end)
    Section:NewSlider("NoclipFly Speed", "Speed of the CFrame Fly!", 80, 1, function(s) -- 28 (MaxValue) | 0 (MinValue)
        _G.NoclipFly = s
    end)
    Section:NewButton("Fly and noclip gui", "Modified by Solo script", function()
       local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local TextLabel_2 = Instance.new("TextLabel")
    local TextButton = Instance.new("TextButton")
    local TextButton_2 = Instance.new("TextButton")
    
    --Properties:
    
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Frame.Position = UDim2.new(0.0833889246, 0, 0.562569201, 0)
    Frame.Size = UDim2.new(0, 309, 0, 244)
    
    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel.Position = UDim2.new(-0.00203825813, 0, -0.00307051861, 0)
    TextLabel.Size = UDim2.new(0, 309, 0, 25)
    TextLabel.Font = Enum.Font.SourceSans
    TextLabel.Text = "Fly and noclip Gui"
    TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.TextScaled = true
    TextLabel.TextSize = 14.000
    TextLabel.TextWrapped = true
    
    TextLabel_2.Parent = Frame
    TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextLabel_2.Position = UDim2.new(-0.00203825813, 0, 0.894470453, 0)
    TextLabel_2.Size = UDim2.new(0, 309, 0, 25)
    TextLabel_2.Font = Enum.Font.SourceSans
    TextLabel_2.Text = "Modified by Solo Script"
    TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel_2.TextScaled = true
    TextLabel_2.TextSize = 14.000
    TextLabel_2.TextWrapped = true
    
    TextButton.Parent = Frame
    TextButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextButton.Position = UDim2.new(0.588996768, 0, 0.279716104, 0)
    TextButton.Size = UDim2.new(0.369741112, 0, 0.433398396, 0)
    TextButton.Font = Enum.Font.SourceSans
    TextButton.Text = "Fly"
    TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.TextScaled = true
    TextButton.TextSize = 14.000
    TextButton.TextStrokeTransparency = 0.000
    TextButton.TextWrapped = true
    
    TextButton_2.Parent = Frame
    TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextButton_2.Position = UDim2.new(0.0622977614, 0, 0.28381446, 0)
    TextButton_2.Size = UDim2.new(0.372168273, 0, 0.429300278, 0)
    TextButton_2.Font = Enum.Font.SourceSans
    TextButton_2.Text = "Noclip+fly"
    TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton_2.TextScaled = true
    TextButton_2.TextSize = 14.000
    TextButton_2.TextStrokeTransparency = 0.000
    TextButton_2.TextWrapped = true
    
    -- Scripts:
    
    local function INDYFQN_fake_script() -- Frame.GuiDrag 
        local script = Instance.new('LocalScript', Frame)
    
        local 	Frame = script.Parent.Parent.Frame
        
        Frame.Draggable = true
        Frame.Active = true
        
    end
    coroutine.wrap(INDYFQN_fake_script)()
    local function TZCHT_fake_script() -- TextButton.LocalScript 
        local script = Instance.new('LocalScript', TextButton)
    
        local keys = {
            LeftShift = false,
        }
        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
            if key == "0" then
                keys.LeftShift = true
            end
        end)
        game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(key)
            if key == "0" then
                keys.LeftShift = false
            end
        end)
        local hack = false
        script.Parent.MouseButton1Click:Connect(function()
            hack = not hack
            if hack then
                -- Obtener el personaje del jugador local
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Obtener la instancia HumanoidRootPart del personaje
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Teletransportar el personaje hacia arriba
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
                script.Parent.Text = "Fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,0)
                local humanoid = nil
                while hack do
                    local fps = game["Run Service"].RenderStepped:Wait()
                    if not humanoid or not humanoid.Parent or not humanoid.Parent.Parent then
                        if game.Players.LocalPlayer.Character then
                            if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                                humanoid = game.Players.LocalPlayer.Character.Humanoid
                                humanoid.PlatformStand = true
                            end
                        end
                    else
                        humanoid.PlatformStand = true
                        if humanoid.RootPart then
                            if humanoid.RootPart:FindFirstChild("NoGravity") then
                                humanoid.RootPart.NoGravity.Force = Vector3.new(0,workspace.Gravity*humanoid.RootPart.AssemblyMass,0)
                            else
                                local no = Instance.new("BodyForce",humanoid.RootPart)
                                no.Name = "NoGravity"
                                no.Force = Vector3.new(0,workspace.Gravity*humanoid.RootPart.AssemblyMass,0)
                            end
                            local vel = humanoid.MoveDirection*humanoid.WalkSpeed
                            if humanoid.Jump then
                                vel = vel+Vector3.new(0,humanoid.WalkSpeed,0)
                            end
                            if keys.LeftShift then
                                vel = vel+Vector3.new(0,-humanoid.WalkSpeed,0)
                            end
                            humanoid.RootPart.Velocity = ((humanoid.RootPart.Velocity-vel)*(0.75^(30/(1/fps))))+vel
                            getgenv().WalkSpeedValue = _G.Fly; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                        end
                    end
                end
            else
                script.Parent.Text = "Fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
                game["Run Service"].RenderStepped:Wait()
                game["Run Service"].RenderStepped:Wait()
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                    game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
                    if game.Players.LocalPlayer.Character.Humanoid.RootPart and game.Players.LocalPlayer.Character.Humanoid.RootPart:FindFirstChild("NoGravity") then
                        game.Players.LocalPlayer.Character.Humanoid.RootPart.NoGravity:Destroy()
                        getgenv().WalkSpeedValue = 16; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                    end
                end
            end
        end)
    end
    coroutine.wrap(TZCHT_fake_script)()
    local function WYLWY_fake_script() -- TextButton_2.LocalScript 
        local script = Instance.new('LocalScript', TextButton_2)
    
        local keys = {
            LeftShift = false,
        }
        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
            if key == "0" then
                keys.LeftShift = true
            end
        end)
        game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(key)
            if key == "0" then
                keys.LeftShift = false
            end
        end)
        local hack = false
        script.Parent.MouseButton1Click:Connect(function()
            hack = not hack
            if hack then
                -- Obtener el personaje del jugador local
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Obtener la instancia HumanoidRootPart del personaje
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Teletransportar el personaje hacia arriba
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
wait(0.001)
local newPosition = rootPart.CFrame + Vector3.new(0, -200, 0) -- cambiar el valor "50" seg√∫n la altura deseada
rootPart.CFrame = newPosition
                script.Parent.Text = "Noclip+fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,0)
                local humanoid = nil
                while hack do
                    local fps = game["Run Service"].RenderStepped:Wait()
                    if not humanoid or not humanoid.Parent or not humanoid.Parent.Parent then
                        if game.Players.LocalPlayer.Character then
                            if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                                humanoid = game.Players.LocalPlayer.Character.Humanoid
                                if humanoid.RootPart then
                                    humanoid.RootPart.Anchored = true
                                    getgenv().WalkSpeedValue = _G.NoclipFly; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                                end
                            end
                        end
                    else
                        if humanoid.RootPart then
                            humanoid.RootPart.Anchored = true
                            local vel = humanoid.MoveDirection*humanoid.WalkSpeed
                            if humanoid.Jump then
                                vel = vel+Vector3.new(0,humanoid.WalkSpeed,0)
                            end
                            if keys.LeftShift then
                                vel = vel+Vector3.new(0,-humanoid.WalkSpeed,0)
                            end
                            humanoid.RootPart.Velocity = ((humanoid.RootPart.Velocity-vel)*(0.75^(30/(1/fps))))+vel
                            humanoid.RootPart.CFrame = (humanoid.RootPart.CFrame+(humanoid.RootPart.Velocity*fps))*CFrame.Angles(humanoid.RootPart.RotVelocity.X*fps,humanoid.RootPart.RotVelocity.Y*fps,humanoid.RootPart.RotVelocity.Z*fps)
                        end
                    end
                end
            else
                script.Parent.Text = "Noclip+fly"
                script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
                game["Run Service"].RenderStepped:Wait()
                game["Run Service"].RenderStepped:Wait()
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.RootPart then
                    game.Players.LocalPlayer.Character.Humanoid.RootPart.Anchored = false
                    getgenv().WalkSpeedValue = 16; -- Cambia el 100 por el valor que quieras
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                end
            end
        end)
    end
    coroutine.wrap(WYLWY_fake_script)()
    local function XFAYFBB_fake_script() -- ScreenGui.GuiDrag 
        local script = Instance.new('LocalScript', ScreenGui)
    
        local gui = script.Parent.Parent.Frame --Change this on your mainFrame
        
        Frame.Draggable = true
        Frame.Active = true
        
    end
    coroutine.wrap(XFAYFBB_fake_script)()
    end)
    print("script made by solo script")
    Section:NewLabel("========================================")
    Section:NewButton("Fly | Horse fly (OP)", "Press Z to toggle", function()
        loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\70\108\121\47\72\111\114\115\101\102\108\121\47\90\122\122"))()
    end)
    local Tab = Window:NewTab("Credits")
    local Section = Tab:NewSection("------------------------------------------------------------------")
    Section:NewLabel("Creator : Solo script")
    Section:NewLabel("Solo script founder : lolocahhh45")
    Section:NewLabel("Discord-https://discord.com/invite/fzSAVMKGzv")
    Section:NewKeybind("Gui toggle", "Toggle gui with F or changue to other key", Enum.KeyCode.F, function()
        Library:ToggleUI()
    end)
    Section:NewButton("COPY DISCORD SERVER", "", function()
        setclipboard("https://discord.com/invite/fzSAVMKGzv")
    end)
    --Get id acces =

-- setclipboard(game:GetService("RbxAnalyticsService"):GetClientId())

Section:NewLabel("AntiCheatBypasser")
Section:NewLabel("Using this you can't shoot")

Section:NewButton("AntiCheat tab", "LoL", function()
    local Tab = Window:NewTab("AntiCheat")
        local Section = Tab:NewSection("Solo script")
Section:NewLabel("get anti cheat bypass on discord")
        Section:NewSlider("WalkSpeed", "Just walkspeed changuer", 90, 16, function(s)
            getgenv().WalkSpeedValue = s;
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)

        Section:NewButton("Noclip", "That is great no?", function()
            if _G.Noclip == nil or not _G.Noclip.Connected then
        lp = game:service'Players'.LocalPlayer
        _G.Noclip = game:service'RunService'.Stepped:Connect(function()
        lp.Character.Head.CanCollide = false
        lp.Character.LowerTorso.CanCollide = false
        lp.Character.UpperTorso.CanCollide = false
        lp.Character.HumanoidRootPart.CanCollide = false
        if lp.Character:FindFirstChild'Badge' then
        lp.Character.Badge.CanCollide = false
        end
        end)
        end
        end)
        Section:NewSlider("Cframe walk speed", "OP", 5, 0, function(x) -- 5 (MaxValue) | 1 (MinValue)
                _G.CframeWalk = x
            end)
            Section:NewButton("Cframe walk", "CFrame walk (Press LeftShift)", function()
                local Player = game:GetService'Players'.LocalPlayer;
            local UIS = game:GetService'UserInputService';
            UIS.InputBegan:connect(function(UserInput)
                    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.LeftShift then
                        _G.Running = true
                            while wait(0.001) and _G.Running == true do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * _G.CframeWalk
            end
                    end
            end)
            UIS.InputEnded:connect(function(UserInput)
                    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.LeftShift then
                            _G.Running = false
                    end
            end)
            end)

        
        Section:NewToggle("Inf Jump", "Jump in air ü§ë", function(state)
            if state then
                loadstring(game:HttpGet("https://pastebin.com/raw/HQsQysa8", true))()
            else
                _G.infinjump = false
         
        local Player = game:GetService("Players").LocalPlayer
        local Mouse = Player:GetMouse()
        Mouse.KeyDown:connect(function(k)
        if _G.infinjump then
        if k:byte() == 32 then
        Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        Humanoid:ChangeState("Jumping")
        wait(0.1)
        Humanoid:ChangeState("Seated")
        end
        end
        end)
            end
        end)
        Section:NewButton("Click tp", "CTRL + CLICK", function()
            noclip = false
        local UIS = game:GetService("UserInputService")
        local Player = game.Players.LocalPlayer
        local Mouse = Player:GetMouse()
        
        
        function GetCharacter()
           return game.Players.LocalPlayer.Character
        end
        
        function Teleport(pos)
           local Char = GetCharacter()
           if Char then
               Char:MoveTo(pos)
           end
        end
        
        
        UIS.InputBegan:Connect(function(input)
           if input.UserInputType == Enum.UserInputType.MouseButton1 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
               Teleport(Mouse.Hit.p)
           end
        end)
        end)
        
        
        

Section:NewLabel("Others gui")
        Section:NewButton("Utility GUI", "Modified by solo script (made by ???)", function()
            local ui = loadstring(game:HttpGet('https://raw.githubusercontent.com/BoaHacker/ROBLOX/main/ui', true))()
        
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        local antiAFK = true
        player.Idled:connect(function()
            if antiAFK then
                game.VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                wait(1)
                game.VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            end
        end)
        
        local Player = ui:CreateWindow({
            text = 'Utility'
        })
        
        local Settings = ui:CreateWindow({
            text = 'Destroy'
        })
        
        Player:AddToggle('Infinite Jump', function(state)
            getgenv().InfiniteJump = state
            game.UserInputService.JumpRequest:connect(function()
                if not getgenv().InfiniteJump then return end
                player.Character.Humanoid:ChangeState('Jumping')
            end)
        end)
        Player:AddToggle('Click to TP', function(state)
            getgenv().ClicktoTP = state
            mouse.Button1Down:Connect(function()
                if not getgenv().ClicktoTP then return end
                player.Character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z) * CFrame.Angles(0, math.rad(player.Character.HumanoidRootPart.Orientation.Y), 0)
            end)
        end)
        
        
        
        Player:AddToggle('Noclip', function(state)
            getgenv().Noclip = state
            while true do
                if not getgenv().Noclip then return end
                game.RunService.Stepped:wait()
                for i, v in pairs(player.Character:GetDescendants()) do
                    if v:IsA('BasePart') then
                        v.CanCollide = false
                    end
                end
            end
        end)
        for i, v in pairs(workspace:GetChildren()) do
            if v.Name == 'Core' then
                v:Destroy()
            end
        end
        local Core = Instance.new('Part', workspace)
        Core.Name = 'Core'
        Core.Size = Vector3.new(0.05, 0.05, 0.05)
        Core.CanCollide = false
        workspace:WaitForChild('Core')
        local torso = workspace.Core
        local speed = 10
        local keys = {a = false, d = false, w = false, s = false}
        local e1
        local e2
        local function Fly()
            local pos = Instance.new('BodyPosition', torso)
            local gyro = Instance.new('BodyGyro', torso)
            pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
            pos.position = torso.Position
            gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            gyro.cframe = torso.CFrame
            repeat
                wait()
                player.Character.Humanoid.PlatformStand = true
                local new = gyro.cframe - gyro.cframe.p + pos.position
                if not keys.w and not keys.s and not keys.a and not keys.d then
                    speed = 5
                end
                if keys.w then
                    new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                    speed = speed + 0
                end
                if keys.s then
                    new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                    speed = speed + 0
                end
                if keys.d then
                    new = new * CFrame.new(speed, 0, 0)
                    speed = speed + 0
                end
                if keys.a then
                    new = new * CFrame.new(-speed, 0, 0)
                    speed = speed + 0
                end
                if speed > 10 then
                    speed = 5
                end
                pos.position = new.p
                if keys.w then
                    gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
                elseif keys.s then
                    gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
                else
                    gyro.cframe = workspace.CurrentCamera.CoordinateFrame
                end
            until getgenv().Fly == false
            if gyro then gyro:Destroy() end
            if pos then pos:Destroy() end
            player.Character.Humanoid.PlatformStand = false
            speed = 10
        end
        e1 = mouse.KeyDown:connect(function(key)
            if not torso or not torso.Parent then e1:disconnect() e2:disconnect() return end
            if key == 'w' then
                keys.w = true
            elseif key == 's' then
                keys.s = true
            elseif key == 'a' then
                keys.a = true
            elseif key == 'd' then
                keys.d = true
            end
        end)
        e2 = mouse.KeyUp:connect(function(key)
            if key == 'w' then
                keys.w = false
            elseif key == 's' then
                keys.s = false
            elseif key == 'a' then
                keys.a = false
            elseif key == 'd' then
                keys.d = false
            end
        end)
        Player:AddToggle('Fly', function(state)
            getgenv().Fly = state
            if not getgenv().Fly then for i, v in pairs(workspace:FindFirstChild('Core'):GetChildren()) do v:Destroy() end return end
            local Weld = Instance.new('Weld', Core)
            Weld.Part0 = Core
            Weld.Part1 = player.Character.HumanoidRootPart
            Weld.C0 = CFrame.new(0, 0, 0)
            Fly()
        end)
        
        
        
        Player:AddBox('Walkspeed', function(state)
            if tonumber(state.Text) ~= nil then
                player.Character.Humanoid.WalkSpeed = state.Text
            end
        end)
        
        Player:AddBox('Jumppower', function(state)
            if tonumber(state.Text) ~= nil then
                if player.Character.Humanoid.UseJumpPower == true then
                    player.Character.Humanoid.JumpPower = state.Text
                else
                    player.Character.Humanoid.JumpHeight = state.Text
                end
            end
        end)
        
        Player:AddBox('Gravity', function(state)
            if tonumber(state.Text) ~= nil then
                workspace.Gravity = state.Text
            end
        end)
        
        Player:AddButton('Reset to Default', function()
            player.Character.Humanoid.WalkSpeed = 16
            if player.Character.Humanoid.UseJumpPower == true then
                player.Character.Humanoid.JumpPower = 50
            else
                player.Character.Humanoid.JumpHeight = 7.2
            end
            player.Character.Humanoid.JumpPower = 50
            workspace.Gravity = 196.2
        end)
        
        Settings:AddButton('Destroy gui xD', function()
            ui.gui:Destroy()
            antiAFK = false
            getgenv().InfiniteJump = false
            getgenv().ClicktoTP = false
            getgenv().Noclip = false
            getgenv().Fly = false
            player.Character.Humanoid.WalkSpeed = 16
            if player.Character.Humanoid.UseJumpPower == true then
                player.Character.Humanoid.JumpPower = 50
            else
                player.Character.Humanoid.JumpHeight = 7.2
            end
            workspace.Gravity = 196.2
        end)
        end)

        Section:NewLabel("Teleports coming soon")
        
        
        
        
        

        -- Main
Section:NewLabel("Fly")     -- SETUP
        _G.FlySpeedxd = 50
        _G.FlySpeeed3 = 50
        if _G.Setup then
        else
            _G.Setup = true
        end
        
        -- UI And Fly Functions
        Section:NewButton("CFRAME FLY (KeyBind 'G')", "Make Player Fly (KeyBind = G)!", function()
            spawn(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/LegitH3x0R/Roblox-Scripts/main/AEBypassing/RootAnchor.lua"))()
        
                local UIS = game:GetService("UserInputService")
                local OnRender = game:GetService("RunService").RenderStepped
                
                local Player = game:GetService("Players").LocalPlayer
                local Character = Player.Character or Player.CharacterAdded:Wait()
                
                local Camera = workspace.CurrentCamera
                local Root = Character:WaitForChild("HumanoidRootPart")
                local C1, C2, C3;
                local Nav = {Flying = false, Forward = false, Backward = false, Left = false, Right = false}
                C1 = UIS.InputBegan:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.Keyboard then
                        if Input.KeyCode == Enum.KeyCode.G then
                            Nav.Flying = not Nav.Flying
                            Root.Anchored = Nav.Flying
                        elseif Input.KeyCode == Enum.KeyCode.W then
                            Nav.Forward = true
                        elseif Input.KeyCode == Enum.KeyCode.S then
                            Nav.Backward = true
                        elseif Input.KeyCode == Enum.KeyCode.A then
                            Nav.Left = true
                        elseif Input.KeyCode == Enum.KeyCode.D then
                            Nav.Right = true
                        end
                    end
                end)
                
                C2 = UIS.InputEnded:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.Keyboard then
                        if Input.KeyCode == Enum.KeyCode.W then
                            Nav.Forward = false
                        elseif Input.KeyCode == Enum.KeyCode.S then
                            Nav.Backward = false
                        elseif Input.KeyCode == Enum.KeyCode.A then
                            Nav.Left = false
                        elseif Input.KeyCode == Enum.KeyCode.D then
                            Nav.Right = false
                        end
                    end
                end)
                
                C3 = Camera:GetPropertyChangedSignal("CFrame"):Connect(function()
                    if Nav.Flying then
                        Root.CFrame = CFrame.new(Root.CFrame.Position, Root.CFrame.Position + Camera.CFrame.LookVector)
                    end
                end)
                
                while true do
                    local Delta = OnRender:Wait()
                    if Nav.Flying then
                        if Nav.Forward then
                            Root.CFrame = Root.CFrame + (Camera.CFrame.LookVector * (Delta * _G.FlySpeedxd))
                        end
                        if Nav.Backward then
                            Root.CFrame = Root.CFrame + (-Camera.CFrame.LookVector * (Delta * _G.FlySpeedxd))
                        end
                        if Nav.Left then
                            Root.CFrame = Root.CFrame + (-Camera.CFrame.RightVector * (Delta * _G.FlySpeedxd))
                        end
                        if Nav.Right then
                            Root.CFrame = Root.CFrame + (Camera.CFrame.RightVector * (Delta * _G.FlySpeedxd))
                        end
                    end
                end
            end)
        end)
        
        Section:NewSlider("CFrame Fly Speed", "Speed of the CFrame Fly!", 250, 10, function(s) -- 250 (MaxValue) | 0 (MinValue)
            _G.FlySpeedxd = s
        end)
        Section:NewLabel("========================================")
        Section:NewSlider("Fly Speed", "Speed of the Fly and noclip gui", 250, 10, function(s) -- 250 (MaxValue) | 0 (MinValue)
            _G.Flyxd = s
        end)
        Section:NewSlider("NoclipFly Speed", "Speed of the CFrame Fly!", 250, 10, function(s) -- 250 (MaxValue) | 0 (MinValue)
            _G.NoclipFlyxd = s
        end)
        Section:NewButton("Fly and noclip gui", "Modified by Solo script", function()
           local ScreenGui = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local TextLabel = Instance.new("TextLabel")
        local TextLabel_2 = Instance.new("TextLabel")
        local TextButton = Instance.new("TextButton")
        local TextButton_2 = Instance.new("TextButton")
        
        --Properties:
        
        ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        Frame.Parent = ScreenGui
        Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Frame.Position = UDim2.new(0.0833889246, 0, 0.562569201, 0)
        Frame.Size = UDim2.new(0, 309, 0, 244)
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        TextLabel.Position = UDim2.new(-0.00203825813, 0, -0.00307051861, 0)
        TextLabel.Size = UDim2.new(0, 309, 0, 25)
        TextLabel.Font = Enum.Font.SourceSans
        TextLabel.Text = "Fly and noclip Gui"
        TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextWrapped = true
        
        TextLabel_2.Parent = Frame
        TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        TextLabel_2.Position = UDim2.new(-0.00203825813, 0, 0.894470453, 0)
        TextLabel_2.Size = UDim2.new(0, 309, 0, 25)
        TextLabel_2.Font = Enum.Font.SourceSans
        TextLabel_2.Text = "Modified by Solo Script"
        TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel_2.TextScaled = true
        TextLabel_2.TextSize = 14.000
        TextLabel_2.TextWrapped = true
        
        TextButton.Parent = Frame
        TextButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextButton.Position = UDim2.new(0.588996768, 0, 0.279716104, 0)
        TextButton.Size = UDim2.new(0.369741112, 0, 0.433398396, 0)
        TextButton.Font = Enum.Font.SourceSans
        TextButton.Text = "Fly"
        TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton.TextScaled = true
        TextButton.TextSize = 14.000
        TextButton.TextStrokeTransparency = 0.000
        TextButton.TextWrapped = true
        
        TextButton_2.Parent = Frame
        TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextButton_2.Position = UDim2.new(0.0622977614, 0, 0.28381446, 0)
        TextButton_2.Size = UDim2.new(0.372168273, 0, 0.429300278, 0)
        TextButton_2.Font = Enum.Font.SourceSans
        TextButton_2.Text = "Noclip+fly"
        TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton_2.TextScaled = true
        TextButton_2.TextSize = 14.000
        TextButton_2.TextStrokeTransparency = 0.000
        TextButton_2.TextWrapped = true
        
        -- Scripts:
        
        local function INDYFQN_fake_script() -- Frame.GuiDrag 
            local script = Instance.new('LocalScript', Frame)
        
            local 	Frame = script.Parent.Parent.Frame
            
            Frame.Draggable = true
            Frame.Active = true
            
            
            
        end
        coroutine.wrap(INDYFQN_fake_script)()
        local function TZCHT_fake_script() -- TextButton.LocalScript 
            local script = Instance.new('LocalScript', TextButton)
        
            local keys = {
                LeftShift = false,
            }
            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                if key == "0" then
                    keys.LeftShift = true
                end
            end)
            game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(key)
                if key == "0" then
                    keys.LeftShift = false
                end
            end)
            local hack = false
            script.Parent.MouseButton1Click:Connect(function()
                hack = not hack
                if hack then
                    script.Parent.Text = "Fly"
                    script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,0)
                    local humanoid = nil
                    while hack do
                        local fps = game["Run Service"].RenderStepped:Wait()
                        if not humanoid or not humanoid.Parent or not humanoid.Parent.Parent then
                            if game.Players.LocalPlayer.Character then
                                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                                    humanoid = game.Players.LocalPlayer.Character.Humanoid
                                    humanoid.PlatformStand = true
                                end
                            end
                        else
                            humanoid.PlatformStand = true
                            if humanoid.RootPart then
                                if humanoid.RootPart:FindFirstChild("NoGravity") then
                                    humanoid.RootPart.NoGravity.Force = Vector3.new(0,workspace.Gravity*humanoid.RootPart.AssemblyMass,0)
                                else
                                    local no = Instance.new("BodyForce",humanoid.RootPart)
                                    no.Name = "NoGravity"
                                    no.Force = Vector3.new(0,workspace.Gravity*humanoid.RootPart.AssemblyMass,0)
                                end
                                local vel = humanoid.MoveDirection*humanoid.WalkSpeed
                                if humanoid.Jump then
                                    vel = vel+Vector3.new(0,humanoid.WalkSpeed,0)
                                end
                                if keys.LeftShift then
                                    vel = vel+Vector3.new(0,-humanoid.WalkSpeed,0)
                                end
                                humanoid.RootPart.Velocity = ((humanoid.RootPart.Velocity-vel)*(0.75^(30/(1/fps))))+vel
                                getgenv().WalkSpeedValue = _G.Flyxd; -- Cambia el 100 por el valor que quieras
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                            end
                        end
                    end
                else
                    script.Parent.Text = "Fly"
                    script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
                    game["Run Service"].RenderStepped:Wait()
                    game["Run Service"].RenderStepped:Wait()
                    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                        game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
                        if game.Players.LocalPlayer.Character.Humanoid.RootPart and game.Players.LocalPlayer.Character.Humanoid.RootPart:FindFirstChild("NoGravity") then
                            game.Players.LocalPlayer.Character.Humanoid.RootPart.NoGravity:Destroy()
                            getgenv().WalkSpeedValue = 16; -- Cambia el 100 por el valor que quieras
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                        end
                    end
                end
            end)
        end
        coroutine.wrap(TZCHT_fake_script)()
        local function WYLWY_fake_script() -- TextButton_2.LocalScript 
            local script = Instance.new('LocalScript', TextButton_2)
        
            local keys = {
                LeftShift = false,
            }
            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                if key == "0" then
                    keys.LeftShift = true
                end
            end)
            game.Players.LocalPlayer:GetMouse().KeyUp:Connect(function(key)
                if key == "0" then
                    keys.LeftShift = false
                end
            end)
            local hack = false
            script.Parent.MouseButton1Click:Connect(function()
                hack = not hack
                if hack then
                    script.Parent.Text = "Noclip+fly"
                    script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,0)
                    local humanoid = nil
                    while hack do
                        local fps = game["Run Service"].RenderStepped:Wait()
                        if not humanoid or not humanoid.Parent or not humanoid.Parent.Parent then
                            if game.Players.LocalPlayer.Character then
                                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                                    humanoid = game.Players.LocalPlayer.Character.Humanoid
                                    if humanoid.RootPart then
                                        humanoid.RootPart.Anchored = true
                                        getgenv().WalkSpeedValue = _G.NoclipFlyxd; -- Cambia el 100 por el valor que quieras
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                                    end
                                end
                            end
                        else
                            if humanoid.RootPart then
                                humanoid.RootPart.Anchored = true
                                local vel = humanoid.MoveDirection*humanoid.WalkSpeed
                                if humanoid.Jump then
                                    vel = vel+Vector3.new(0,humanoid.WalkSpeed,0)
                                end
                                if keys.LeftShift then
                                    vel = vel+Vector3.new(0,-humanoid.WalkSpeed,0)
                                end
                                humanoid.RootPart.Velocity = ((humanoid.RootPart.Velocity-vel)*(0.75^(30/(1/fps))))+vel
                                humanoid.RootPart.CFrame = (humanoid.RootPart.CFrame+(humanoid.RootPart.Velocity*fps))*CFrame.Angles(humanoid.RootPart.RotVelocity.X*fps,humanoid.RootPart.RotVelocity.Y*fps,humanoid.RootPart.RotVelocity.Z*fps)
                            end
                        end
                    end
                else
                    script.Parent.Text = "Noclip+fly"
                    script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
                    game["Run Service"].RenderStepped:Wait()
                    game["Run Service"].RenderStepped:Wait()
                    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.RootPart then
                        game.Players.LocalPlayer.Character.Humanoid.RootPart.Anchored = false
                        getgenv().WalkSpeedValue = 16; -- Cambia el 100 por el valor que quieras
        local Player = game:service'Players'.LocalPlayer;
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
                    end
                end
            end)
        end
        coroutine.wrap(WYLWY_fake_script)()
        local function XFAYFBB_fake_script() -- ScreenGui.GuiDrag 
            local script = Instance.new('LocalScript', ScreenGui)
        
            local gui = script.Parent.Parent.Frame --Change this on your mainFrame
            
            Frame.Draggable = true
            Frame.Active = true
            
        end
        coroutine.wrap(XFAYFBB_fake_script)()
        end)
        Section:NewLabel("========================================")
        Section:NewButton("Fly | (Not recommended fly)", "Press Z to toggle", function()
            loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\75\101\111\110\101\71\105\116\104\117\98\83\112\97\109\47\109\97\105\110\47\70\108\121\47\72\111\114\115\101\102\108\121\47\90\122\122"))()
        end)
        Section:NewLabel("========================================")
        Section:NewSlider("Op Start Fly Speed", "Speed of the OP Fly!", 300, 10, function(s) -- 250 (MaxValue) | 0 (MinValue)
            _G.FlySpeeed3 = s
        end)
        
        
        Section:NewButton("Op Fly", "Press ? to toggle", function()
            -- Bring to you by 7alexv7
        -- Enjoy the script!
        
        -- Instances:
        
        local FlyGui = Instance.new("ScreenGui")
        local Frame = Instance.new("Frame")
        local TextButton = Instance.new("TextButton")
        local TextLabel = Instance.new("TextLabel")
        
        --Properties:
        
        FlyGui.Name = "FlyGui"
        FlyGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
        
        Frame.Parent = FlyGui
        Frame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        Frame.BorderSizePixel = 0
        Frame.Position = UDim2.new(0.0685602352, 0, 0.168769717, 0)
        Frame.Size = UDim2.new(0.264544547, 0, 0.100000024, 0)
        
        TextButton.Parent = Frame
        TextButton.BackgroundColor3 = Color3.fromRGB(66, 66, 66)
        TextButton.BorderSizePixel = 0
        TextButton.Position = UDim2.new(0.06324628, 0, 0.400667697, 0)
        TextButton.Size = UDim2.new(0.871157169, 0, 0.495614201, 0)
        TextButton.Font = Enum.Font.ArialBold
        TextButton.Text = "Fly"
        TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextButton.TextScaled = true
        TextButton.TextSize = 14.000
        TextButton.TextStrokeTransparency = 0.000
        TextButton.TextWrapped = true
        
        TextLabel.Parent = Frame
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.Size = UDim2.new(0, 86, 0, 24)
        TextLabel.Font = Enum.Font.Oswald
        TextLabel.Text = "Robbed XD"
        TextLabel.TextColor3 = Color3.fromRGB(255, 0, 255)
        TextLabel.TextScaled = true
        TextLabel.TextSize = 14.000
        TextLabel.TextWrapped = true
        
        -- Scripts:
        
        local function NQWSTGE_fake_script() -- Frame.Fly 
            local script = Instance.new('LocalScript', Frame)
        
            local plr = script.Parent.Parent.Parent.Parent
            repeat wait() until plr and plr.Character and plr.Character:findFirstChild("HumanoidRootPart") and plr.Character:findFirstChild("Humanoid") 
            local mouse = game.Players.LocalPlayer:GetMouse()  
            repeat wait() until mouse
            
            local torso = plr.Character.HumanoidRootPart 
            local flying = false
            local deb = true 
            local ctrl = {f = 0, b = 0, l = 0, r = 0} 
            local lastctrl = {f = 0, b = 0, l = 0, r = 0} 
            local maxspeed = _G.FlySpeeed3
            local speed = _G.FlySpeeed3
            function Fly() 
            local bg = Instance.new("BodyGyro", torso) 
            bg.P = 9e4 
            bg.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
            bg.cframe = torso.CFrame 
            local bv = Instance.new("BodyVelocity", torso) 
            bv.velocity = Vector3.new(0,0.1,0) 
            bv.maxForce = Vector3.new(9e9, 9e9, 9e9) 
            repeat wait() 
            plr.Character.Humanoid.PlatformStand = true 
            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then 
            speed = speed+.5+(speed/maxspeed) 
            if speed > maxspeed then 
            speed = maxspeed 
            end 
            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then 
            speed = speed-1 
            if speed < 0 then 
                            speed = 0
                        else
                            speed = _G.FlySpeeed3
            end 
            end 
            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then 
            bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
            lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r} 
            elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then 
            bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
            else 
            bv.velocity = Vector3.new(0,0.1,0) 
            end 
            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
            until not flying 
            ctrl = {f = 0, b = 0, l = 0, r = 0} 
            lastctrl = {f = 0, b = 0, l = 0, r = 0} 
                
            bg:Destroy() 
            bv:Destroy() 
                plr.Character.Humanoid.PlatformStand = false 
                speed = _G.FlySpeeed3
            end 
            
            mouse.KeyDown:connect(function(key) 
            if key:lower() == "e" then 
                    if flying then flying = false 
                        speed = _G.FlySpeeed3
            else 
            flying = true 
            Fly()
            
            end 
            elseif key:lower() == "w" then 
            ctrl.f = 1 
            elseif key:lower() == "s" then 
            ctrl.b = -1 
            elseif key:lower() == "a" then 
            ctrl.l = -1 
            elseif key:lower() == "d" then 
            ctrl.r = 1 
            end 
            end) 
            mouse.KeyUp:connect(function(key) 
            if key:lower() == "w" then 
            ctrl.f = 0 
            elseif key:lower() == "s" then 
            ctrl.b = 0 
            elseif key:lower() == "a" then 
            ctrl.l = 0 
            elseif key:lower() == "d" then 
            ctrl.r = 0 
            end 
            end)
            
            plr.Character.Humanoid.StateChanged:Connect(function(o,n)
                if n == Enum.HumanoidStateType.Running then
                    ctrl.f = 1
                else
                    ctrl.f = 0
                end
            
            end)
            script.Parent.TextButton.MouseButton1Click:Connect(function()
                if flying then
                    flying = false
                    speed = _G.FlySpeeed3
                else
                    flying = true
                    Fly()
                end
            end)
            
        end
        coroutine.wrap(NQWSTGE_fake_script)()
        local function RAQA_fake_script() -- Frame.Buttons 
            local script = Instance.new('LocalScript', Frame)
        
            local Trigger = script.Parent.MiniTrext
            local IsMini = false
            function CreateTween(Instance,Style,Direction,Time,table,RepeatCount,CanRepeat,Delay)
                local ts = game:GetService("TweenService")
                local TweenInfo = TweenInfo.new(Time,Style,Direction,RepeatCount,CanRepeat,Delay)
                local Tween = ts:Create(Instance,TweenInfo,table)
                repeat wait() until Tween ~= nil
                return Tween
                
            end
            Trigger.MouseButton1Click:Connect(function()
                if IsMini then
                    CreateTween(script.Parent,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0.5,{Size = UDim2.new(0.265, 0,0.1, 0)},0,false,0.1):Play()
                    IsMini = false
                    Trigger.Text = "-"
                else
                    CreateTween(script.Parent,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0.5,{Size = UDim2.new(0.265, 0,0.042, 0)},0,false,0.1):Play()
                    IsMini = true
                    Trigger.Text = "+"
                end
            end)
            script.Parent.Delete.MouseButton1Click:Connect(function()
                script.Parent.Parent:Destroy()
            end)
        end
        coroutine.wrap(RAQA_fake_script)()
        local function TKVUMP_fake_script() -- Frame.Drag Gui 
            local script = Instance.new('LocalScript', Frame)
        
            local UserInputService = game:GetService("UserInputService")
            
            local gui = script.Parent
            
            local dragging
            local dragInput
            local dragStart
            local startPos
            
            local function update(input)
                local delta = input.Position - dragStart
                gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
            
            gui.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = gui.Position
                    
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)
            
            gui.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)
        end
        coroutine.wrap(TKVUMP_fake_script)()
        end)


        
end)

Section:NewLabel("5923 LINES OF CODE üò≠")
		else
		print(game.Players.LocalPlayer, "No verified")
	end
end
